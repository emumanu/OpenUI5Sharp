<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Retyped.es2015.core</name>
    </assembly>
    <members>
        <member name="M:Retyped.es2015_core.Array`1.find``1(Retyped.es2015_core.Array{`0}.findFn{``0})">
            <summary>
            Returns the value of the first element in the array where predicate is true, and undefined
            otherwise.
            immediately returns that element value. Otherwise, find returns undefined.
            </summary>
            <param name = "predicate">
            find calls predicate once for each element of the array, in ascending
            order, until it finds one where predicate returns true. If such an element is found, find
            </param>
        </member>
        <member name="M:Retyped.es2015_core.Array`1.find``1(Retyped.es2015_core.Array{`0}.findFn{``0},System.Object)">
            <summary>
            Returns the value of the first element in the array where predicate is true, and undefined
            otherwise.
            immediately returns that element value. Otherwise, find returns undefined.
            </summary>
            <param name = "predicate">
            find calls predicate once for each element of the array, in ascending
            order, until it finds one where predicate returns true. If such an element is found, find
            </param>
            <param name = "thisArg">
            If provided, it will be used as the this value for each invocation of
            predicate. If it is not provided, undefined is used instead.
            </param>
        </member>
        <member name="M:Retyped.es2015_core.Array`1.find(Retyped.es2015_core.Array{`0}.findFn2)">
            <summary>
            Returns the value of the first element in the array where predicate is true, and undefined
            otherwise.
            immediately returns that element value. Otherwise, find returns undefined.
            </summary>
            <param name = "predicate">
            find calls predicate once for each element of the array, in ascending
            order, until it finds one where predicate returns true. If such an element is found, find
            </param>
        </member>
        <member name="M:Retyped.es2015_core.Array`1.find(Retyped.es2015_core.Array{`0}.findFn2,System.Object)">
            <summary>
            Returns the value of the first element in the array where predicate is true, and undefined
            otherwise.
            immediately returns that element value. Otherwise, find returns undefined.
            </summary>
            <param name = "predicate">
            find calls predicate once for each element of the array, in ascending
            order, until it finds one where predicate returns true. If such an element is found, find
            </param>
            <param name = "thisArg">
            If provided, it will be used as the this value for each invocation of
            predicate. If it is not provided, undefined is used instead.
            </param>
        </member>
        <member name="M:Retyped.es2015_core.Array`1.findIndex(Retyped.es2015_core.Array{`0}.findIndexFn)">
            <summary>
            Returns the index of the first element in the array where predicate is true, and -1
            otherwise.
            findIndex immediately returns that element index. Otherwise, findIndex returns -1.
            </summary>
            <param name = "predicate">
            find calls predicate once for each element of the array, in ascending
            order, until it finds one where predicate returns true. If such an element is found,
            </param>
        </member>
        <member name="M:Retyped.es2015_core.Array`1.findIndex(Retyped.es2015_core.Array{`0}.findIndexFn,System.Object)">
            <summary>
            Returns the index of the first element in the array where predicate is true, and -1
            otherwise.
            findIndex immediately returns that element index. Otherwise, findIndex returns -1.
            </summary>
            <param name = "predicate">
            find calls predicate once for each element of the array, in ascending
            order, until it finds one where predicate returns true. If such an element is found,
            </param>
            <param name = "thisArg">
            If provided, it will be used as the this value for each invocation of
            predicate. If it is not provided, undefined is used instead.
            </param>
        </member>
        <member name="M:Retyped.es2015_core.Array`1.fill(`0)">
            <summary>
            Returns the this object after filling the section identified by start and end with value
            </summary>
            <param name = "value">value to fill array section with</param>
        </member>
        <member name="M:Retyped.es2015_core.Array`1.fill(`0,System.Double)">
            <summary>
            Returns the this object after filling the section identified by start and end with value
            </summary>
            <param name = "value">value to fill array section with</param>
            <param name = "start">
            index to start filling the array at. If start is negative, it is treated as
            length+start where length is the length of the array.
            </param>
        </member>
        <member name="M:Retyped.es2015_core.Array`1.fill(`0,System.Double,System.Double)">
            <summary>
            Returns the this object after filling the section identified by start and end with value
            </summary>
            <param name = "value">value to fill array section with</param>
            <param name = "start">
            index to start filling the array at. If start is negative, it is treated as
            length+start where length is the length of the array.
            </param>
            <param name = "end">
            index to stop filling the array at. If end is negative, it is treated as
            length+end.
            </param>
        </member>
        <member name="M:Retyped.es2015_core.Array`1.copyWithin(System.Double,System.Double)">
            <summary>
            Returns the this object after copying a section of the array identified by start and end
            to the same array starting at position target
            </summary>
            <param name = "target">
            If target is negative, it is treated as length+target where length is the
            length of the array.
            </param>
            <param name = "start">
            If start is negative, it is treated as length+start. If end is negative, it
            is treated as length+end.
            </param>
        </member>
        <member name="M:Retyped.es2015_core.Array`1.copyWithin(System.Double,System.Double,System.Double)">
            <summary>
            Returns the this object after copying a section of the array identified by start and end
            to the same array starting at position target
            </summary>
            <param name = "target">
            If target is negative, it is treated as length+target where length is the
            length of the array.
            </param>
            <param name = "start">
            If start is negative, it is treated as length+start. If end is negative, it
            is treated as length+end.
            </param>
            <param name = "end">If not specified, length of the this object is used as its default value.</param>
        </member>
        <member name="M:Retyped.es2015_core.ArrayConstructor.from``1(Retyped.es5.ArrayLike{``0})">
            <summary>
            Creates an array from an array-like object.
            </summary>
            <param name = "arrayLike">An array-like object to convert to an array.</param>
        </member>
        <member name="M:Retyped.es2015_core.ArrayConstructor.from``2(Retyped.es5.ArrayLike{``0},Retyped.es2015_core.ArrayConstructor.fromFn{``0,``1})">
            <summary>
            Creates an array from an iterable object.
            </summary>
            <param name = "arrayLike">An array-like object to convert to an array.</param>
            <param name = "mapfn">A mapping function to call on every element of the array.</param>
        </member>
        <member name="M:Retyped.es2015_core.ArrayConstructor.from``2(Retyped.es5.ArrayLike{``0},Retyped.es2015_core.ArrayConstructor.fromFn{``0,``1},System.Object)">
            <summary>
            Creates an array from an iterable object.
            </summary>
            <param name = "arrayLike">An array-like object to convert to an array.</param>
            <param name = "mapfn">A mapping function to call on every element of the array.</param>
            <param name = "thisArg">Value of 'this' used to invoke the mapfn.</param>
        </member>
        <member name="M:Retyped.es2015_core.ArrayConstructor.of``1(``0[])">
            <summary>
            Returns a new array from a set of elements.
            </summary>
            <param name = "items">A set of elements to include in the new array object.</param>
        </member>
        <member name="P:Retyped.es2015_core.Function.name">
            <summary>
            Returns the name of the function. Function names are read-only and can not be changed.
            </summary>
        </member>
        <member name="M:Retyped.es2015_core.Math.clz32(System.Double)">
            <summary>
            Returns the number of leading zero bits in the 32-bit binary representation of a number.
            </summary>
            <param name = "x">A numeric expression.</param>
        </member>
        <member name="M:Retyped.es2015_core.Math.imul(System.Double,System.Double)">
            <summary>
            Returns the result of 32-bit multiplication of two numbers.
            </summary>
            <param name = "x">First number</param>
            <param name = "y">Second number</param>
        </member>
        <member name="M:Retyped.es2015_core.Math.sign(System.Double)">
            <summary>
            Returns the sign of the x, indicating whether x is positive, negative or zero.
            </summary>
            <param name = "x">The numeric expression to test</param>
        </member>
        <member name="M:Retyped.es2015_core.Math.log10(System.Double)">
            <summary>
            Returns the base 10 logarithm of a number.
            </summary>
            <param name = "x">A numeric expression.</param>
        </member>
        <member name="M:Retyped.es2015_core.Math.log2(System.Double)">
            <summary>
            Returns the base 2 logarithm of a number.
            </summary>
            <param name = "x">A numeric expression.</param>
        </member>
        <member name="M:Retyped.es2015_core.Math.log1p(System.Double)">
            <summary>
            Returns the natural logarithm of 1 + x.
            </summary>
            <param name = "x">A numeric expression.</param>
        </member>
        <member name="M:Retyped.es2015_core.Math.expm1(System.Double)">
            <summary>
            Returns the result of (e^x - 1), which is an implementation-dependent approximation to
            subtracting 1 from the exponential function of x (e raised to the power of x, where e
            is the base of the natural logarithms).
            </summary>
            <param name = "x">A numeric expression.</param>
        </member>
        <member name="M:Retyped.es2015_core.Math.cosh(System.Double)">
            <summary>
            Returns the hyperbolic cosine of a number.
            </summary>
            <param name = "x">A numeric expression that contains an angle measured in radians.</param>
        </member>
        <member name="M:Retyped.es2015_core.Math.sinh(System.Double)">
            <summary>
            Returns the hyperbolic sine of a number.
            </summary>
            <param name = "x">A numeric expression that contains an angle measured in radians.</param>
        </member>
        <member name="M:Retyped.es2015_core.Math.tanh(System.Double)">
            <summary>
            Returns the hyperbolic tangent of a number.
            </summary>
            <param name = "x">A numeric expression that contains an angle measured in radians.</param>
        </member>
        <member name="M:Retyped.es2015_core.Math.acosh(System.Double)">
            <summary>
            Returns the inverse hyperbolic cosine of a number.
            </summary>
            <param name = "x">A numeric expression that contains an angle measured in radians.</param>
        </member>
        <member name="M:Retyped.es2015_core.Math.asinh(System.Double)">
            <summary>
            Returns the inverse hyperbolic sine of a number.
            </summary>
            <param name = "x">A numeric expression that contains an angle measured in radians.</param>
        </member>
        <member name="M:Retyped.es2015_core.Math.atanh(System.Double)">
            <summary>
            Returns the inverse hyperbolic tangent of a number.
            </summary>
            <param name = "x">A numeric expression that contains an angle measured in radians.</param>
        </member>
        <member name="M:Retyped.es2015_core.Math.hypot(System.Double[])">
            <summary>
            Returns the square root of the sum of squares of its arguments.
            If there is only one argument, the result is the absolute value.
            If any argument is +Infinity or -Infinity, the result is +Infinity.
            If any argument is NaN, the result is NaN.
            If all arguments are either +0 or −0, the result is +0.
            </summary>
            <param name = "values">
            Values to compute the square root for.
            If no arguments are passed, the result is +0.
            </param>
        </member>
        <member name="M:Retyped.es2015_core.Math.trunc(System.Double)">
            <summary>
            Returns the integral part of the a numeric expression, x, removing any fractional digits.
            If x is already an integer, the result is x.
            </summary>
            <param name = "x">A numeric expression.</param>
        </member>
        <member name="M:Retyped.es2015_core.Math.fround(System.Double)">
            <summary>
            Returns the nearest single precision float representation of a number.
            </summary>
            <param name = "x">A numeric expression.</param>
        </member>
        <member name="M:Retyped.es2015_core.Math.cbrt(System.Double)">
            <summary>
            Returns an implementation-dependent approximation to the cube root of number.
            </summary>
            <param name = "x">A numeric expression.</param>
        </member>
        <member name="P:Retyped.es2015_core.NumberConstructor.EPSILON">
            <summary>
            The value of Number.EPSILON is the difference between 1 and the smallest value greater than 1
            that is representable as a Number value, which is approximately:
            2.2204460492503130808472633361816 x 10‍−‍16.
            </summary>
        </member>
        <member name="M:Retyped.es2015_core.NumberConstructor.isFinite(System.Double)">
            <summary>
            Returns true if passed value is finite.
            Unlike the global isFinite, Number.isFinite doesn't forcibly convert the parameter to a
            number. Only finite values of the type number, result in true.
            </summary>
            <param name = "number">A numeric value.</param>
        </member>
        <member name="M:Retyped.es2015_core.NumberConstructor.isInteger(System.Double)">
            <summary>
            Returns true if the value passed is an integer, false otherwise.
            </summary>
            <param name = "number">A numeric value.</param>
        </member>
        <member name="M:Retyped.es2015_core.NumberConstructor.isNaN(System.Double)">
            <summary>
            Returns a Boolean value that indicates whether a value is the reserved value NaN (not a
            number). Unlike the global isNaN(), Number.isNaN() doesn't forcefully convert the parameter
            to a number. Only values of the type number, that are also NaN, result in true.
            </summary>
            <param name = "number">A numeric value.</param>
        </member>
        <member name="M:Retyped.es2015_core.NumberConstructor.isSafeInteger(System.Double)">
            <summary>
            Returns true if the value passed is a safe integer.
            </summary>
            <param name = "number">A numeric value.</param>
        </member>
        <member name="P:Retyped.es2015_core.NumberConstructor.MAX_SAFE_INTEGER">
            <summary>
            The value of the largest integer n such that n and n + 1 are both exactly representable as
            a Number value.
            The value of Number.MAX_SAFE_INTEGER is 9007199254740991 2^53 − 1.
            </summary>
        </member>
        <member name="P:Retyped.es2015_core.NumberConstructor.MIN_SAFE_INTEGER">
            <summary>
            The value of the smallest integer n such that n and n − 1 are both exactly representable as
            a Number value.
            The value of Number.MIN_SAFE_INTEGER is −9007199254740991 (−(2^53 − 1)).
            </summary>
        </member>
        <member name="M:Retyped.es2015_core.NumberConstructor.parseFloat(System.String)">
            <summary>
            Converts a string to a floating-point number.
            </summary>
            <param name = "string">A string that contains a floating-point number.</param>
        </member>
        <member name="M:Retyped.es2015_core.NumberConstructor.parseInt(System.String)">
            <summary>
            Converts A string to an integer.
            All other strings are considered decimal.
            </summary>
        </member>
        <member name="M:Retyped.es2015_core.NumberConstructor.parseInt(System.String,System.Double)">
            <summary>
            Converts A string to an integer.
            All other strings are considered decimal.
            </summary>
            <param name = "radix">
            A value between 2 and 36 that specifies the base of the number in numString.
            If this argument is not supplied, strings with a prefix of '0x' are considered hexadecimal.
            </param>
        </member>
        <member name="M:Retyped.es2015_core.Object.hasOwnProperty(Retyped.es2015_core.PropertyKey)">
            <summary>
            Determines whether an object has a property with the specified name.
            </summary>
            <param name = "v">A property name.</param>
        </member>
        <member name="M:Retyped.es2015_core.Object.propertyIsEnumerable(Retyped.es2015_core.PropertyKey)">
            <summary>
            Determines whether a specified property is enumerable.
            </summary>
            <param name = "v">A property name.</param>
        </member>
        <member name="M:Retyped.es2015_core.ObjectConstructor.assign``2(``0,``1)">
            <summary>
            Copy the values of all of the enumerable own properties from one or more source objects to a
            target object. Returns the target object.
            </summary>
            <param name = "target">The target object to copy to.</param>
            <param name = "source">The source object from which to copy properties.</param>
        </member>
        <member name="M:Retyped.es2015_core.ObjectConstructor.assign``3(``0,``1,``2)">
            <summary>
            Copy the values of all of the enumerable own properties from one or more source objects to a
            target object. Returns the target object.
            </summary>
            <param name = "target">The target object to copy to.</param>
            <param name = "source1">The first source object from which to copy properties.</param>
            <param name = "source2">The second source object from which to copy properties.</param>
        </member>
        <member name="M:Retyped.es2015_core.ObjectConstructor.assign``4(``0,``1,``2,``3)">
            <summary>
            Copy the values of all of the enumerable own properties from one or more source objects to a
            target object. Returns the target object.
            </summary>
            <param name = "target">The target object to copy to.</param>
            <param name = "source1">The first source object from which to copy properties.</param>
            <param name = "source2">The second source object from which to copy properties.</param>
            <param name = "source3">The third source object from which to copy properties.</param>
        </member>
        <member name="M:Retyped.es2015_core.ObjectConstructor.assign(Retyped.IObject,System.Object[])">
            <summary>
            Copy the values of all of the enumerable own properties from one or more source objects to a
            target object. Returns the target object.
            </summary>
            <param name = "target">The target object to copy to.</param>
            <param name = "sources">One or more source objects from which to copy properties</param>
        </member>
        <member name="M:Retyped.es2015_core.ObjectConstructor.getOwnPropertySymbols(System.Object)">
            <summary>
            Returns an array of all symbol properties found directly on object o.
            </summary>
            <param name = "o">Object to retrieve the symbols from.</param>
        </member>
        <member name="M:Retyped.es2015_core.ObjectConstructor.is(System.Object,System.Object)">
            <summary>
            Returns true if the values are the same value, false otherwise.
            </summary>
            <param name = "value1">The first value.</param>
            <param name = "value2">The second value.</param>
        </member>
        <member name="M:Retyped.es2015_core.ObjectConstructor.setPrototypeOf(System.Object,Retyped.IObject)">
            <summary>
            Sets the prototype of a specified object o to  object proto or null. Returns the object o.
            </summary>
            <param name = "o">The object to change its prototype.</param>
            <param name = "proto">The value of the new prototype or null.</param>
        </member>
        <member name="M:Retyped.es2015_core.ObjectConstructor.getOwnPropertyDescriptor(System.Object,Retyped.es2015_core.PropertyKey)">
            <summary>
            Gets the own property descriptor of the specified object.
            An own property descriptor is one that is defined directly on the object and is not
            inherited from the object's prototype.
            </summary>
            <param name = "o">Object that contains the property.</param>
        </member>
        <member name="M:Retyped.es2015_core.ObjectConstructor.defineProperty(System.Object,Retyped.es2015_core.PropertyKey,Retyped.es5.PropertyDescriptor)">
            <summary>
            Adds a property to an object, or modifies attributes of an existing property.
            </summary>
            <param name = "o">
            Object on which to add or modify the property. This can be a native JavaScript
            object (that is, a user-defined object or a built in object) or a DOM object.
            </param>
            <param name = "attributes">
            Descriptor for the property. It can be for a data property or an accessor
            property.
            </param>
        </member>
        <member name="M:Retyped.es2015_core.ReadonlyArray`1.find``1(Retyped.es2015_core.ReadonlyArray{`0}.findFn{``0})">
            <summary>
            Returns the value of the first element in the array where predicate is true, and undefined
            otherwise.
            immediately returns that element value. Otherwise, find returns undefined.
            </summary>
            <param name = "predicate">
            find calls predicate once for each element of the array, in ascending
            order, until it finds one where predicate returns true. If such an element is found, find
            </param>
        </member>
        <member name="M:Retyped.es2015_core.ReadonlyArray`1.find``1(Retyped.es2015_core.ReadonlyArray{`0}.findFn{``0},System.Object)">
            <summary>
            Returns the value of the first element in the array where predicate is true, and undefined
            otherwise.
            immediately returns that element value. Otherwise, find returns undefined.
            </summary>
            <param name = "predicate">
            find calls predicate once for each element of the array, in ascending
            order, until it finds one where predicate returns true. If such an element is found, find
            </param>
            <param name = "thisArg">
            If provided, it will be used as the this value for each invocation of
            predicate. If it is not provided, undefined is used instead.
            </param>
        </member>
        <member name="M:Retyped.es2015_core.ReadonlyArray`1.find(Retyped.es2015_core.ReadonlyArray{`0}.findFn2)">
            <summary>
            Returns the value of the first element in the array where predicate is true, and undefined
            otherwise.
            immediately returns that element value. Otherwise, find returns undefined.
            </summary>
            <param name = "predicate">
            find calls predicate once for each element of the array, in ascending
            order, until it finds one where predicate returns true. If such an element is found, find
            </param>
        </member>
        <member name="M:Retyped.es2015_core.ReadonlyArray`1.find(Retyped.es2015_core.ReadonlyArray{`0}.findFn2,System.Object)">
            <summary>
            Returns the value of the first element in the array where predicate is true, and undefined
            otherwise.
            immediately returns that element value. Otherwise, find returns undefined.
            </summary>
            <param name = "predicate">
            find calls predicate once for each element of the array, in ascending
            order, until it finds one where predicate returns true. If such an element is found, find
            </param>
            <param name = "thisArg">
            If provided, it will be used as the this value for each invocation of
            predicate. If it is not provided, undefined is used instead.
            </param>
        </member>
        <member name="M:Retyped.es2015_core.ReadonlyArray`1.findIndex(Retyped.es2015_core.ReadonlyArray{`0}.findIndexFn)">
            <summary>
            Returns the index of the first element in the array where predicate is true, and -1
            otherwise.
            findIndex immediately returns that element index. Otherwise, findIndex returns -1.
            </summary>
            <param name = "predicate">
            find calls predicate once for each element of the array, in ascending
            order, until it finds one where predicate returns true. If such an element is found,
            </param>
        </member>
        <member name="M:Retyped.es2015_core.ReadonlyArray`1.findIndex(Retyped.es2015_core.ReadonlyArray{`0}.findIndexFn,System.Object)">
            <summary>
            Returns the index of the first element in the array where predicate is true, and -1
            otherwise.
            findIndex immediately returns that element index. Otherwise, findIndex returns -1.
            </summary>
            <param name = "predicate">
            find calls predicate once for each element of the array, in ascending
            order, until it finds one where predicate returns true. If such an element is found,
            </param>
            <param name = "thisArg">
            If provided, it will be used as the this value for each invocation of
            predicate. If it is not provided, undefined is used instead.
            </param>
        </member>
        <member name="P:Retyped.es2015_core.RegExp.flags">
            <summary>
            Returns a string indicating the flags of the regular expression in question. This field is read-only.
            The characters in this string are sequenced and concatenated in the following order:
            - "g" for global
            - "i" for ignoreCase
            - "m" for multiline
            - "u" for unicode
            - "y" for sticky
            If no flags are set, the value is the empty string.
            </summary>
        </member>
        <member name="P:Retyped.es2015_core.RegExp.sticky">
            <summary>
            Returns a Boolean value indicating the state of the sticky flag (y) used with a regular
            expression. Default is false. Read-only.
            </summary>
        </member>
        <member name="P:Retyped.es2015_core.RegExp.unicode">
            <summary>
            Returns a Boolean value indicating the state of the Unicode flag (u) used with a regular
            expression. Default is false. Read-only.
            </summary>
        </member>
        <member name="M:Retyped.es2015_core.String.codePointAt(System.Double)">
            <summary>
            Returns a nonnegative integer Number less than 1114112 (0x110000) that is the code point
            value of the UTF-16 encoded code point starting at the string element at position pos in
            the String resulting from converting this object to a String.
            If there is no element at that position, the result is undefined.
            If a valid UTF-16 surrogate pair does not begin at pos, the result is the code unit at pos.
            </summary>
        </member>
        <member name="M:Retyped.es2015_core.String.includes(System.String)">
            <summary>
            Returns true if searchString appears as a substring of the result of converting this
            object to a String, at one or more positions that are
            greater than or equal to position; otherwise, returns false.
            </summary>
            <param name = "searchString">search string</param>
        </member>
        <member name="M:Retyped.es2015_core.String.includes(System.String,System.Double)">
            <summary>
            Returns true if searchString appears as a substring of the result of converting this
            object to a String, at one or more positions that are
            greater than or equal to position; otherwise, returns false.
            </summary>
            <param name = "searchString">search string</param>
            <param name = "position">If position is undefined, 0 is assumed, so as to search all of the String.</param>
        </member>
        <member name="M:Retyped.es2015_core.String.endsWith(System.String)">
            <summary>
            Returns true if the sequence of elements of searchString converted to a String is the
            same as the corresponding elements of this object (converted to a String) starting at
            endPosition – length(this). Otherwise returns false.
            </summary>
        </member>
        <member name="M:Retyped.es2015_core.String.endsWith(System.String,System.Double)">
            <summary>
            Returns true if the sequence of elements of searchString converted to a String is the
            same as the corresponding elements of this object (converted to a String) starting at
            endPosition – length(this). Otherwise returns false.
            </summary>
        </member>
        <member name="M:Retyped.es2015_core.String.normalize(Retyped.es2015_core.Literals.Options.form)">
            <summary>
            Returns the String value result of normalizing the string into the normalization form
            named by form as specified in Unicode Standard Annex #15, Unicode Normalization Forms.
            </summary>
            <param name = "form">
            Applicable values: "NFC", "NFD", "NFKC", or "NFKD", If not specified default
            is "NFC"
            </param>
        </member>
        <member name="M:Retyped.es2015_core.String.normalize">
            <summary>
            Returns the String value result of normalizing the string into the normalization form
            named by form as specified in Unicode Standard Annex #15, Unicode Normalization Forms.
            </summary>
        </member>
        <member name="M:Retyped.es2015_core.String.normalize(System.String)">
            <summary>
            Returns the String value result of normalizing the string into the normalization form
            named by form as specified in Unicode Standard Annex #15, Unicode Normalization Forms.
            </summary>
            <param name = "form">
            Applicable values: "NFC", "NFD", "NFKC", or "NFKD", If not specified default
            is "NFC"
            </param>
        </member>
        <member name="M:Retyped.es2015_core.String.repeat(System.Double)">
            <summary>
            Returns a String value that is made from count copies appended together. If count is 0,
            the empty string is returned.
            </summary>
            <param name = "count">number of copies to append</param>
        </member>
        <member name="M:Retyped.es2015_core.String.startsWith(System.String)">
            <summary>
            Returns true if the sequence of elements of searchString converted to a String is the
            same as the corresponding elements of this object (converted to a String) starting at
            position. Otherwise returns false.
            </summary>
        </member>
        <member name="M:Retyped.es2015_core.String.startsWith(System.String,System.Double)">
            <summary>
            Returns true if the sequence of elements of searchString converted to a String is the
            same as the corresponding elements of this object (converted to a String) starting at
            position. Otherwise returns false.
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Retyped.es2015_core.String.anchor(System.String)" -->
        <!-- Badly formed XML comment ignored for member "M:Retyped.es2015_core.String.big" -->
        <!-- Badly formed XML comment ignored for member "M:Retyped.es2015_core.String.blink" -->
        <!-- Badly formed XML comment ignored for member "M:Retyped.es2015_core.String.bold" -->
        <!-- Badly formed XML comment ignored for member "M:Retyped.es2015_core.String.fixed" -->
        <!-- Badly formed XML comment ignored for member "M:Retyped.es2015_core.String.fontcolor(System.String)" -->
        <!-- Badly formed XML comment ignored for member "M:Retyped.es2015_core.String.fontsize(System.Double)" -->
        <!-- Badly formed XML comment ignored for member "M:Retyped.es2015_core.String.fontsize(System.String)" -->
        <!-- Badly formed XML comment ignored for member "M:Retyped.es2015_core.String.italics" -->
        <!-- Badly formed XML comment ignored for member "M:Retyped.es2015_core.String.link(System.String)" -->
        <!-- Badly formed XML comment ignored for member "M:Retyped.es2015_core.String.small" -->
        <!-- Badly formed XML comment ignored for member "M:Retyped.es2015_core.String.strike" -->
        <!-- Badly formed XML comment ignored for member "M:Retyped.es2015_core.String.sub" -->
        <!-- Badly formed XML comment ignored for member "M:Retyped.es2015_core.String.sup" -->
        <member name="M:Retyped.es2015_core.StringConstructor.fromCodePoint(System.Double[])">
            <summary>
            Return the String value whose elements are, in order, the elements in the List elements.
            If length is 0, the empty string is returned.
            </summary>
        </member>
        <member name="M:Retyped.es2015_core.StringConstructor.raw(Retyped.es5.TemplateStringsArray,System.Object[])">
            <summary>
            String.raw is intended for use as a tag function of a Tagged Template String. When called
            as such the first argument will be a well formed template call site object and the rest
            parameter will contain the substitution values.
            </summary>
            <param name = "template">A well-formed template string call site representation.</param>
            <param name = "substitutions">A set of substitution values.</param>
        </member>
    </members>
</doc>
