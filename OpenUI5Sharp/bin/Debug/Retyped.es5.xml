<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Retyped.es5</name>
    </assembly>
    <members>
        <member name="F:Retyped.es5.NaN">
            ECMAScript APIs
        </member>
        <member name="M:Retyped.es5.eval(System.String)">
            <summary>
            Evaluates JavaScript code and executes it.
            </summary>
            <param name = "x">A String value that contains valid JavaScript code.</param>
        </member>
        <member name="M:Retyped.es5.parseInt(System.String)">
            <summary>
            Converts A string to an integer.
            All other strings are considered decimal.
            </summary>
            <param name = "s">A string to convert into a number.</param>
        </member>
        <member name="M:Retyped.es5.parseInt(System.String,System.Double)">
            <summary>
            Converts A string to an integer.
            All other strings are considered decimal.
            </summary>
            <param name = "s">A string to convert into a number.</param>
            <param name = "radix">
            A value between 2 and 36 that specifies the base of the number in numString.
            If this argument is not supplied, strings with a prefix of '0x' are considered hexadecimal.
            </param>
        </member>
        <member name="M:Retyped.es5.parseFloat(System.String)">
            <summary>
            Converts a string to a floating-point number.
            </summary>
            <param name = "string">A string that contains a floating-point number.</param>
        </member>
        <member name="M:Retyped.es5.isNaN(System.Double)">
            <summary>
            Returns a Boolean value that indicates whether a value is the reserved value NaN (not a number).
            </summary>
            <param name = "number">A numeric value.</param>
        </member>
        <member name="M:Retyped.es5.isFinite(System.Double)">
            <summary>
            Determines whether a supplied number is finite.
            </summary>
            <param name = "number">Any numeric value.</param>
        </member>
        <member name="M:Retyped.es5.decodeURI(System.String)">
            <summary>
            Gets the unencoded version of an encoded Uniform Resource Identifier (URI).
            </summary>
            <param name = "encodedURI">A value representing an encoded URI.</param>
        </member>
        <member name="M:Retyped.es5.decodeURIComponent(System.String)">
            <summary>
            Gets the unencoded version of an encoded component of a Uniform Resource Identifier (URI).
            </summary>
            <param name = "encodedURIComponent">A value representing an encoded URI component.</param>
        </member>
        <member name="M:Retyped.es5.encodeURI(System.String)">
            <summary>
            Encodes a text string as a valid Uniform Resource Identifier (URI)
            </summary>
            <param name = "uri">A value representing an encoded URI.</param>
        </member>
        <member name="M:Retyped.es5.encodeURIComponent(System.String)">
            <summary>
            Encodes a text string as a valid component of a Uniform Resource Identifier (URI).
            </summary>
            <param name = "uriComponent">A value representing an encoded URI component.</param>
        </member>
        <member name="M:Retyped.es5.escape(System.String)">
            <summary>
            Computes a new string in which certain characters have been replaced by a hexadecimal escape sequence.
            </summary>
            <param name = "string">A string value</param>
        </member>
        <member name="M:Retyped.es5.unescape(System.String)">
            <summary>
            Computes a new string in which hexadecimal escape sequences are replaced with the character that it represents.
            </summary>
            <param name = "string">A string value</param>
        </member>
        <member name="M:Retyped.es5.Function.#ctor(System.String[])">
            <summary>
            Creates a new function.
            </summary>
            <param name = "args">A list of arguments the function accepts.</param>
        </member>
        <member name="M:Retyped.es5.Function.apply(System.Object)">
            <summary>
            Calls the function, substituting the specified object for the this value of the function, and the specified array for the arguments of the function.
            </summary>
            <param name = "thisArg">The object to be used as the this object.</param>
        </member>
        <member name="M:Retyped.es5.Function.apply(System.Object,System.Object)">
            <summary>
            Calls the function, substituting the specified object for the this value of the function, and the specified array for the arguments of the function.
            </summary>
            <param name = "thisArg">The object to be used as the this object.</param>
            <param name = "argArray">A set of arguments to be passed to the function.</param>
        </member>
        <member name="M:Retyped.es5.Function.call(System.Object,System.Object[])">
            <summary>
            Calls a method of an object, substituting another object for the current object.
            </summary>
            <param name = "thisArg">The object to be used as the current object.</param>
            <param name = "argArray">A list of arguments to be passed to the method.</param>
        </member>
        <member name="M:Retyped.es5.Function.bind(System.Object,System.Object[])">
            <summary>
            For a given function, creates a bound function that has the same body as the original function.
            The this object of the bound function is associated with the specified object, and has the specified initial parameters.
            </summary>
            <param name = "thisArg">An object to which the this keyword can refer inside the new function.</param>
            <param name = "argArray">A list of arguments to be passed to the new function.</param>
        </member>
        <member name="M:Retyped.es5.Function.toString">
            <summary>
            Returns a string representation of a function.
            </summary>
        </member>
        <member name="M:Retyped.es5.FunctionConstructor.New(System.String[])">
            <summary>
            Creates a new function.
            </summary>
            <param name = "args">A list of arguments the function accepts.</param>
        </member>
        <member name="P:Retyped.es5.Math.Interface.E">
            <summary>
            The mathematical constant e. This is Euler's number, the base of natural logarithms.
            </summary>
        </member>
        <member name="P:Retyped.es5.Math.Interface.LN10">
            <summary>
            The natural logarithm of 10.
            </summary>
        </member>
        <member name="P:Retyped.es5.Math.Interface.LN2">
            <summary>
            The natural logarithm of 2.
            </summary>
        </member>
        <member name="P:Retyped.es5.Math.Interface.LOG2E">
            <summary>
            The base-2 logarithm of e.
            </summary>
        </member>
        <member name="P:Retyped.es5.Math.Interface.LOG10E">
            <summary>
            The base-10 logarithm of e.
            </summary>
        </member>
        <member name="P:Retyped.es5.Math.Interface.PI">
            <summary>
            Pi. This is the ratio of the circumference of a circle to its diameter.
            </summary>
        </member>
        <member name="P:Retyped.es5.Math.Interface.SQRT1_2">
            <summary>
            The square root of 0.5, or, equivalently, one divided by the square root of 2.
            </summary>
        </member>
        <member name="P:Retyped.es5.Math.Interface.SQRT2">
            <summary>
            The square root of 2.
            </summary>
        </member>
        <member name="M:Retyped.es5.Math.Interface.abs(System.Double)">
            <summary>
            Returns the absolute value of a number (the value without regard to whether it is positive or negative).
            For example, the absolute value of -5 is the same as the absolute value of 5.
            </summary>
            <param name = "x">A numeric expression for which the absolute value is needed.</param>
        </member>
        <member name="M:Retyped.es5.Math.Interface.acos(System.Double)">
            <summary>
            Returns the arc cosine (or inverse cosine) of a number.
            </summary>
            <param name = "x">A numeric expression.</param>
        </member>
        <member name="M:Retyped.es5.Math.Interface.asin(System.Double)">
            <summary>
            Returns the arcsine of a number.
            </summary>
            <param name = "x">A numeric expression.</param>
        </member>
        <member name="M:Retyped.es5.Math.Interface.atan(System.Double)">
            <summary>
            Returns the arctangent of a number.
            </summary>
            <param name = "x">A numeric expression for which the arctangent is needed.</param>
        </member>
        <member name="M:Retyped.es5.Math.Interface.atan2(System.Double,System.Double)">
            <summary>
            Returns the angle (in radians) from the X axis to a point.
            </summary>
            <param name = "y">A numeric expression representing the cartesian y-coordinate.</param>
            <param name = "x">A numeric expression representing the cartesian x-coordinate.</param>
        </member>
        <member name="M:Retyped.es5.Math.Interface.ceil(System.Double)">
            <summary>
            Returns the smallest integer greater than or equal to its numeric argument.
            </summary>
            <param name = "x">A numeric expression.</param>
        </member>
        <member name="M:Retyped.es5.Math.Interface.cos(System.Double)">
            <summary>
            Returns the cosine of a number.
            </summary>
            <param name = "x">A numeric expression that contains an angle measured in radians.</param>
        </member>
        <member name="M:Retyped.es5.Math.Interface.exp(System.Double)">
            <summary>
            Returns e (the base of natural logarithms) raised to a power.
            </summary>
            <param name = "x">A numeric expression representing the power of e.</param>
        </member>
        <member name="M:Retyped.es5.Math.Interface.floor(System.Double)">
            <summary>
            Returns the greatest integer less than or equal to its numeric argument.
            </summary>
            <param name = "x">A numeric expression.</param>
        </member>
        <member name="M:Retyped.es5.Math.Interface.log(System.Double)">
            <summary>
            Returns the natural logarithm (base e) of a number.
            </summary>
            <param name = "x">A numeric expression.</param>
        </member>
        <member name="M:Retyped.es5.Math.Interface.max(System.Double[])">
            <summary>
            Returns the larger of a set of supplied numeric expressions.
            </summary>
            <param name = "values">Numeric expressions to be evaluated.</param>
        </member>
        <member name="M:Retyped.es5.Math.Interface.min(System.Double[])">
            <summary>
            Returns the smaller of a set of supplied numeric expressions.
            </summary>
            <param name = "values">Numeric expressions to be evaluated.</param>
        </member>
        <member name="M:Retyped.es5.Math.Interface.pow(System.Double,System.Double)">
            <summary>
            Returns the value of a base expression taken to a specified power.
            </summary>
            <param name = "x">The base value of the expression.</param>
            <param name = "y">The exponent value of the expression.</param>
        </member>
        <member name="M:Retyped.es5.Math.Interface.random">
            <summary>
            Returns a pseudorandom number between 0 and 1.
            </summary>
        </member>
        <member name="M:Retyped.es5.Math.Interface.round(System.Double)">
            <summary>
            Returns a supplied numeric expression rounded to the nearest number.
            </summary>
            <param name = "x">The value to be rounded to the nearest number.</param>
        </member>
        <member name="M:Retyped.es5.Math.Interface.sin(System.Double)">
            <summary>
            Returns the sine of a number.
            </summary>
            <param name = "x">A numeric expression that contains an angle measured in radians.</param>
        </member>
        <member name="M:Retyped.es5.Math.Interface.sqrt(System.Double)">
            <summary>
            Returns the square root of a number.
            </summary>
            <param name = "x">A numeric expression.</param>
        </member>
        <member name="M:Retyped.es5.Math.Interface.tan(System.Double)">
            <summary>
            Returns the tangent of a number.
            </summary>
            <param name = "x">A numeric expression that contains an angle measured in radians.</param>
        </member>
        <member name="M:Retyped.es5.Date.toString">
            <summary>
            Returns a string representation of a date. The format of the string depends on the locale.
            </summary>
        </member>
        <member name="M:Retyped.es5.Date.toDateString">
            <summary>
            Returns a date as a string value.
            </summary>
        </member>
        <member name="M:Retyped.es5.Date.toTimeString">
            <summary>
            Returns a time as a string value.
            </summary>
        </member>
        <member name="M:Retyped.es5.Date.toLocaleString">
            <summary>
            Returns a value as a string value appropriate to the host environment's current locale.
            </summary>
        </member>
        <member name="M:Retyped.es5.Date.toLocaleDateString">
            <summary>
            Returns a date as a string value appropriate to the host environment's current locale.
            </summary>
        </member>
        <member name="M:Retyped.es5.Date.toLocaleTimeString">
            <summary>
            Returns a time as a string value appropriate to the host environment's current locale.
            </summary>
        </member>
        <member name="M:Retyped.es5.Date.valueOf">
            <summary>
            Returns the stored time value in milliseconds since midnight, January 1, 1970 UTC.
            </summary>
        </member>
        <member name="M:Retyped.es5.Date.getTime">
            <summary>
            Gets the time value in milliseconds.
            </summary>
        </member>
        <member name="M:Retyped.es5.Date.getFullYear">
            <summary>
            Gets the year, using local time.
            </summary>
        </member>
        <member name="M:Retyped.es5.Date.getUTCFullYear">
            <summary>
            Gets the year using Universal Coordinated Time (UTC).
            </summary>
        </member>
        <member name="M:Retyped.es5.Date.getMonth">
            <summary>
            Gets the month, using local time.
            </summary>
        </member>
        <member name="M:Retyped.es5.Date.getUTCMonth">
            <summary>
            Gets the month of a Date object using Universal Coordinated Time (UTC).
            </summary>
        </member>
        <member name="M:Retyped.es5.Date.getDate">
            <summary>
            Gets the day-of-the-month, using local time.
            </summary>
        </member>
        <member name="M:Retyped.es5.Date.getUTCDate">
            <summary>
            Gets the day-of-the-month, using Universal Coordinated Time (UTC).
            </summary>
        </member>
        <member name="M:Retyped.es5.Date.getDay">
            <summary>
            Gets the day of the week, using local time.
            </summary>
        </member>
        <member name="M:Retyped.es5.Date.getUTCDay">
            <summary>
            Gets the day of the week using Universal Coordinated Time (UTC).
            </summary>
        </member>
        <member name="M:Retyped.es5.Date.getHours">
            <summary>
            Gets the hours in a date, using local time.
            </summary>
        </member>
        <member name="M:Retyped.es5.Date.getUTCHours">
            <summary>
            Gets the hours value in a Date object using Universal Coordinated Time (UTC).
            </summary>
        </member>
        <member name="M:Retyped.es5.Date.getMinutes">
            <summary>
            Gets the minutes of a Date object, using local time.
            </summary>
        </member>
        <member name="M:Retyped.es5.Date.getUTCMinutes">
            <summary>
            Gets the minutes of a Date object using Universal Coordinated Time (UTC).
            </summary>
        </member>
        <member name="M:Retyped.es5.Date.getSeconds">
            <summary>
            Gets the seconds of a Date object, using local time.
            </summary>
        </member>
        <member name="M:Retyped.es5.Date.getUTCSeconds">
            <summary>
            Gets the seconds of a Date object using Universal Coordinated Time (UTC).
            </summary>
        </member>
        <member name="M:Retyped.es5.Date.getMilliseconds">
            <summary>
            Gets the milliseconds of a Date, using local time.
            </summary>
        </member>
        <member name="M:Retyped.es5.Date.getUTCMilliseconds">
            <summary>
            Gets the milliseconds of a Date object using Universal Coordinated Time (UTC).
            </summary>
        </member>
        <member name="M:Retyped.es5.Date.getTimezoneOffset">
            <summary>
            Gets the difference in minutes between the time on the local computer and Universal Coordinated Time (UTC).
            </summary>
        </member>
        <member name="M:Retyped.es5.Date.setTime(System.Double)">
            <summary>
            Sets the date and time value in the Date object.
            </summary>
            <param name = "time">A numeric value representing the number of elapsed milliseconds since midnight, January 1, 1970 GMT.</param>
        </member>
        <member name="M:Retyped.es5.Date.setMilliseconds(System.Double)">
            <summary>
            Sets the milliseconds value in the Date object using local time.
            </summary>
            <param name = "ms">A numeric value equal to the millisecond value.</param>
        </member>
        <member name="M:Retyped.es5.Date.setUTCMilliseconds(System.Double)">
            <summary>
            Sets the milliseconds value in the Date object using Universal Coordinated Time (UTC).
            </summary>
            <param name = "ms">A numeric value equal to the millisecond value.</param>
        </member>
        <member name="M:Retyped.es5.Date.setSeconds(System.Double)">
            <summary>
            Sets the seconds value in the Date object using local time.
            </summary>
            <param name = "sec">A numeric value equal to the seconds value.</param>
        </member>
        <member name="M:Retyped.es5.Date.setSeconds(System.Double,System.Double)">
            <summary>
            Sets the seconds value in the Date object using local time.
            </summary>
            <param name = "sec">A numeric value equal to the seconds value.</param>
            <param name = "ms">A numeric value equal to the milliseconds value.</param>
        </member>
        <member name="M:Retyped.es5.Date.setUTCSeconds(System.Double)">
            <summary>
            Sets the seconds value in the Date object using Universal Coordinated Time (UTC).
            </summary>
            <param name = "sec">A numeric value equal to the seconds value.</param>
        </member>
        <member name="M:Retyped.es5.Date.setUTCSeconds(System.Double,System.Double)">
            <summary>
            Sets the seconds value in the Date object using Universal Coordinated Time (UTC).
            </summary>
            <param name = "sec">A numeric value equal to the seconds value.</param>
            <param name = "ms">A numeric value equal to the milliseconds value.</param>
        </member>
        <member name="M:Retyped.es5.Date.setMinutes(System.Double)">
            <summary>
            Sets the minutes value in the Date object using local time.
            </summary>
            <param name = "min">A numeric value equal to the minutes value.</param>
        </member>
        <member name="M:Retyped.es5.Date.setMinutes(System.Double,System.Double)">
            <summary>
            Sets the minutes value in the Date object using local time.
            </summary>
            <param name = "min">A numeric value equal to the minutes value.</param>
            <param name = "sec">A numeric value equal to the seconds value.</param>
        </member>
        <member name="M:Retyped.es5.Date.setMinutes(System.Double,System.Double,System.Double)">
            <summary>
            Sets the minutes value in the Date object using local time.
            </summary>
            <param name = "min">A numeric value equal to the minutes value.</param>
            <param name = "sec">A numeric value equal to the seconds value.</param>
            <param name = "ms">A numeric value equal to the milliseconds value.</param>
        </member>
        <member name="M:Retyped.es5.Date.setUTCMinutes(System.Double)">
            <summary>
            Sets the minutes value in the Date object using Universal Coordinated Time (UTC).
            </summary>
            <param name = "min">A numeric value equal to the minutes value.</param>
        </member>
        <member name="M:Retyped.es5.Date.setUTCMinutes(System.Double,System.Double)">
            <summary>
            Sets the minutes value in the Date object using Universal Coordinated Time (UTC).
            </summary>
            <param name = "min">A numeric value equal to the minutes value.</param>
            <param name = "sec">A numeric value equal to the seconds value.</param>
        </member>
        <member name="M:Retyped.es5.Date.setUTCMinutes(System.Double,System.Double,System.Double)">
            <summary>
            Sets the minutes value in the Date object using Universal Coordinated Time (UTC).
            </summary>
            <param name = "min">A numeric value equal to the minutes value.</param>
            <param name = "sec">A numeric value equal to the seconds value.</param>
            <param name = "ms">A numeric value equal to the milliseconds value.</param>
        </member>
        <member name="M:Retyped.es5.Date.setHours(System.Double)">
            <summary>
            Sets the hour value in the Date object using local time.
            </summary>
            <param name = "hours">A numeric value equal to the hours value.</param>
        </member>
        <member name="M:Retyped.es5.Date.setHours(System.Double,System.Double)">
            <summary>
            Sets the hour value in the Date object using local time.
            </summary>
            <param name = "hours">A numeric value equal to the hours value.</param>
            <param name = "min">A numeric value equal to the minutes value.</param>
        </member>
        <member name="M:Retyped.es5.Date.setHours(System.Double,System.Double,System.Double)">
            <summary>
            Sets the hour value in the Date object using local time.
            </summary>
            <param name = "hours">A numeric value equal to the hours value.</param>
            <param name = "min">A numeric value equal to the minutes value.</param>
            <param name = "sec">A numeric value equal to the seconds value.</param>
        </member>
        <member name="M:Retyped.es5.Date.setHours(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Sets the hour value in the Date object using local time.
            </summary>
            <param name = "hours">A numeric value equal to the hours value.</param>
            <param name = "min">A numeric value equal to the minutes value.</param>
            <param name = "sec">A numeric value equal to the seconds value.</param>
            <param name = "ms">A numeric value equal to the milliseconds value.</param>
        </member>
        <member name="M:Retyped.es5.Date.setUTCHours(System.Double)">
            <summary>
            Sets the hours value in the Date object using Universal Coordinated Time (UTC).
            </summary>
            <param name = "hours">A numeric value equal to the hours value.</param>
        </member>
        <member name="M:Retyped.es5.Date.setUTCHours(System.Double,System.Double)">
            <summary>
            Sets the hours value in the Date object using Universal Coordinated Time (UTC).
            </summary>
            <param name = "hours">A numeric value equal to the hours value.</param>
            <param name = "min">A numeric value equal to the minutes value.</param>
        </member>
        <member name="M:Retyped.es5.Date.setUTCHours(System.Double,System.Double,System.Double)">
            <summary>
            Sets the hours value in the Date object using Universal Coordinated Time (UTC).
            </summary>
            <param name = "hours">A numeric value equal to the hours value.</param>
            <param name = "min">A numeric value equal to the minutes value.</param>
            <param name = "sec">A numeric value equal to the seconds value.</param>
        </member>
        <member name="M:Retyped.es5.Date.setUTCHours(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Sets the hours value in the Date object using Universal Coordinated Time (UTC).
            </summary>
            <param name = "hours">A numeric value equal to the hours value.</param>
            <param name = "min">A numeric value equal to the minutes value.</param>
            <param name = "sec">A numeric value equal to the seconds value.</param>
            <param name = "ms">A numeric value equal to the milliseconds value.</param>
        </member>
        <member name="M:Retyped.es5.Date.setDate(System.Double)">
            <summary>
            Sets the numeric day-of-the-month value of the Date object using local time.
            </summary>
            <param name = "date">A numeric value equal to the day of the month.</param>
        </member>
        <member name="M:Retyped.es5.Date.setUTCDate(System.Double)">
            <summary>
            Sets the numeric day of the month in the Date object using Universal Coordinated Time (UTC).
            </summary>
            <param name = "date">A numeric value equal to the day of the month.</param>
        </member>
        <member name="M:Retyped.es5.Date.setMonth(System.Double)">
            <summary>
            Sets the month value in the Date object using local time.
            </summary>
            <param name = "month">A numeric value equal to the month. The value for January is 0, and other month values follow consecutively.</param>
        </member>
        <member name="M:Retyped.es5.Date.setMonth(System.Double,System.Double)">
            <summary>
            Sets the month value in the Date object using local time.
            </summary>
            <param name = "month">A numeric value equal to the month. The value for January is 0, and other month values follow consecutively.</param>
            <param name = "date">A numeric value representing the day of the month. If this value is not supplied, the value from a call to the getDate method is used.</param>
        </member>
        <member name="M:Retyped.es5.Date.setUTCMonth(System.Double)">
            <summary>
            Sets the month value in the Date object using Universal Coordinated Time (UTC).
            </summary>
            <param name = "month">A numeric value equal to the month. The value for January is 0, and other month values follow consecutively.</param>
        </member>
        <member name="M:Retyped.es5.Date.setUTCMonth(System.Double,System.Double)">
            <summary>
            Sets the month value in the Date object using Universal Coordinated Time (UTC).
            </summary>
            <param name = "month">A numeric value equal to the month. The value for January is 0, and other month values follow consecutively.</param>
            <param name = "date">A numeric value representing the day of the month. If it is not supplied, the value from a call to the getUTCDate method is used.</param>
        </member>
        <member name="M:Retyped.es5.Date.setFullYear(System.Double)">
            <summary>
            Sets the year of the Date object using local time.
            </summary>
            <param name = "year">A numeric value for the year.</param>
        </member>
        <member name="M:Retyped.es5.Date.setFullYear(System.Double,System.Double)">
            <summary>
            Sets the year of the Date object using local time.
            </summary>
            <param name = "year">A numeric value for the year.</param>
            <param name = "month">A zero-based numeric value for the month (0 for January, 11 for December). Must be specified if numDate is specified.</param>
        </member>
        <member name="M:Retyped.es5.Date.setFullYear(System.Double,System.Double,System.Double)">
            <summary>
            Sets the year of the Date object using local time.
            </summary>
            <param name = "year">A numeric value for the year.</param>
            <param name = "month">A zero-based numeric value for the month (0 for January, 11 for December). Must be specified if numDate is specified.</param>
            <param name = "date">A numeric value equal for the day of the month.</param>
        </member>
        <member name="M:Retyped.es5.Date.setUTCFullYear(System.Double)">
            <summary>
            Sets the year value in the Date object using Universal Coordinated Time (UTC).
            </summary>
            <param name = "year">A numeric value equal to the year.</param>
        </member>
        <member name="M:Retyped.es5.Date.setUTCFullYear(System.Double,System.Double)">
            <summary>
            Sets the year value in the Date object using Universal Coordinated Time (UTC).
            </summary>
            <param name = "year">A numeric value equal to the year.</param>
            <param name = "month">A numeric value equal to the month. The value for January is 0, and other month values follow consecutively. Must be supplied if numDate is supplied.</param>
        </member>
        <member name="M:Retyped.es5.Date.setUTCFullYear(System.Double,System.Double,System.Double)">
            <summary>
            Sets the year value in the Date object using Universal Coordinated Time (UTC).
            </summary>
            <param name = "year">A numeric value equal to the year.</param>
            <param name = "month">A numeric value equal to the month. The value for January is 0, and other month values follow consecutively. Must be supplied if numDate is supplied.</param>
            <param name = "date">A numeric value equal to the day of the month.</param>
        </member>
        <member name="M:Retyped.es5.Date.toUTCString">
            <summary>
            Returns a date converted to a string using Universal Coordinated Time (UTC).
            </summary>
        </member>
        <member name="M:Retyped.es5.Date.toISOString">
            <summary>
            Returns a date as a string value in ISO format.
            </summary>
        </member>
        <member name="M:Retyped.es5.Date.toJSON">
            <summary>
            Used by the JSON.stringify method to enable the transformation of an object's data for JavaScript Object Notation (JSON) serialization.
            </summary>
        </member>
        <member name="M:Retyped.es5.Date.toJSON(System.Object)">
            <summary>
            Used by the JSON.stringify method to enable the transformation of an object's data for JavaScript Object Notation (JSON) serialization.
            </summary>
        </member>
        <member name="M:Retyped.es5.Date.toLocaleString(Bridge.Union{System.String,System.String[]})">
            <summary>
            Converts a date and time to a string by using the current or specified locale.
            </summary>
            <param name = "locales">A locale string or array of locale strings that contain one or more language or locale tags. If you include more than one locale string, list them in descending order of priority so that the first entry is the preferred locale. If you omit this parameter, the default locale of the JavaScript runtime is used.</param>
        </member>
        <member name="M:Retyped.es5.Date.toLocaleString(System.String)">
            <summary>
            Converts a date and time to a string by using the current or specified locale.
            </summary>
            <param name = "locales">A locale string or array of locale strings that contain one or more language or locale tags. If you include more than one locale string, list them in descending order of priority so that the first entry is the preferred locale. If you omit this parameter, the default locale of the JavaScript runtime is used.</param>
        </member>
        <member name="M:Retyped.es5.Date.toLocaleString(System.String[])">
            <summary>
            Converts a date and time to a string by using the current or specified locale.
            </summary>
            <param name = "locales">A locale string or array of locale strings that contain one or more language or locale tags. If you include more than one locale string, list them in descending order of priority so that the first entry is the preferred locale. If you omit this parameter, the default locale of the JavaScript runtime is used.</param>
        </member>
        <member name="M:Retyped.es5.Date.toLocaleString(Bridge.Union{System.String,System.String[]},Retyped.es5.Intl.DateTimeFormatOptions)">
            <summary>
            Converts a date and time to a string by using the current or specified locale.
            </summary>
            <param name = "locales">A locale string or array of locale strings that contain one or more language or locale tags. If you include more than one locale string, list them in descending order of priority so that the first entry is the preferred locale. If you omit this parameter, the default locale of the JavaScript runtime is used.</param>
            <param name = "options">An object that contains one or more properties that specify comparison options.</param>
        </member>
        <member name="M:Retyped.es5.Date.toLocaleString(System.String,Retyped.es5.Intl.DateTimeFormatOptions)">
            <summary>
            Converts a date and time to a string by using the current or specified locale.
            </summary>
            <param name = "locales">A locale string or array of locale strings that contain one or more language or locale tags. If you include more than one locale string, list them in descending order of priority so that the first entry is the preferred locale. If you omit this parameter, the default locale of the JavaScript runtime is used.</param>
            <param name = "options">An object that contains one or more properties that specify comparison options.</param>
        </member>
        <member name="M:Retyped.es5.Date.toLocaleString(System.String[],Retyped.es5.Intl.DateTimeFormatOptions)">
            <summary>
            Converts a date and time to a string by using the current or specified locale.
            </summary>
            <param name = "locales">A locale string or array of locale strings that contain one or more language or locale tags. If you include more than one locale string, list them in descending order of priority so that the first entry is the preferred locale. If you omit this parameter, the default locale of the JavaScript runtime is used.</param>
            <param name = "options">An object that contains one or more properties that specify comparison options.</param>
        </member>
        <member name="M:Retyped.es5.Date.toLocaleDateString(Bridge.Union{System.String,System.String[]})">
            <summary>
            Converts a date to a string by using the current or specified locale.
            </summary>
            <param name = "locales">A locale string or array of locale strings that contain one or more language or locale tags. If you include more than one locale string, list them in descending order of priority so that the first entry is the preferred locale. If you omit this parameter, the default locale of the JavaScript runtime is used.</param>
        </member>
        <member name="M:Retyped.es5.Date.toLocaleDateString(System.String)">
            <summary>
            Converts a date to a string by using the current or specified locale.
            </summary>
            <param name = "locales">A locale string or array of locale strings that contain one or more language or locale tags. If you include more than one locale string, list them in descending order of priority so that the first entry is the preferred locale. If you omit this parameter, the default locale of the JavaScript runtime is used.</param>
        </member>
        <member name="M:Retyped.es5.Date.toLocaleDateString(System.String[])">
            <summary>
            Converts a date to a string by using the current or specified locale.
            </summary>
            <param name = "locales">A locale string or array of locale strings that contain one or more language or locale tags. If you include more than one locale string, list them in descending order of priority so that the first entry is the preferred locale. If you omit this parameter, the default locale of the JavaScript runtime is used.</param>
        </member>
        <member name="M:Retyped.es5.Date.toLocaleDateString(Bridge.Union{System.String,System.String[]},Retyped.es5.Intl.DateTimeFormatOptions)">
            <summary>
            Converts a date to a string by using the current or specified locale.
            </summary>
            <param name = "locales">A locale string or array of locale strings that contain one or more language or locale tags. If you include more than one locale string, list them in descending order of priority so that the first entry is the preferred locale. If you omit this parameter, the default locale of the JavaScript runtime is used.</param>
            <param name = "options">An object that contains one or more properties that specify comparison options.</param>
        </member>
        <member name="M:Retyped.es5.Date.toLocaleDateString(System.String,Retyped.es5.Intl.DateTimeFormatOptions)">
            <summary>
            Converts a date to a string by using the current or specified locale.
            </summary>
            <param name = "locales">A locale string or array of locale strings that contain one or more language or locale tags. If you include more than one locale string, list them in descending order of priority so that the first entry is the preferred locale. If you omit this parameter, the default locale of the JavaScript runtime is used.</param>
            <param name = "options">An object that contains one or more properties that specify comparison options.</param>
        </member>
        <member name="M:Retyped.es5.Date.toLocaleDateString(System.String[],Retyped.es5.Intl.DateTimeFormatOptions)">
            <summary>
            Converts a date to a string by using the current or specified locale.
            </summary>
            <param name = "locales">A locale string or array of locale strings that contain one or more language or locale tags. If you include more than one locale string, list them in descending order of priority so that the first entry is the preferred locale. If you omit this parameter, the default locale of the JavaScript runtime is used.</param>
            <param name = "options">An object that contains one or more properties that specify comparison options.</param>
        </member>
        <member name="M:Retyped.es5.Date.toLocaleTimeString(Bridge.Union{System.String,System.String[]})">
            <summary>
            Converts a time to a string by using the current or specified locale.
            </summary>
            <param name = "locales">A locale string or array of locale strings that contain one or more language or locale tags. If you include more than one locale string, list them in descending order of priority so that the first entry is the preferred locale. If you omit this parameter, the default locale of the JavaScript runtime is used.</param>
        </member>
        <member name="M:Retyped.es5.Date.toLocaleTimeString(System.String)">
            <summary>
            Converts a time to a string by using the current or specified locale.
            </summary>
            <param name = "locales">A locale string or array of locale strings that contain one or more language or locale tags. If you include more than one locale string, list them in descending order of priority so that the first entry is the preferred locale. If you omit this parameter, the default locale of the JavaScript runtime is used.</param>
        </member>
        <member name="M:Retyped.es5.Date.toLocaleTimeString(System.String[])">
            <summary>
            Converts a time to a string by using the current or specified locale.
            </summary>
            <param name = "locales">A locale string or array of locale strings that contain one or more language or locale tags. If you include more than one locale string, list them in descending order of priority so that the first entry is the preferred locale. If you omit this parameter, the default locale of the JavaScript runtime is used.</param>
        </member>
        <member name="M:Retyped.es5.Date.toLocaleTimeString(Bridge.Union{System.String,System.String[]},Retyped.es5.Intl.DateTimeFormatOptions)">
            <summary>
            Converts a time to a string by using the current or specified locale.
            </summary>
            <param name = "locales">A locale string or array of locale strings that contain one or more language or locale tags. If you include more than one locale string, list them in descending order of priority so that the first entry is the preferred locale. If you omit this parameter, the default locale of the JavaScript runtime is used.</param>
            <param name = "options">An object that contains one or more properties that specify comparison options.</param>
        </member>
        <member name="M:Retyped.es5.Date.toLocaleTimeString(System.String,Retyped.es5.Intl.DateTimeFormatOptions)">
            <summary>
            Converts a time to a string by using the current or specified locale.
            </summary>
            <param name = "locales">A locale string or array of locale strings that contain one or more language or locale tags. If you include more than one locale string, list them in descending order of priority so that the first entry is the preferred locale. If you omit this parameter, the default locale of the JavaScript runtime is used.</param>
            <param name = "options">An object that contains one or more properties that specify comparison options.</param>
        </member>
        <member name="M:Retyped.es5.Date.toLocaleTimeString(System.String[],Retyped.es5.Intl.DateTimeFormatOptions)">
            <summary>
            Converts a time to a string by using the current or specified locale.
            </summary>
            <param name = "locales">A locale string or array of locale strings that contain one or more language or locale tags. If you include more than one locale string, list them in descending order of priority so that the first entry is the preferred locale. If you omit this parameter, the default locale of the JavaScript runtime is used.</param>
            <param name = "options">An object that contains one or more properties that specify comparison options.</param>
        </member>
        <member name="M:Retyped.es5.DateConstructor.parse(System.String)">
            <summary>
            Parses a string containing a date, and returns the number of milliseconds between that date and midnight, January 1, 1970.
            </summary>
            <param name = "s">A date string</param>
        </member>
        <member name="M:Retyped.es5.DateConstructor.UTC(System.Double,System.Double)">
            <summary>
            Returns the number of milliseconds between midnight, January 1, 1970 Universal Coordinated Time (UTC) (or GMT) and the specified date.
            </summary>
            <param name = "year">The full year designation is required for cross-century date accuracy. If year is between 0 and 99 is used, then year is assumed to be 1900 + year.</param>
            <param name = "month">The month as an number between 0 and 11 (January to December).</param>
        </member>
        <member name="M:Retyped.es5.DateConstructor.UTC(System.Double,System.Double,System.Double)">
            <summary>
            Returns the number of milliseconds between midnight, January 1, 1970 Universal Coordinated Time (UTC) (or GMT) and the specified date.
            </summary>
            <param name = "year">The full year designation is required for cross-century date accuracy. If year is between 0 and 99 is used, then year is assumed to be 1900 + year.</param>
            <param name = "month">The month as an number between 0 and 11 (January to December).</param>
            <param name = "date">The date as an number between 1 and 31.</param>
        </member>
        <member name="M:Retyped.es5.DateConstructor.UTC(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Returns the number of milliseconds between midnight, January 1, 1970 Universal Coordinated Time (UTC) (or GMT) and the specified date.
            </summary>
            <param name = "year">The full year designation is required for cross-century date accuracy. If year is between 0 and 99 is used, then year is assumed to be 1900 + year.</param>
            <param name = "month">The month as an number between 0 and 11 (January to December).</param>
            <param name = "date">The date as an number between 1 and 31.</param>
            <param name = "hours">Must be supplied if minutes is supplied. An number from 0 to 23 (midnight to 11pm) that specifies the hour.</param>
        </member>
        <member name="M:Retyped.es5.DateConstructor.UTC(System.Double,System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Returns the number of milliseconds between midnight, January 1, 1970 Universal Coordinated Time (UTC) (or GMT) and the specified date.
            </summary>
            <param name = "year">The full year designation is required for cross-century date accuracy. If year is between 0 and 99 is used, then year is assumed to be 1900 + year.</param>
            <param name = "month">The month as an number between 0 and 11 (January to December).</param>
            <param name = "date">The date as an number between 1 and 31.</param>
            <param name = "hours">Must be supplied if minutes is supplied. An number from 0 to 23 (midnight to 11pm) that specifies the hour.</param>
            <param name = "minutes">Must be supplied if seconds is supplied. An number from 0 to 59 that specifies the minutes.</param>
        </member>
        <member name="M:Retyped.es5.DateConstructor.UTC(System.Double,System.Double,System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Returns the number of milliseconds between midnight, January 1, 1970 Universal Coordinated Time (UTC) (or GMT) and the specified date.
            </summary>
            <param name = "year">The full year designation is required for cross-century date accuracy. If year is between 0 and 99 is used, then year is assumed to be 1900 + year.</param>
            <param name = "month">The month as an number between 0 and 11 (January to December).</param>
            <param name = "date">The date as an number between 1 and 31.</param>
            <param name = "hours">Must be supplied if minutes is supplied. An number from 0 to 23 (midnight to 11pm) that specifies the hour.</param>
            <param name = "minutes">Must be supplied if seconds is supplied. An number from 0 to 59 that specifies the minutes.</param>
            <param name = "seconds">Must be supplied if milliseconds is supplied. An number from 0 to 59 that specifies the seconds.</param>
        </member>
        <member name="M:Retyped.es5.DateConstructor.UTC(System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Returns the number of milliseconds between midnight, January 1, 1970 Universal Coordinated Time (UTC) (or GMT) and the specified date.
            </summary>
            <param name = "year">The full year designation is required for cross-century date accuracy. If year is between 0 and 99 is used, then year is assumed to be 1900 + year.</param>
            <param name = "month">The month as an number between 0 and 11 (January to December).</param>
            <param name = "date">The date as an number between 1 and 31.</param>
            <param name = "hours">Must be supplied if minutes is supplied. An number from 0 to 23 (midnight to 11pm) that specifies the hour.</param>
            <param name = "minutes">Must be supplied if seconds is supplied. An number from 0 to 59 that specifies the minutes.</param>
            <param name = "seconds">Must be supplied if milliseconds is supplied. An number from 0 to 59 that specifies the seconds.</param>
            <param name = "ms">An number from 0 to 999 that specifies the milliseconds.</param>
        </member>
        <member name="M:Retyped.es5.RegExp.exec(System.String)">
            <summary>
            Executes a search on a string using a regular expression pattern, and returns an array containing the results of that search.
            </summary>
            <param name = "string">The String object or string literal on which to perform the search.</param>
        </member>
        <member name="M:Retyped.es5.RegExp.test(System.String)">
            <summary>
            Returns a Boolean value that indicates whether or not a pattern exists in a searched string.
            </summary>
            <param name = "string">String on which to perform the search.</param>
        </member>
        <member name="P:Retyped.es5.RegExp.source">
            <summary>
            Returns a copy of the text of the regular expression pattern. Read-only. The regExp argument is a Regular expression object. It can be a variable name or a literal.
            </summary>
        </member>
        <member name="P:Retyped.es5.RegExp.global">
            <summary>
            Returns a Boolean value indicating the state of the global flag (g) used with a regular expression. Default is false. Read-only.
            </summary>
        </member>
        <member name="P:Retyped.es5.RegExp.ignoreCase">
            <summary>
            Returns a Boolean value indicating the state of the ignoreCase flag (i) used with a regular expression. Default is false. Read-only.
            </summary>
        </member>
        <member name="P:Retyped.es5.RegExp.multiline">
            <summary>
            Returns a Boolean value indicating the state of the multiline flag (m) used with a regular expression. Default is false. Read-only.
            </summary>
        </member>
        <member name="M:Retyped.es5.JSON.Interface.parse(System.String)">
            <summary>
            Converts a JavaScript Object Notation (JSON) string into an object.
            </summary>
            <param name = "text">A valid JSON string.</param>
        </member>
        <member name="M:Retyped.es5.JSON.Interface.parse(System.String,Retyped.es5.JSON.parseFn)">
            <summary>
            Converts a JavaScript Object Notation (JSON) string into an object.
            </summary>
            <param name = "text">A valid JSON string.</param>
            <param name = "reviver">
            A function that transforms the results. This function is called for each member of the object.
            If a member contains nested objects, the nested objects are transformed before the parent object is.
            </param>
        </member>
        <member name="M:Retyped.es5.JSON.Interface.stringify(System.Object)">
            <summary>
            Converts a JavaScript value to a JavaScript Object Notation (JSON) string.
            </summary>
            <param name = "value">A JavaScript value, usually an object or array, to be converted.</param>
        </member>
        <member name="M:Retyped.es5.JSON.Interface.stringify(System.Object,Retyped.es5.JSON.stringifyFn)">
            <summary>
            Converts a JavaScript value to a JavaScript Object Notation (JSON) string.
            </summary>
            <param name = "value">A JavaScript value, usually an object or array, to be converted.</param>
            <param name = "replacer">A function that transforms the results.</param>
        </member>
        <member name="M:Retyped.es5.JSON.Interface.stringify(System.Object,Retyped.es5.JSON.stringifyFn,Bridge.Union{System.String,System.Double})">
            <summary>
            Converts a JavaScript value to a JavaScript Object Notation (JSON) string.
            </summary>
            <param name = "value">A JavaScript value, usually an object or array, to be converted.</param>
            <param name = "replacer">A function that transforms the results.</param>
            <param name = "space">Adds indentation, white space, and line break characters to the return-value JSON text to make it easier to read.</param>
        </member>
        <member name="M:Retyped.es5.JSON.Interface.stringify(System.Object,Retyped.es5.JSON.stringifyFn,System.String)">
            <summary>
            Converts a JavaScript value to a JavaScript Object Notation (JSON) string.
            </summary>
            <param name = "value">A JavaScript value, usually an object or array, to be converted.</param>
            <param name = "replacer">A function that transforms the results.</param>
            <param name = "space">Adds indentation, white space, and line break characters to the return-value JSON text to make it easier to read.</param>
        </member>
        <member name="M:Retyped.es5.JSON.Interface.stringify(System.Object,Retyped.es5.JSON.stringifyFn,System.Double)">
            <summary>
            Converts a JavaScript value to a JavaScript Object Notation (JSON) string.
            </summary>
            <param name = "value">A JavaScript value, usually an object or array, to be converted.</param>
            <param name = "replacer">A function that transforms the results.</param>
            <param name = "space">Adds indentation, white space, and line break characters to the return-value JSON text to make it easier to read.</param>
        </member>
        <member name="M:Retyped.es5.JSON.Interface.stringify(System.Object,Bridge.Union{System.Double,System.String}[])">
            <summary>
            Converts a JavaScript value to a JavaScript Object Notation (JSON) string.
            </summary>
            <param name = "value">A JavaScript value, usually an object or array, to be converted.</param>
            <param name = "replacer">An array of strings and numbers that acts as a approved list for selecting the object properties that will be stringified.</param>
        </member>
        <member name="M:Retyped.es5.JSON.Interface.stringify(System.Object,System.Double[])">
            <summary>
            Converts a JavaScript value to a JavaScript Object Notation (JSON) string.
            </summary>
            <param name = "value">A JavaScript value, usually an object or array, to be converted.</param>
            <param name = "replacer">An array of strings and numbers that acts as a approved list for selecting the object properties that will be stringified.</param>
        </member>
        <member name="M:Retyped.es5.JSON.Interface.stringify(System.Object,System.String[])">
            <summary>
            Converts a JavaScript value to a JavaScript Object Notation (JSON) string.
            </summary>
            <param name = "value">A JavaScript value, usually an object or array, to be converted.</param>
            <param name = "replacer">An array of strings and numbers that acts as a approved list for selecting the object properties that will be stringified.</param>
        </member>
        <member name="M:Retyped.es5.JSON.Interface.stringify(System.Object,Bridge.Union{System.Double,System.String}[],Bridge.Union{System.String,System.Double})">
            <summary>
            Converts a JavaScript value to a JavaScript Object Notation (JSON) string.
            </summary>
            <param name = "value">A JavaScript value, usually an object or array, to be converted.</param>
            <param name = "replacer">An array of strings and numbers that acts as a approved list for selecting the object properties that will be stringified.</param>
            <param name = "space">Adds indentation, white space, and line break characters to the return-value JSON text to make it easier to read.</param>
        </member>
        <member name="M:Retyped.es5.JSON.Interface.stringify(System.Object,System.Double[],System.String)">
            <summary>
            Converts a JavaScript value to a JavaScript Object Notation (JSON) string.
            </summary>
            <param name = "value">A JavaScript value, usually an object or array, to be converted.</param>
            <param name = "replacer">An array of strings and numbers that acts as a approved list for selecting the object properties that will be stringified.</param>
            <param name = "space">Adds indentation, white space, and line break characters to the return-value JSON text to make it easier to read.</param>
        </member>
        <member name="M:Retyped.es5.JSON.Interface.stringify(System.Object,System.Double[],System.Double)">
            <summary>
            Converts a JavaScript value to a JavaScript Object Notation (JSON) string.
            </summary>
            <param name = "value">A JavaScript value, usually an object or array, to be converted.</param>
            <param name = "replacer">An array of strings and numbers that acts as a approved list for selecting the object properties that will be stringified.</param>
            <param name = "space">Adds indentation, white space, and line break characters to the return-value JSON text to make it easier to read.</param>
        </member>
        <member name="M:Retyped.es5.JSON.Interface.stringify(System.Object,System.String[],System.String)">
            <summary>
            Converts a JavaScript value to a JavaScript Object Notation (JSON) string.
            </summary>
            <param name = "value">A JavaScript value, usually an object or array, to be converted.</param>
            <param name = "replacer">An array of strings and numbers that acts as a approved list for selecting the object properties that will be stringified.</param>
            <param name = "space">Adds indentation, white space, and line break characters to the return-value JSON text to make it easier to read.</param>
        </member>
        <member name="M:Retyped.es5.JSON.Interface.stringify(System.Object,System.String[],System.Double)">
            <summary>
            Converts a JavaScript value to a JavaScript Object Notation (JSON) string.
            </summary>
            <param name = "value">A JavaScript value, usually an object or array, to be converted.</param>
            <param name = "replacer">An array of strings and numbers that acts as a approved list for selecting the object properties that will be stringified.</param>
            <param name = "space">Adds indentation, white space, and line break characters to the return-value JSON text to make it easier to read.</param>
        </member>
        <member name="T:Retyped.es5.ReadonlyArray`1">
            ECMAScript Array API (specially handled by compiler)
        </member>
        <member name="P:Retyped.es5.ReadonlyArray`1.length">
            <summary>
            Gets the length of the array. This is a number one higher than the highest element defined in an array.
            </summary>
        </member>
        <member name="M:Retyped.es5.ReadonlyArray`1.toString">
            <summary>
            Returns a string representation of an array.
            </summary>
        </member>
        <member name="M:Retyped.es5.ReadonlyArray`1.toLocaleString">
            <summary>
            Returns a string representation of an array. The elements are converted to string using their toLocalString methods.
            </summary>
        </member>
        <member name="M:Retyped.es5.ReadonlyArray`1.concat(Retyped.es5.ConcatArray{`0}[])">
            <summary>
            Combines two or more arrays.
            </summary>
            <param name = "items">Additional items to add to the end of array1.</param>
        </member>
        <member name="M:Retyped.es5.ReadonlyArray`1.concat(Bridge.Union{`0,Retyped.es5.ConcatArray{`0}}[])">
            <summary>
            Combines two or more arrays.
            </summary>
            <param name = "items">Additional items to add to the end of array1.</param>
        </member>
        <member name="M:Retyped.es5.ReadonlyArray`1.concat(`0[])">
            <summary>
            Combines two or more arrays.
            </summary>
            <param name = "items">Additional items to add to the end of array1.</param>
        </member>
        <member name="M:Retyped.es5.ReadonlyArray`1.join">
            <summary>
            Adds all the elements of an array separated by the specified separator string.
            </summary>
        </member>
        <member name="M:Retyped.es5.ReadonlyArray`1.join(System.String)">
            <summary>
            Adds all the elements of an array separated by the specified separator string.
            </summary>
            <param name = "separator">A string used to separate one element of an array from the next in the resulting String. If omitted, the array elements are separated with a comma.</param>
        </member>
        <member name="M:Retyped.es5.ReadonlyArray`1.slice">
            <summary>
            Returns a section of an array.
            </summary>
        </member>
        <member name="M:Retyped.es5.ReadonlyArray`1.slice(System.Double)">
            <summary>
            Returns a section of an array.
            </summary>
            <param name = "start">The beginning of the specified portion of the array.</param>
        </member>
        <member name="M:Retyped.es5.ReadonlyArray`1.slice(System.Double,System.Double)">
            <summary>
            Returns a section of an array.
            </summary>
            <param name = "start">The beginning of the specified portion of the array.</param>
            <param name = "end">The end of the specified portion of the array.</param>
        </member>
        <member name="M:Retyped.es5.ReadonlyArray`1.indexOf(`0)">
            <summary>
            Returns the index of the first occurrence of a value in an array.
            </summary>
            <param name = "searchElement">The value to locate in the array.</param>
        </member>
        <member name="M:Retyped.es5.ReadonlyArray`1.indexOf(`0,System.Double)">
            <summary>
            Returns the index of the first occurrence of a value in an array.
            </summary>
            <param name = "searchElement">The value to locate in the array.</param>
            <param name = "fromIndex">The array index at which to begin the search. If fromIndex is omitted, the search starts at index 0.</param>
        </member>
        <member name="M:Retyped.es5.ReadonlyArray`1.lastIndexOf(`0)">
            <summary>
            Returns the index of the last occurrence of a specified value in an array.
            </summary>
            <param name = "searchElement">The value to locate in the array.</param>
        </member>
        <member name="M:Retyped.es5.ReadonlyArray`1.lastIndexOf(`0,System.Double)">
            <summary>
            Returns the index of the last occurrence of a specified value in an array.
            </summary>
            <param name = "searchElement">The value to locate in the array.</param>
            <param name = "fromIndex">The array index at which to begin the search. If fromIndex is omitted, the search starts at the last index in the array.</param>
        </member>
        <member name="M:Retyped.es5.ReadonlyArray`1.every(Retyped.es5.ReadonlyArray{`0}.everyFn)">
            <summary>
            Determines whether all the members of an array satisfy the specified test.
            </summary>
            <param name = "callbackfn">A function that accepts up to three arguments. The every method calls the callbackfn function for each element in array1 until the callbackfn returns false, or until the end of the array.</param>
        </member>
        <member name="M:Retyped.es5.ReadonlyArray`1.every(Retyped.es5.ReadonlyArray{`0}.everyFn,System.Object)">
            <summary>
            Determines whether all the members of an array satisfy the specified test.
            </summary>
            <param name = "callbackfn">A function that accepts up to three arguments. The every method calls the callbackfn function for each element in array1 until the callbackfn returns false, or until the end of the array.</param>
            <param name = "thisArg">An object to which the this keyword can refer in the callbackfn function. If thisArg is omitted, undefined is used as the this value.</param>
        </member>
        <member name="M:Retyped.es5.ReadonlyArray`1.some(Retyped.es5.ReadonlyArray{`0}.someFn)">
            <summary>
            Determines whether the specified callback function returns true for any element of an array.
            </summary>
            <param name = "callbackfn">A function that accepts up to three arguments. The some method calls the callbackfn function for each element in array1 until the callbackfn returns true, or until the end of the array.</param>
        </member>
        <member name="M:Retyped.es5.ReadonlyArray`1.some(Retyped.es5.ReadonlyArray{`0}.someFn,System.Object)">
            <summary>
            Determines whether the specified callback function returns true for any element of an array.
            </summary>
            <param name = "callbackfn">A function that accepts up to three arguments. The some method calls the callbackfn function for each element in array1 until the callbackfn returns true, or until the end of the array.</param>
            <param name = "thisArg">An object to which the this keyword can refer in the callbackfn function. If thisArg is omitted, undefined is used as the this value.</param>
        </member>
        <member name="M:Retyped.es5.ReadonlyArray`1.forEach(Retyped.es5.ReadonlyArray{`0}.forEachFn)">
            <summary>
            Performs the specified action for each element in an array.
            </summary>
            <param name = "callbackfn">A function that accepts up to three arguments. forEach calls the callbackfn function one time for each element in the array.</param>
        </member>
        <member name="M:Retyped.es5.ReadonlyArray`1.forEach(Retyped.es5.ReadonlyArray{`0}.forEachFn,System.Object)">
            <summary>
            Performs the specified action for each element in an array.
            </summary>
            <param name = "callbackfn">A function that accepts up to three arguments. forEach calls the callbackfn function one time for each element in the array.</param>
            <param name = "thisArg">An object to which the this keyword can refer in the callbackfn function. If thisArg is omitted, undefined is used as the this value.</param>
        </member>
        <member name="M:Retyped.es5.ReadonlyArray`1.map``1(Retyped.es5.ReadonlyArray{`0}.mapFn{``0})">
            <summary>
            Calls a defined callback function on each element of an array, and returns an array that contains the results.
            </summary>
            <param name = "callbackfn">A function that accepts up to three arguments. The map method calls the callbackfn function one time for each element in the array.</param>
        </member>
        <member name="M:Retyped.es5.ReadonlyArray`1.map``1(Retyped.es5.ReadonlyArray{`0}.mapFn{``0},System.Object)">
            <summary>
            Calls a defined callback function on each element of an array, and returns an array that contains the results.
            </summary>
            <param name = "callbackfn">A function that accepts up to three arguments. The map method calls the callbackfn function one time for each element in the array.</param>
            <param name = "thisArg">An object to which the this keyword can refer in the callbackfn function. If thisArg is omitted, undefined is used as the this value.</param>
        </member>
        <member name="M:Retyped.es5.ReadonlyArray`1.filter``1(Retyped.es5.ReadonlyArray{`0}.filterFn{``0})">
            <summary>
            Returns the elements of an array that meet the condition specified in a callback function.
            </summary>
            <param name = "callbackfn">A function that accepts up to three arguments. The filter method calls the callbackfn function one time for each element in the array.</param>
        </member>
        <member name="M:Retyped.es5.ReadonlyArray`1.filter``1(Retyped.es5.ReadonlyArray{`0}.filterFn{``0},System.Object)">
            <summary>
            Returns the elements of an array that meet the condition specified in a callback function.
            </summary>
            <param name = "callbackfn">A function that accepts up to three arguments. The filter method calls the callbackfn function one time for each element in the array.</param>
            <param name = "thisArg">An object to which the this keyword can refer in the callbackfn function. If thisArg is omitted, undefined is used as the this value.</param>
        </member>
        <member name="M:Retyped.es5.ReadonlyArray`1.filter(Retyped.es5.ReadonlyArray{`0}.filterFn2)">
            <summary>
            Returns the elements of an array that meet the condition specified in a callback function.
            </summary>
            <param name = "callbackfn">A function that accepts up to three arguments. The filter method calls the callbackfn function one time for each element in the array.</param>
        </member>
        <member name="M:Retyped.es5.ReadonlyArray`1.filter(Retyped.es5.ReadonlyArray{`0}.filterFn2,System.Object)">
            <summary>
            Returns the elements of an array that meet the condition specified in a callback function.
            </summary>
            <param name = "callbackfn">A function that accepts up to three arguments. The filter method calls the callbackfn function one time for each element in the array.</param>
            <param name = "thisArg">An object to which the this keyword can refer in the callbackfn function. If thisArg is omitted, undefined is used as the this value.</param>
        </member>
        <member name="M:Retyped.es5.ReadonlyArray`1.reduce(Retyped.es5.ReadonlyArray{`0}.reduceFn)">
            <summary>
            Calls the specified callback function for all the elements in an array. The return value of the callback function is the accumulated result, and is provided as an argument in the next call to the callback function.
            </summary>
            <param name = "callbackfn">A function that accepts up to four arguments. The reduce method calls the callbackfn function one time for each element in the array.</param>
        </member>
        <member name="M:Retyped.es5.ReadonlyArray`1.reduce(Retyped.es5.ReadonlyArray{`0}.reduceFn,`0)">
            <summary>
            Calls the specified callback function for all the elements in an array. The return value of the callback function is the accumulated result, and is provided as an argument in the next call to the callback function.
            </summary>
            <param name = "callbackfn">A function that accepts up to four arguments. The reduce method calls the callbackfn function one time for each element in the array.</param>
            <param name = "initialValue">If initialValue is specified, it is used as the initial value to start the accumulation. The first call to the callbackfn function provides this value as an argument instead of an array value.</param>
        </member>
        <member name="M:Retyped.es5.ReadonlyArray`1.reduce``1(Retyped.es5.ReadonlyArray{`0}.reduceFn2{``0},``0)">
            <summary>
            Calls the specified callback function for all the elements in an array. The return value of the callback function is the accumulated result, and is provided as an argument in the next call to the callback function.
            </summary>
            <param name = "callbackfn">A function that accepts up to four arguments. The reduce method calls the callbackfn function one time for each element in the array.</param>
            <param name = "initialValue">If initialValue is specified, it is used as the initial value to start the accumulation. The first call to the callbackfn function provides this value as an argument instead of an array value.</param>
        </member>
        <member name="M:Retyped.es5.ReadonlyArray`1.reduceRight(Retyped.es5.ReadonlyArray{`0}.reduceRightFn)">
            <summary>
            Calls the specified callback function for all the elements in an array, in descending order. The return value of the callback function is the accumulated result, and is provided as an argument in the next call to the callback function.
            </summary>
            <param name = "callbackfn">A function that accepts up to four arguments. The reduceRight method calls the callbackfn function one time for each element in the array.</param>
        </member>
        <member name="M:Retyped.es5.ReadonlyArray`1.reduceRight(Retyped.es5.ReadonlyArray{`0}.reduceRightFn,`0)">
            <summary>
            Calls the specified callback function for all the elements in an array, in descending order. The return value of the callback function is the accumulated result, and is provided as an argument in the next call to the callback function.
            </summary>
            <param name = "callbackfn">A function that accepts up to four arguments. The reduceRight method calls the callbackfn function one time for each element in the array.</param>
            <param name = "initialValue">If initialValue is specified, it is used as the initial value to start the accumulation. The first call to the callbackfn function provides this value as an argument instead of an array value.</param>
        </member>
        <member name="M:Retyped.es5.ReadonlyArray`1.reduceRight``1(Retyped.es5.ReadonlyArray{`0}.reduceRightFn2{``0},``0)">
            <summary>
            Calls the specified callback function for all the elements in an array, in descending order. The return value of the callback function is the accumulated result, and is provided as an argument in the next call to the callback function.
            </summary>
            <param name = "callbackfn">A function that accepts up to four arguments. The reduceRight method calls the callbackfn function one time for each element in the array.</param>
            <param name = "initialValue">If initialValue is specified, it is used as the initial value to start the accumulation. The first call to the callbackfn function provides this value as an argument instead of an array value.</param>
        </member>
        <member name="P:Retyped.es5.Array`1.length">
            <summary>
            Gets or sets the length of the array. This is a number one higher than the highest element defined in an array.
            </summary>
        </member>
        <member name="M:Retyped.es5.Array`1.toString">
            <summary>
            Returns a string representation of an array.
            </summary>
        </member>
        <member name="M:Retyped.es5.Array`1.toLocaleString">
            <summary>
            Returns a string representation of an array. The elements are converted to string using their toLocalString methods.
            </summary>
        </member>
        <member name="M:Retyped.es5.Array`1.push(`0[])">
            <summary>
            Appends new elements to an array, and returns the new length of the array.
            </summary>
            <param name = "items">New elements of the Array.</param>
        </member>
        <member name="M:Retyped.es5.Array`1.pop">
            <summary>
            Removes the last element from an array and returns it.
            </summary>
        </member>
        <member name="M:Retyped.es5.Array`1.concat(Retyped.es5.ConcatArray{`0}[])">
            <summary>
            Combines two or more arrays.
            </summary>
            <param name = "items">Additional items to add to the end of array1.</param>
        </member>
        <member name="M:Retyped.es5.Array`1.concat(Bridge.Union{`0,Retyped.es5.ConcatArray{`0}}[])">
            <summary>
            Combines two or more arrays.
            </summary>
            <param name = "items">Additional items to add to the end of array1.</param>
        </member>
        <member name="M:Retyped.es5.Array`1.concat(`0[])">
            <summary>
            Combines two or more arrays.
            </summary>
            <param name = "items">Additional items to add to the end of array1.</param>
        </member>
        <member name="M:Retyped.es5.Array`1.join">
            <summary>
            Adds all the elements of an array separated by the specified separator string.
            </summary>
        </member>
        <member name="M:Retyped.es5.Array`1.join(System.String)">
            <summary>
            Adds all the elements of an array separated by the specified separator string.
            </summary>
            <param name = "separator">A string used to separate one element of an array from the next in the resulting String. If omitted, the array elements are separated with a comma.</param>
        </member>
        <member name="M:Retyped.es5.Array`1.reverse">
            <summary>
            Reverses the elements in an Array.
            </summary>
        </member>
        <member name="M:Retyped.es5.Array`1.shift">
            <summary>
            Removes the first element from an array and returns it.
            </summary>
        </member>
        <member name="M:Retyped.es5.Array`1.slice">
            <summary>
            Returns a section of an array.
            </summary>
        </member>
        <member name="M:Retyped.es5.Array`1.slice(System.Double)">
            <summary>
            Returns a section of an array.
            </summary>
            <param name = "start">The beginning of the specified portion of the array.</param>
        </member>
        <member name="M:Retyped.es5.Array`1.slice(System.Double,System.Double)">
            <summary>
            Returns a section of an array.
            </summary>
            <param name = "start">The beginning of the specified portion of the array.</param>
            <param name = "end">The end of the specified portion of the array.</param>
        </member>
        <member name="M:Retyped.es5.Array`1.sort">
            <summary>
            Sorts an array.
            </summary>
        </member>
        <member name="M:Retyped.es5.Array`1.sort(Retyped.es5.Array{`0}.sortFn)">
            <summary>
            Sorts an array.
            </summary>
            <param name = "compareFn">The name of the function used to determine the order of the elements. If omitted, the elements are sorted in ascending, ASCII character order.</param>
        </member>
        <member name="M:Retyped.es5.Array`1.splice(System.Double)">
            <summary>
            Removes elements from an array and, if necessary, inserts new elements in their place, returning the deleted elements.
            </summary>
            <param name = "start">The zero-based location in the array from which to start removing elements.</param>
        </member>
        <member name="M:Retyped.es5.Array`1.splice(System.Double,System.Double)">
            <summary>
            Removes elements from an array and, if necessary, inserts new elements in their place, returning the deleted elements.
            </summary>
            <param name = "start">The zero-based location in the array from which to start removing elements.</param>
            <param name = "deleteCount">The number of elements to remove.</param>
        </member>
        <member name="M:Retyped.es5.Array`1.splice(System.Double,System.Double,`0[])">
            <summary>
            Removes elements from an array and, if necessary, inserts new elements in their place, returning the deleted elements.
            </summary>
            <param name = "start">The zero-based location in the array from which to start removing elements.</param>
            <param name = "deleteCount">The number of elements to remove.</param>
            <param name = "items">Elements to insert into the array in place of the deleted elements.</param>
        </member>
        <member name="M:Retyped.es5.Array`1.unshift(`0[])">
            <summary>
            Inserts new elements at the start of an array.
            </summary>
            <param name = "items">Elements to insert at the start of the Array.</param>
        </member>
        <member name="M:Retyped.es5.Array`1.indexOf(`0)">
            <summary>
            Returns the index of the first occurrence of a value in an array.
            </summary>
            <param name = "searchElement">The value to locate in the array.</param>
        </member>
        <member name="M:Retyped.es5.Array`1.indexOf(`0,System.Double)">
            <summary>
            Returns the index of the first occurrence of a value in an array.
            </summary>
            <param name = "searchElement">The value to locate in the array.</param>
            <param name = "fromIndex">The array index at which to begin the search. If fromIndex is omitted, the search starts at index 0.</param>
        </member>
        <member name="M:Retyped.es5.Array`1.lastIndexOf(`0)">
            <summary>
            Returns the index of the last occurrence of a specified value in an array.
            </summary>
            <param name = "searchElement">The value to locate in the array.</param>
        </member>
        <member name="M:Retyped.es5.Array`1.lastIndexOf(`0,System.Double)">
            <summary>
            Returns the index of the last occurrence of a specified value in an array.
            </summary>
            <param name = "searchElement">The value to locate in the array.</param>
            <param name = "fromIndex">The array index at which to begin the search. If fromIndex is omitted, the search starts at the last index in the array.</param>
        </member>
        <member name="M:Retyped.es5.Array`1.every(Retyped.es5.Array{`0}.everyFn)">
            <summary>
            Determines whether all the members of an array satisfy the specified test.
            </summary>
            <param name = "callbackfn">A function that accepts up to three arguments. The every method calls the callbackfn function for each element in array1 until the callbackfn returns false, or until the end of the array.</param>
        </member>
        <member name="M:Retyped.es5.Array`1.every(Retyped.es5.Array{`0}.everyFn,System.Object)">
            <summary>
            Determines whether all the members of an array satisfy the specified test.
            </summary>
            <param name = "callbackfn">A function that accepts up to three arguments. The every method calls the callbackfn function for each element in array1 until the callbackfn returns false, or until the end of the array.</param>
            <param name = "thisArg">An object to which the this keyword can refer in the callbackfn function. If thisArg is omitted, undefined is used as the this value.</param>
        </member>
        <member name="M:Retyped.es5.Array`1.some(Retyped.es5.Array{`0}.someFn)">
            <summary>
            Determines whether the specified callback function returns true for any element of an array.
            </summary>
            <param name = "callbackfn">A function that accepts up to three arguments. The some method calls the callbackfn function for each element in array1 until the callbackfn returns true, or until the end of the array.</param>
        </member>
        <member name="M:Retyped.es5.Array`1.some(Retyped.es5.Array{`0}.someFn,System.Object)">
            <summary>
            Determines whether the specified callback function returns true for any element of an array.
            </summary>
            <param name = "callbackfn">A function that accepts up to three arguments. The some method calls the callbackfn function for each element in array1 until the callbackfn returns true, or until the end of the array.</param>
            <param name = "thisArg">An object to which the this keyword can refer in the callbackfn function. If thisArg is omitted, undefined is used as the this value.</param>
        </member>
        <member name="M:Retyped.es5.Array`1.forEach(Retyped.es5.Array{`0}.forEachFn)">
            <summary>
            Performs the specified action for each element in an array.
            </summary>
            <param name = "callbackfn">A function that accepts up to three arguments. forEach calls the callbackfn function one time for each element in the array.</param>
        </member>
        <member name="M:Retyped.es5.Array`1.forEach(Retyped.es5.Array{`0}.forEachFn,System.Object)">
            <summary>
            Performs the specified action for each element in an array.
            </summary>
            <param name = "callbackfn">A function that accepts up to three arguments. forEach calls the callbackfn function one time for each element in the array.</param>
            <param name = "thisArg">An object to which the this keyword can refer in the callbackfn function. If thisArg is omitted, undefined is used as the this value.</param>
        </member>
        <member name="M:Retyped.es5.Array`1.map``1(Retyped.es5.Array{`0}.mapFn{``0})">
            <summary>
            Calls a defined callback function on each element of an array, and returns an array that contains the results.
            </summary>
            <param name = "callbackfn">A function that accepts up to three arguments. The map method calls the callbackfn function one time for each element in the array.</param>
        </member>
        <member name="M:Retyped.es5.Array`1.map``1(Retyped.es5.Array{`0}.mapFn{``0},System.Object)">
            <summary>
            Calls a defined callback function on each element of an array, and returns an array that contains the results.
            </summary>
            <param name = "callbackfn">A function that accepts up to three arguments. The map method calls the callbackfn function one time for each element in the array.</param>
            <param name = "thisArg">An object to which the this keyword can refer in the callbackfn function. If thisArg is omitted, undefined is used as the this value.</param>
        </member>
        <member name="M:Retyped.es5.Array`1.filter``1(Retyped.es5.Array{`0}.filterFn{``0})">
            <summary>
            Returns the elements of an array that meet the condition specified in a callback function.
            </summary>
            <param name = "callbackfn">A function that accepts up to three arguments. The filter method calls the callbackfn function one time for each element in the array.</param>
        </member>
        <member name="M:Retyped.es5.Array`1.filter``1(Retyped.es5.Array{`0}.filterFn{``0},System.Object)">
            <summary>
            Returns the elements of an array that meet the condition specified in a callback function.
            </summary>
            <param name = "callbackfn">A function that accepts up to three arguments. The filter method calls the callbackfn function one time for each element in the array.</param>
            <param name = "thisArg">An object to which the this keyword can refer in the callbackfn function. If thisArg is omitted, undefined is used as the this value.</param>
        </member>
        <member name="M:Retyped.es5.Array`1.filter(Retyped.es5.Array{`0}.filterFn2)">
            <summary>
            Returns the elements of an array that meet the condition specified in a callback function.
            </summary>
            <param name = "callbackfn">A function that accepts up to three arguments. The filter method calls the callbackfn function one time for each element in the array.</param>
        </member>
        <member name="M:Retyped.es5.Array`1.filter(Retyped.es5.Array{`0}.filterFn2,System.Object)">
            <summary>
            Returns the elements of an array that meet the condition specified in a callback function.
            </summary>
            <param name = "callbackfn">A function that accepts up to three arguments. The filter method calls the callbackfn function one time for each element in the array.</param>
            <param name = "thisArg">An object to which the this keyword can refer in the callbackfn function. If thisArg is omitted, undefined is used as the this value.</param>
        </member>
        <member name="M:Retyped.es5.Array`1.reduce(Retyped.es5.Array{`0}.reduceFn)">
            <summary>
            Calls the specified callback function for all the elements in an array. The return value of the callback function is the accumulated result, and is provided as an argument in the next call to the callback function.
            </summary>
            <param name = "callbackfn">A function that accepts up to four arguments. The reduce method calls the callbackfn function one time for each element in the array.</param>
        </member>
        <member name="M:Retyped.es5.Array`1.reduce(Retyped.es5.Array{`0}.reduceFn,`0)">
            <summary>
            Calls the specified callback function for all the elements in an array. The return value of the callback function is the accumulated result, and is provided as an argument in the next call to the callback function.
            </summary>
            <param name = "callbackfn">A function that accepts up to four arguments. The reduce method calls the callbackfn function one time for each element in the array.</param>
            <param name = "initialValue">If initialValue is specified, it is used as the initial value to start the accumulation. The first call to the callbackfn function provides this value as an argument instead of an array value.</param>
        </member>
        <member name="M:Retyped.es5.Array`1.reduce``1(Retyped.es5.Array{`0}.reduceFn2{``0},``0)">
            <summary>
            Calls the specified callback function for all the elements in an array. The return value of the callback function is the accumulated result, and is provided as an argument in the next call to the callback function.
            </summary>
            <param name = "callbackfn">A function that accepts up to four arguments. The reduce method calls the callbackfn function one time for each element in the array.</param>
            <param name = "initialValue">If initialValue is specified, it is used as the initial value to start the accumulation. The first call to the callbackfn function provides this value as an argument instead of an array value.</param>
        </member>
        <member name="M:Retyped.es5.Array`1.reduceRight(Retyped.es5.Array{`0}.reduceRightFn)">
            <summary>
            Calls the specified callback function for all the elements in an array, in descending order. The return value of the callback function is the accumulated result, and is provided as an argument in the next call to the callback function.
            </summary>
            <param name = "callbackfn">A function that accepts up to four arguments. The reduceRight method calls the callbackfn function one time for each element in the array.</param>
        </member>
        <member name="M:Retyped.es5.Array`1.reduceRight(Retyped.es5.Array{`0}.reduceRightFn,`0)">
            <summary>
            Calls the specified callback function for all the elements in an array, in descending order. The return value of the callback function is the accumulated result, and is provided as an argument in the next call to the callback function.
            </summary>
            <param name = "callbackfn">A function that accepts up to four arguments. The reduceRight method calls the callbackfn function one time for each element in the array.</param>
            <param name = "initialValue">If initialValue is specified, it is used as the initial value to start the accumulation. The first call to the callbackfn function provides this value as an argument instead of an array value.</param>
        </member>
        <member name="M:Retyped.es5.Array`1.reduceRight``1(Retyped.es5.Array{`0}.reduceRightFn2{``0},``0)">
            <summary>
            Calls the specified callback function for all the elements in an array, in descending order. The return value of the callback function is the accumulated result, and is provided as an argument in the next call to the callback function.
            </summary>
            <param name = "callbackfn">A function that accepts up to four arguments. The reduceRight method calls the callbackfn function one time for each element in the array.</param>
            <param name = "initialValue">If initialValue is specified, it is used as the initial value to start the accumulation. The first call to the callbackfn function provides this value as an argument instead of an array value.</param>
        </member>
        <member name="M:Retyped.es5.PromiseLike`1.then``2">
            <summary>
            Attaches callbacks for the resolution and/or rejection of the Promise.
            </summary>
            <returns>A Promise for the completion of which ever callback is executed.</returns>
        </member>
        <member name="M:Retyped.es5.PromiseLike`1.then``2(Bridge.Union{Retyped.es5.PromiseLike{`0}.thenFn{``0,``1},Retyped.Primitive.Undefined,Retyped.Primitive.Null})">
            <summary>
            Attaches callbacks for the resolution and/or rejection of the Promise.
            </summary>
            <param name = "onfulfilled">The callback to execute when the Promise is resolved.</param>
            <returns>A Promise for the completion of which ever callback is executed.</returns>
        </member>
        <member name="M:Retyped.es5.PromiseLike`1.then``2(Retyped.es5.PromiseLike{`0}.thenFn{``0,``1})">
            <summary>
            Attaches callbacks for the resolution and/or rejection of the Promise.
            </summary>
            <param name = "onfulfilled">The callback to execute when the Promise is resolved.</param>
            <returns>A Promise for the completion of which ever callback is executed.</returns>
        </member>
        <member name="M:Retyped.es5.PromiseLike`1.then``2(Retyped.Primitive.Undefined)">
            <summary>
            Attaches callbacks for the resolution and/or rejection of the Promise.
            </summary>
            <param name = "onfulfilled">The callback to execute when the Promise is resolved.</param>
            <returns>A Promise for the completion of which ever callback is executed.</returns>
        </member>
        <member name="M:Retyped.es5.PromiseLike`1.then``2(Retyped.Primitive.Null)">
            <summary>
            Attaches callbacks for the resolution and/or rejection of the Promise.
            </summary>
            <param name = "onfulfilled">The callback to execute when the Promise is resolved.</param>
            <returns>A Promise for the completion of which ever callback is executed.</returns>
        </member>
        <member name="M:Retyped.es5.PromiseLike`1.then``2(Bridge.Union{Retyped.es5.PromiseLike{`0}.thenFn{``0,``1},Retyped.Primitive.Undefined,Retyped.Primitive.Null},Bridge.Union{Retyped.es5.PromiseLike{`0}.thenFn2{``0,``1},Retyped.Primitive.Undefined,Retyped.Primitive.Null})">
            <summary>
            Attaches callbacks for the resolution and/or rejection of the Promise.
            </summary>
            <param name = "onfulfilled">The callback to execute when the Promise is resolved.</param>
            <param name = "onrejected">The callback to execute when the Promise is rejected.</param>
            <returns>A Promise for the completion of which ever callback is executed.</returns>
        </member>
        <member name="M:Retyped.es5.PromiseLike`1.then``2(Retyped.es5.PromiseLike{`0}.thenFn{``0,``1},Retyped.es5.PromiseLike{`0}.thenFn2{``0,``1})">
            <summary>
            Attaches callbacks for the resolution and/or rejection of the Promise.
            </summary>
            <param name = "onfulfilled">The callback to execute when the Promise is resolved.</param>
            <param name = "onrejected">The callback to execute when the Promise is rejected.</param>
            <returns>A Promise for the completion of which ever callback is executed.</returns>
        </member>
        <member name="M:Retyped.es5.PromiseLike`1.then``2(Retyped.es5.PromiseLike{`0}.thenFn{``0,``1},Retyped.Primitive.Undefined)">
            <summary>
            Attaches callbacks for the resolution and/or rejection of the Promise.
            </summary>
            <param name = "onfulfilled">The callback to execute when the Promise is resolved.</param>
            <param name = "onrejected">The callback to execute when the Promise is rejected.</param>
            <returns>A Promise for the completion of which ever callback is executed.</returns>
        </member>
        <member name="M:Retyped.es5.PromiseLike`1.then``2(Retyped.es5.PromiseLike{`0}.thenFn{``0,``1},Retyped.Primitive.Null)">
            <summary>
            Attaches callbacks for the resolution and/or rejection of the Promise.
            </summary>
            <param name = "onfulfilled">The callback to execute when the Promise is resolved.</param>
            <param name = "onrejected">The callback to execute when the Promise is rejected.</param>
            <returns>A Promise for the completion of which ever callback is executed.</returns>
        </member>
        <member name="M:Retyped.es5.PromiseLike`1.then``2(Retyped.Primitive.Undefined,Retyped.es5.PromiseLike{`0}.thenFn2{``0,``1})">
            <summary>
            Attaches callbacks for the resolution and/or rejection of the Promise.
            </summary>
            <param name = "onfulfilled">The callback to execute when the Promise is resolved.</param>
            <param name = "onrejected">The callback to execute when the Promise is rejected.</param>
            <returns>A Promise for the completion of which ever callback is executed.</returns>
        </member>
        <member name="M:Retyped.es5.PromiseLike`1.then``2(Retyped.Primitive.Undefined,Retyped.Primitive.Undefined)">
            <summary>
            Attaches callbacks for the resolution and/or rejection of the Promise.
            </summary>
            <param name = "onfulfilled">The callback to execute when the Promise is resolved.</param>
            <param name = "onrejected">The callback to execute when the Promise is rejected.</param>
            <returns>A Promise for the completion of which ever callback is executed.</returns>
        </member>
        <member name="M:Retyped.es5.PromiseLike`1.then``2(Retyped.Primitive.Undefined,Retyped.Primitive.Null)">
            <summary>
            Attaches callbacks for the resolution and/or rejection of the Promise.
            </summary>
            <param name = "onfulfilled">The callback to execute when the Promise is resolved.</param>
            <param name = "onrejected">The callback to execute when the Promise is rejected.</param>
            <returns>A Promise for the completion of which ever callback is executed.</returns>
        </member>
        <member name="M:Retyped.es5.PromiseLike`1.then``2(Retyped.Primitive.Null,Retyped.es5.PromiseLike{`0}.thenFn2{``0,``1})">
            <summary>
            Attaches callbacks for the resolution and/or rejection of the Promise.
            </summary>
            <param name = "onfulfilled">The callback to execute when the Promise is resolved.</param>
            <param name = "onrejected">The callback to execute when the Promise is rejected.</param>
            <returns>A Promise for the completion of which ever callback is executed.</returns>
        </member>
        <member name="M:Retyped.es5.PromiseLike`1.then``2(Retyped.Primitive.Null,Retyped.Primitive.Undefined)">
            <summary>
            Attaches callbacks for the resolution and/or rejection of the Promise.
            </summary>
            <param name = "onfulfilled">The callback to execute when the Promise is resolved.</param>
            <param name = "onrejected">The callback to execute when the Promise is rejected.</param>
            <returns>A Promise for the completion of which ever callback is executed.</returns>
        </member>
        <member name="M:Retyped.es5.PromiseLike`1.then``2(Retyped.Primitive.Null,Retyped.Primitive.Null)">
            <summary>
            Attaches callbacks for the resolution and/or rejection of the Promise.
            </summary>
            <param name = "onfulfilled">The callback to execute when the Promise is resolved.</param>
            <param name = "onrejected">The callback to execute when the Promise is rejected.</param>
            <returns>A Promise for the completion of which ever callback is executed.</returns>
        </member>
        <member name="T:Retyped.es5.Promise`1">
            <summary>
            Represents the completion of an asynchronous operation
            </summary>
        </member>
        <member name="M:Retyped.es5.Promise`1.then``2">
            <summary>
            Attaches callbacks for the resolution and/or rejection of the Promise.
            </summary>
            <returns>A Promise for the completion of which ever callback is executed.</returns>
        </member>
        <member name="M:Retyped.es5.Promise`1.then``2(Bridge.Union{Retyped.es5.Promise{`0}.thenFn{``0,``1},Retyped.Primitive.Undefined,Retyped.Primitive.Null})">
            <summary>
            Attaches callbacks for the resolution and/or rejection of the Promise.
            </summary>
            <param name = "onfulfilled">The callback to execute when the Promise is resolved.</param>
            <returns>A Promise for the completion of which ever callback is executed.</returns>
        </member>
        <member name="M:Retyped.es5.Promise`1.then``2(Retyped.es5.Promise{`0}.thenFn{``0,``1})">
            <summary>
            Attaches callbacks for the resolution and/or rejection of the Promise.
            </summary>
            <param name = "onfulfilled">The callback to execute when the Promise is resolved.</param>
            <returns>A Promise for the completion of which ever callback is executed.</returns>
        </member>
        <member name="M:Retyped.es5.Promise`1.then``2(Retyped.Primitive.Undefined)">
            <summary>
            Attaches callbacks for the resolution and/or rejection of the Promise.
            </summary>
            <param name = "onfulfilled">The callback to execute when the Promise is resolved.</param>
            <returns>A Promise for the completion of which ever callback is executed.</returns>
        </member>
        <member name="M:Retyped.es5.Promise`1.then``2(Retyped.Primitive.Null)">
            <summary>
            Attaches callbacks for the resolution and/or rejection of the Promise.
            </summary>
            <param name = "onfulfilled">The callback to execute when the Promise is resolved.</param>
            <returns>A Promise for the completion of which ever callback is executed.</returns>
        </member>
        <member name="M:Retyped.es5.Promise`1.then``2(Bridge.Union{Retyped.es5.Promise{`0}.thenFn{``0,``1},Retyped.Primitive.Undefined,Retyped.Primitive.Null},Bridge.Union{Retyped.es5.Promise{`0}.thenFn2{``0,``1},Retyped.Primitive.Undefined,Retyped.Primitive.Null})">
            <summary>
            Attaches callbacks for the resolution and/or rejection of the Promise.
            </summary>
            <param name = "onfulfilled">The callback to execute when the Promise is resolved.</param>
            <param name = "onrejected">The callback to execute when the Promise is rejected.</param>
            <returns>A Promise for the completion of which ever callback is executed.</returns>
        </member>
        <member name="M:Retyped.es5.Promise`1.then``2(Retyped.es5.Promise{`0}.thenFn{``0,``1},Retyped.es5.Promise{`0}.thenFn2{``0,``1})">
            <summary>
            Attaches callbacks for the resolution and/or rejection of the Promise.
            </summary>
            <param name = "onfulfilled">The callback to execute when the Promise is resolved.</param>
            <param name = "onrejected">The callback to execute when the Promise is rejected.</param>
            <returns>A Promise for the completion of which ever callback is executed.</returns>
        </member>
        <member name="M:Retyped.es5.Promise`1.then``2(Retyped.es5.Promise{`0}.thenFn{``0,``1},Retyped.Primitive.Undefined)">
            <summary>
            Attaches callbacks for the resolution and/or rejection of the Promise.
            </summary>
            <param name = "onfulfilled">The callback to execute when the Promise is resolved.</param>
            <param name = "onrejected">The callback to execute when the Promise is rejected.</param>
            <returns>A Promise for the completion of which ever callback is executed.</returns>
        </member>
        <member name="M:Retyped.es5.Promise`1.then``2(Retyped.es5.Promise{`0}.thenFn{``0,``1},Retyped.Primitive.Null)">
            <summary>
            Attaches callbacks for the resolution and/or rejection of the Promise.
            </summary>
            <param name = "onfulfilled">The callback to execute when the Promise is resolved.</param>
            <param name = "onrejected">The callback to execute when the Promise is rejected.</param>
            <returns>A Promise for the completion of which ever callback is executed.</returns>
        </member>
        <member name="M:Retyped.es5.Promise`1.then``2(Retyped.Primitive.Undefined,Retyped.es5.Promise{`0}.thenFn2{``0,``1})">
            <summary>
            Attaches callbacks for the resolution and/or rejection of the Promise.
            </summary>
            <param name = "onfulfilled">The callback to execute when the Promise is resolved.</param>
            <param name = "onrejected">The callback to execute when the Promise is rejected.</param>
            <returns>A Promise for the completion of which ever callback is executed.</returns>
        </member>
        <member name="M:Retyped.es5.Promise`1.then``2(Retyped.Primitive.Undefined,Retyped.Primitive.Undefined)">
            <summary>
            Attaches callbacks for the resolution and/or rejection of the Promise.
            </summary>
            <param name = "onfulfilled">The callback to execute when the Promise is resolved.</param>
            <param name = "onrejected">The callback to execute when the Promise is rejected.</param>
            <returns>A Promise for the completion of which ever callback is executed.</returns>
        </member>
        <member name="M:Retyped.es5.Promise`1.then``2(Retyped.Primitive.Undefined,Retyped.Primitive.Null)">
            <summary>
            Attaches callbacks for the resolution and/or rejection of the Promise.
            </summary>
            <param name = "onfulfilled">The callback to execute when the Promise is resolved.</param>
            <param name = "onrejected">The callback to execute when the Promise is rejected.</param>
            <returns>A Promise for the completion of which ever callback is executed.</returns>
        </member>
        <member name="M:Retyped.es5.Promise`1.then``2(Retyped.Primitive.Null,Retyped.es5.Promise{`0}.thenFn2{``0,``1})">
            <summary>
            Attaches callbacks for the resolution and/or rejection of the Promise.
            </summary>
            <param name = "onfulfilled">The callback to execute when the Promise is resolved.</param>
            <param name = "onrejected">The callback to execute when the Promise is rejected.</param>
            <returns>A Promise for the completion of which ever callback is executed.</returns>
        </member>
        <member name="M:Retyped.es5.Promise`1.then``2(Retyped.Primitive.Null,Retyped.Primitive.Undefined)">
            <summary>
            Attaches callbacks for the resolution and/or rejection of the Promise.
            </summary>
            <param name = "onfulfilled">The callback to execute when the Promise is resolved.</param>
            <param name = "onrejected">The callback to execute when the Promise is rejected.</param>
            <returns>A Promise for the completion of which ever callback is executed.</returns>
        </member>
        <member name="M:Retyped.es5.Promise`1.then``2(Retyped.Primitive.Null,Retyped.Primitive.Null)">
            <summary>
            Attaches callbacks for the resolution and/or rejection of the Promise.
            </summary>
            <param name = "onfulfilled">The callback to execute when the Promise is resolved.</param>
            <param name = "onrejected">The callback to execute when the Promise is rejected.</param>
            <returns>A Promise for the completion of which ever callback is executed.</returns>
        </member>
        <member name="M:Retyped.es5.Promise`1.catch``1">
            <summary>
            Attaches a callback for only the rejection of the Promise.
            </summary>
            <returns>A Promise for the completion of the callback.</returns>
        </member>
        <member name="M:Retyped.es5.Promise`1.catch``1(Bridge.Union{Retyped.es5.Promise{`0}.catchFn{``0},Retyped.Primitive.Undefined,Retyped.Primitive.Null})">
            <summary>
            Attaches a callback for only the rejection of the Promise.
            </summary>
            <param name = "onrejected">The callback to execute when the Promise is rejected.</param>
            <returns>A Promise for the completion of the callback.</returns>
        </member>
        <member name="M:Retyped.es5.Promise`1.catch``1(Retyped.es5.Promise{`0}.catchFn{``0})">
            <summary>
            Attaches a callback for only the rejection of the Promise.
            </summary>
            <param name = "onrejected">The callback to execute when the Promise is rejected.</param>
            <returns>A Promise for the completion of the callback.</returns>
        </member>
        <member name="M:Retyped.es5.Promise`1.catch``1(Retyped.Primitive.Undefined)">
            <summary>
            Attaches a callback for only the rejection of the Promise.
            </summary>
            <param name = "onrejected">The callback to execute when the Promise is rejected.</param>
            <returns>A Promise for the completion of the callback.</returns>
        </member>
        <member name="M:Retyped.es5.Promise`1.catch``1(Retyped.Primitive.Null)">
            <summary>
            Attaches a callback for only the rejection of the Promise.
            </summary>
            <param name = "onrejected">The callback to execute when the Promise is rejected.</param>
            <returns>A Promise for the completion of the callback.</returns>
        </member>
        <member name="T:Retyped.es5.ThisType`1">
            <summary>
            Marker for contextual 'this' type
            </summary>
        </member>
        <member name="P:Retyped.es5.ArrayBuffer.byteLength">
            <summary>
            Read-only. The length of the ArrayBuffer (in bytes).
            </summary>
        </member>
        <member name="M:Retyped.es5.ArrayBuffer.slice(System.Double)">
            <summary>
            Returns a section of an ArrayBuffer.
            </summary>
        </member>
        <member name="M:Retyped.es5.ArrayBuffer.slice(System.Double,System.Double)">
            <summary>
            Returns a section of an ArrayBuffer.
            </summary>
        </member>
        <member name="T:Retyped.es5.ArrayBufferTypes">
            <summary>
            Allowed ArrayBuffer types for the buffer of an ArrayBufferView and related Typed Arrays.
            </summary>
        </member>
        <member name="P:Retyped.es5.ArrayBufferView.buffer">
            <summary>
            The ArrayBuffer instance referenced by the array.
            </summary>
        </member>
        <member name="P:Retyped.es5.ArrayBufferView.byteLength">
            <summary>
            The length in bytes of the array.
            </summary>
        </member>
        <member name="P:Retyped.es5.ArrayBufferView.byteOffset">
            <summary>
            The offset in bytes of the array.
            </summary>
        </member>
        <member name="M:Retyped.es5.DataView.getFloat32(System.Double)">
            <summary>
            Gets the Float32 value at the specified byte offset from the start of the view. There is
            no alignment constraint; multi-byte values may be fetched from any offset.
            </summary>
            <param name = "byteOffset">The place in the buffer at which the value should be retrieved.</param>
        </member>
        <member name="M:Retyped.es5.DataView.getFloat32(System.Double,System.Boolean)">
            <summary>
            Gets the Float32 value at the specified byte offset from the start of the view. There is
            no alignment constraint; multi-byte values may be fetched from any offset.
            </summary>
            <param name = "byteOffset">The place in the buffer at which the value should be retrieved.</param>
        </member>
        <member name="M:Retyped.es5.DataView.getFloat64(System.Double)">
            <summary>
            Gets the Float64 value at the specified byte offset from the start of the view. There is
            no alignment constraint; multi-byte values may be fetched from any offset.
            </summary>
            <param name = "byteOffset">The place in the buffer at which the value should be retrieved.</param>
        </member>
        <member name="M:Retyped.es5.DataView.getFloat64(System.Double,System.Boolean)">
            <summary>
            Gets the Float64 value at the specified byte offset from the start of the view. There is
            no alignment constraint; multi-byte values may be fetched from any offset.
            </summary>
            <param name = "byteOffset">The place in the buffer at which the value should be retrieved.</param>
        </member>
        <member name="M:Retyped.es5.DataView.getInt8(System.Double)">
            <summary>
            Gets the Int8 value at the specified byte offset from the start of the view. There is
            no alignment constraint; multi-byte values may be fetched from any offset.
            </summary>
            <param name = "byteOffset">The place in the buffer at which the value should be retrieved.</param>
        </member>
        <member name="M:Retyped.es5.DataView.getInt16(System.Double)">
            <summary>
            Gets the Int16 value at the specified byte offset from the start of the view. There is
            no alignment constraint; multi-byte values may be fetched from any offset.
            </summary>
            <param name = "byteOffset">The place in the buffer at which the value should be retrieved.</param>
        </member>
        <member name="M:Retyped.es5.DataView.getInt16(System.Double,System.Boolean)">
            <summary>
            Gets the Int16 value at the specified byte offset from the start of the view. There is
            no alignment constraint; multi-byte values may be fetched from any offset.
            </summary>
            <param name = "byteOffset">The place in the buffer at which the value should be retrieved.</param>
        </member>
        <member name="M:Retyped.es5.DataView.getInt32(System.Double)">
            <summary>
            Gets the Int32 value at the specified byte offset from the start of the view. There is
            no alignment constraint; multi-byte values may be fetched from any offset.
            </summary>
            <param name = "byteOffset">The place in the buffer at which the value should be retrieved.</param>
        </member>
        <member name="M:Retyped.es5.DataView.getInt32(System.Double,System.Boolean)">
            <summary>
            Gets the Int32 value at the specified byte offset from the start of the view. There is
            no alignment constraint; multi-byte values may be fetched from any offset.
            </summary>
            <param name = "byteOffset">The place in the buffer at which the value should be retrieved.</param>
        </member>
        <member name="M:Retyped.es5.DataView.getUint8(System.Double)">
            <summary>
            Gets the Uint8 value at the specified byte offset from the start of the view. There is
            no alignment constraint; multi-byte values may be fetched from any offset.
            </summary>
            <param name = "byteOffset">The place in the buffer at which the value should be retrieved.</param>
        </member>
        <member name="M:Retyped.es5.DataView.getUint16(System.Double)">
            <summary>
            Gets the Uint16 value at the specified byte offset from the start of the view. There is
            no alignment constraint; multi-byte values may be fetched from any offset.
            </summary>
            <param name = "byteOffset">The place in the buffer at which the value should be retrieved.</param>
        </member>
        <member name="M:Retyped.es5.DataView.getUint16(System.Double,System.Boolean)">
            <summary>
            Gets the Uint16 value at the specified byte offset from the start of the view. There is
            no alignment constraint; multi-byte values may be fetched from any offset.
            </summary>
            <param name = "byteOffset">The place in the buffer at which the value should be retrieved.</param>
        </member>
        <member name="M:Retyped.es5.DataView.getUint32(System.Double)">
            <summary>
            Gets the Uint32 value at the specified byte offset from the start of the view. There is
            no alignment constraint; multi-byte values may be fetched from any offset.
            </summary>
            <param name = "byteOffset">The place in the buffer at which the value should be retrieved.</param>
        </member>
        <member name="M:Retyped.es5.DataView.getUint32(System.Double,System.Boolean)">
            <summary>
            Gets the Uint32 value at the specified byte offset from the start of the view. There is
            no alignment constraint; multi-byte values may be fetched from any offset.
            </summary>
            <param name = "byteOffset">The place in the buffer at which the value should be retrieved.</param>
        </member>
        <member name="M:Retyped.es5.DataView.setFloat32(System.Double,System.Double)">
            <summary>
            Stores an Float32 value at the specified byte offset from the start of the view.
            </summary>
            <param name = "byteOffset">The place in the buffer at which the value should be set.</param>
            <param name = "value">The value to set.</param>
        </member>
        <member name="M:Retyped.es5.DataView.setFloat32(System.Double,System.Double,System.Boolean)">
            <summary>
            Stores an Float32 value at the specified byte offset from the start of the view.
            </summary>
            <param name = "byteOffset">The place in the buffer at which the value should be set.</param>
            <param name = "value">The value to set.</param>
            <param name = "littleEndian">
            If false or undefined, a big-endian value should be written,
            otherwise a little-endian value should be written.
            </param>
        </member>
        <member name="M:Retyped.es5.DataView.setFloat64(System.Double,System.Double)">
            <summary>
            Stores an Float64 value at the specified byte offset from the start of the view.
            </summary>
            <param name = "byteOffset">The place in the buffer at which the value should be set.</param>
            <param name = "value">The value to set.</param>
        </member>
        <member name="M:Retyped.es5.DataView.setFloat64(System.Double,System.Double,System.Boolean)">
            <summary>
            Stores an Float64 value at the specified byte offset from the start of the view.
            </summary>
            <param name = "byteOffset">The place in the buffer at which the value should be set.</param>
            <param name = "value">The value to set.</param>
            <param name = "littleEndian">
            If false or undefined, a big-endian value should be written,
            otherwise a little-endian value should be written.
            </param>
        </member>
        <member name="M:Retyped.es5.DataView.setInt8(System.Double,System.Double)">
            <summary>
            Stores an Int8 value at the specified byte offset from the start of the view.
            </summary>
            <param name = "byteOffset">The place in the buffer at which the value should be set.</param>
            <param name = "value">The value to set.</param>
        </member>
        <member name="M:Retyped.es5.DataView.setInt16(System.Double,System.Double)">
            <summary>
            Stores an Int16 value at the specified byte offset from the start of the view.
            </summary>
            <param name = "byteOffset">The place in the buffer at which the value should be set.</param>
            <param name = "value">The value to set.</param>
        </member>
        <member name="M:Retyped.es5.DataView.setInt16(System.Double,System.Double,System.Boolean)">
            <summary>
            Stores an Int16 value at the specified byte offset from the start of the view.
            </summary>
            <param name = "byteOffset">The place in the buffer at which the value should be set.</param>
            <param name = "value">The value to set.</param>
            <param name = "littleEndian">
            If false or undefined, a big-endian value should be written,
            otherwise a little-endian value should be written.
            </param>
        </member>
        <member name="M:Retyped.es5.DataView.setInt32(System.Double,System.Double)">
            <summary>
            Stores an Int32 value at the specified byte offset from the start of the view.
            </summary>
            <param name = "byteOffset">The place in the buffer at which the value should be set.</param>
            <param name = "value">The value to set.</param>
        </member>
        <member name="M:Retyped.es5.DataView.setInt32(System.Double,System.Double,System.Boolean)">
            <summary>
            Stores an Int32 value at the specified byte offset from the start of the view.
            </summary>
            <param name = "byteOffset">The place in the buffer at which the value should be set.</param>
            <param name = "value">The value to set.</param>
            <param name = "littleEndian">
            If false or undefined, a big-endian value should be written,
            otherwise a little-endian value should be written.
            </param>
        </member>
        <member name="M:Retyped.es5.DataView.setUint8(System.Double,System.Double)">
            <summary>
            Stores an Uint8 value at the specified byte offset from the start of the view.
            </summary>
            <param name = "byteOffset">The place in the buffer at which the value should be set.</param>
            <param name = "value">The value to set.</param>
        </member>
        <member name="M:Retyped.es5.DataView.setUint16(System.Double,System.Double)">
            <summary>
            Stores an Uint16 value at the specified byte offset from the start of the view.
            </summary>
            <param name = "byteOffset">The place in the buffer at which the value should be set.</param>
            <param name = "value">The value to set.</param>
        </member>
        <member name="M:Retyped.es5.DataView.setUint16(System.Double,System.Double,System.Boolean)">
            <summary>
            Stores an Uint16 value at the specified byte offset from the start of the view.
            </summary>
            <param name = "byteOffset">The place in the buffer at which the value should be set.</param>
            <param name = "value">The value to set.</param>
            <param name = "littleEndian">
            If false or undefined, a big-endian value should be written,
            otherwise a little-endian value should be written.
            </param>
        </member>
        <member name="M:Retyped.es5.DataView.setUint32(System.Double,System.Double)">
            <summary>
            Stores an Uint32 value at the specified byte offset from the start of the view.
            </summary>
            <param name = "byteOffset">The place in the buffer at which the value should be set.</param>
            <param name = "value">The value to set.</param>
        </member>
        <member name="M:Retyped.es5.DataView.setUint32(System.Double,System.Double,System.Boolean)">
            <summary>
            Stores an Uint32 value at the specified byte offset from the start of the view.
            </summary>
            <param name = "byteOffset">The place in the buffer at which the value should be set.</param>
            <param name = "value">The value to set.</param>
            <param name = "littleEndian">
            If false or undefined, a big-endian value should be written,
            otherwise a little-endian value should be written.
            </param>
        </member>
        <member name="P:Retyped.es5.Int8Array.BYTES_PER_ELEMENT">
            <summary>
            The size in bytes of each element in the array.
            </summary>
        </member>
        <member name="P:Retyped.es5.Int8Array.buffer">
            <summary>
            The ArrayBuffer instance referenced by the array.
            </summary>
        </member>
        <member name="P:Retyped.es5.Int8Array.byteLength">
            <summary>
            The length in bytes of the array.
            </summary>
        </member>
        <member name="P:Retyped.es5.Int8Array.byteOffset">
            <summary>
            The offset in bytes of the array.
            </summary>
        </member>
        <member name="M:Retyped.es5.Int8Array.copyWithin(System.Double,System.Double)">
            <summary>
            Returns the this object after copying a section of the array identified by start and end
            to the same array starting at position target
            </summary>
            <param name = "target">
            If target is negative, it is treated as length+target where length is the
            length of the array.
            </param>
            <param name = "start">
            If start is negative, it is treated as length+start. If end is negative, it
            is treated as length+end.
            </param>
        </member>
        <member name="M:Retyped.es5.Int8Array.copyWithin(System.Double,System.Double,System.Double)">
            <summary>
            Returns the this object after copying a section of the array identified by start and end
            to the same array starting at position target
            </summary>
            <param name = "target">
            If target is negative, it is treated as length+target where length is the
            length of the array.
            </param>
            <param name = "start">
            If start is negative, it is treated as length+start. If end is negative, it
            is treated as length+end.
            </param>
            <param name = "end">If not specified, length of the this object is used as its default value.</param>
        </member>
        <member name="M:Retyped.es5.Int8Array.every(Retyped.es5.Int8Array.everyFn)">
            <summary>
            Determines whether all the members of an array satisfy the specified test.
            or until the end of the array.
            </summary>
            <param name = "callbackfn">
            A function that accepts up to three arguments. The every method calls
            the callbackfn function for each element in array1 until the callbackfn returns false,
            </param>
        </member>
        <member name="M:Retyped.es5.Int8Array.every(Retyped.es5.Int8Array.everyFn,System.Object)">
            <summary>
            Determines whether all the members of an array satisfy the specified test.
            or until the end of the array.
            </summary>
            <param name = "callbackfn">
            A function that accepts up to three arguments. The every method calls
            the callbackfn function for each element in array1 until the callbackfn returns false,
            </param>
            <param name = "thisArg">
            An object to which the this keyword can refer in the callbackfn function.
            If thisArg is omitted, undefined is used as the this value.
            </param>
        </member>
        <member name="M:Retyped.es5.Int8Array.fill(System.Double)">
            <summary>
            Returns the this object after filling the section identified by start and end with value
            </summary>
            <param name = "value">value to fill array section with</param>
        </member>
        <member name="M:Retyped.es5.Int8Array.fill(System.Double,System.Double)">
            <summary>
            Returns the this object after filling the section identified by start and end with value
            </summary>
            <param name = "value">value to fill array section with</param>
            <param name = "start">
            index to start filling the array at. If start is negative, it is treated as
            length+start where length is the length of the array.
            </param>
        </member>
        <member name="M:Retyped.es5.Int8Array.fill(System.Double,System.Double,System.Double)">
            <summary>
            Returns the this object after filling the section identified by start and end with value
            </summary>
            <param name = "value">value to fill array section with</param>
            <param name = "start">
            index to start filling the array at. If start is negative, it is treated as
            length+start where length is the length of the array.
            </param>
            <param name = "end">
            index to stop filling the array at. If end is negative, it is treated as
            length+end.
            </param>
        </member>
        <member name="M:Retyped.es5.Int8Array.filter(Retyped.es5.Int8Array.filterFn)">
            <summary>
            Returns the elements of an array that meet the condition specified in a callback function.
            </summary>
            <param name = "callbackfn">
            A function that accepts up to three arguments. The filter method calls
            the callbackfn function one time for each element in the array.
            </param>
        </member>
        <member name="M:Retyped.es5.Int8Array.filter(Retyped.es5.Int8Array.filterFn,System.Object)">
            <summary>
            Returns the elements of an array that meet the condition specified in a callback function.
            </summary>
            <param name = "callbackfn">
            A function that accepts up to three arguments. The filter method calls
            the callbackfn function one time for each element in the array.
            </param>
            <param name = "thisArg">
            An object to which the this keyword can refer in the callbackfn function.
            If thisArg is omitted, undefined is used as the this value.
            </param>
        </member>
        <member name="M:Retyped.es5.Int8Array.find(Retyped.es5.Int8Array.findFn)">
            <summary>
            Returns the value of the first element in the array where predicate is true, and undefined
            otherwise.
            immediately returns that element value. Otherwise, find returns undefined.
            </summary>
            <param name = "predicate">
            find calls predicate once for each element of the array, in ascending
            order, until it finds one where predicate returns true. If such an element is found, find
            </param>
        </member>
        <member name="M:Retyped.es5.Int8Array.find(Retyped.es5.Int8Array.findFn,System.Object)">
            <summary>
            Returns the value of the first element in the array where predicate is true, and undefined
            otherwise.
            immediately returns that element value. Otherwise, find returns undefined.
            </summary>
            <param name = "predicate">
            find calls predicate once for each element of the array, in ascending
            order, until it finds one where predicate returns true. If such an element is found, find
            </param>
            <param name = "thisArg">
            If provided, it will be used as the this value for each invocation of
            predicate. If it is not provided, undefined is used instead.
            </param>
        </member>
        <member name="M:Retyped.es5.Int8Array.findIndex(Retyped.es5.Int8Array.findIndexFn)">
            <summary>
            Returns the index of the first element in the array where predicate is true, and -1
            otherwise.
            findIndex immediately returns that element index. Otherwise, findIndex returns -1.
            </summary>
            <param name = "predicate">
            find calls predicate once for each element of the array, in ascending
            order, until it finds one where predicate returns true. If such an element is found,
            </param>
        </member>
        <member name="M:Retyped.es5.Int8Array.findIndex(Retyped.es5.Int8Array.findIndexFn,System.Object)">
            <summary>
            Returns the index of the first element in the array where predicate is true, and -1
            otherwise.
            findIndex immediately returns that element index. Otherwise, findIndex returns -1.
            </summary>
            <param name = "predicate">
            find calls predicate once for each element of the array, in ascending
            order, until it finds one where predicate returns true. If such an element is found,
            </param>
            <param name = "thisArg">
            If provided, it will be used as the this value for each invocation of
            predicate. If it is not provided, undefined is used instead.
            </param>
        </member>
        <member name="M:Retyped.es5.Int8Array.forEach(Retyped.es5.Int8Array.forEachFn)">
            <summary>
            Performs the specified action for each element in an array.
            </summary>
            <param name = "callbackfn">
            A function that accepts up to three arguments. forEach calls the
            callbackfn function one time for each element in the array.
            </param>
        </member>
        <member name="M:Retyped.es5.Int8Array.forEach(Retyped.es5.Int8Array.forEachFn,System.Object)">
            <summary>
            Performs the specified action for each element in an array.
            </summary>
            <param name = "callbackfn">
            A function that accepts up to three arguments. forEach calls the
            callbackfn function one time for each element in the array.
            </param>
            <param name = "thisArg">
            An object to which the this keyword can refer in the callbackfn function.
            If thisArg is omitted, undefined is used as the this value.
            </param>
        </member>
        <member name="M:Retyped.es5.Int8Array.indexOf(System.Double)">
            <summary>
            Returns the index of the first occurrence of a value in an array.
            </summary>
            <param name = "searchElement">The value to locate in the array.</param>
        </member>
        <member name="M:Retyped.es5.Int8Array.indexOf(System.Double,System.Double)">
            <summary>
            Returns the index of the first occurrence of a value in an array.
            </summary>
            <param name = "searchElement">The value to locate in the array.</param>
            <param name = "fromIndex">
            The array index at which to begin the search. If fromIndex is omitted, the
            search starts at index 0.
            </param>
        </member>
        <member name="M:Retyped.es5.Int8Array.join">
            <summary>
            Adds all the elements of an array separated by the specified separator string.
            </summary>
        </member>
        <member name="M:Retyped.es5.Int8Array.join(System.String)">
            <summary>
            Adds all the elements of an array separated by the specified separator string.
            </summary>
            <param name = "separator">
            A string used to separate one element of an array from the next in the
            resulting String. If omitted, the array elements are separated with a comma.
            </param>
        </member>
        <member name="M:Retyped.es5.Int8Array.lastIndexOf(System.Double)">
            <summary>
            Returns the index of the last occurrence of a value in an array.
            </summary>
            <param name = "searchElement">The value to locate in the array.</param>
        </member>
        <member name="M:Retyped.es5.Int8Array.lastIndexOf(System.Double,System.Double)">
            <summary>
            Returns the index of the last occurrence of a value in an array.
            </summary>
            <param name = "searchElement">The value to locate in the array.</param>
            <param name = "fromIndex">
            The array index at which to begin the search. If fromIndex is omitted, the
            search starts at index 0.
            </param>
        </member>
        <member name="P:Retyped.es5.Int8Array.length">
            <summary>
            The length of the array.
            </summary>
        </member>
        <member name="M:Retyped.es5.Int8Array.map(Retyped.es5.Int8Array.mapFn)">
            <summary>
            Calls a defined callback function on each element of an array, and returns an array that
            contains the results.
            </summary>
            <param name = "callbackfn">
            A function that accepts up to three arguments. The map method calls the
            callbackfn function one time for each element in the array.
            </param>
        </member>
        <member name="M:Retyped.es5.Int8Array.map(Retyped.es5.Int8Array.mapFn,System.Object)">
            <summary>
            Calls a defined callback function on each element of an array, and returns an array that
            contains the results.
            </summary>
            <param name = "callbackfn">
            A function that accepts up to three arguments. The map method calls the
            callbackfn function one time for each element in the array.
            </param>
            <param name = "thisArg">
            An object to which the this keyword can refer in the callbackfn function.
            If thisArg is omitted, undefined is used as the this value.
            </param>
        </member>
        <member name="M:Retyped.es5.Int8Array.reduce(Retyped.es5.Int8Array.reduceFn)">
            <summary>
            Calls the specified callback function for all the elements in an array. The return value of
            the callback function is the accumulated result, and is provided as an argument in the next
            call to the callback function.
            instead of an array value.
            </summary>
            <param name = "callbackfn">
            A function that accepts up to four arguments. The reduce method calls the
            callbackfn function one time for each element in the array.
            </param>
        </member>
        <member name="M:Retyped.es5.Int8Array.reduce(Retyped.es5.Int8Array.reduceFn,System.Double)">
            <summary>
            Calls the specified callback function for all the elements in an array. The return value of
            the callback function is the accumulated result, and is provided as an argument in the next
            call to the callback function.
            instead of an array value.
            </summary>
            <param name = "callbackfn">
            A function that accepts up to four arguments. The reduce method calls the
            callbackfn function one time for each element in the array.
            </param>
            <param name = "initialValue">
            If initialValue is specified, it is used as the initial value to start
            the accumulation. The first call to the callbackfn function provides this value as an argument
            </param>
        </member>
        <member name="M:Retyped.es5.Int8Array.reduce``1(Retyped.es5.Int8Array.reduceFn2{``0},``0)">
            <summary>
            Calls the specified callback function for all the elements in an array. The return value of
            the callback function is the accumulated result, and is provided as an argument in the next
            call to the callback function.
            instead of an array value.
            </summary>
            <param name = "callbackfn">
            A function that accepts up to four arguments. The reduce method calls the
            callbackfn function one time for each element in the array.
            </param>
            <param name = "initialValue">
            If initialValue is specified, it is used as the initial value to start
            the accumulation. The first call to the callbackfn function provides this value as an argument
            </param>
        </member>
        <member name="M:Retyped.es5.Int8Array.reduceRight(Retyped.es5.Int8Array.reduceRightFn)">
            <summary>
            Calls the specified callback function for all the elements in an array, in descending order.
            The return value of the callback function is the accumulated result, and is provided as an
            argument in the next call to the callback function.
            argument instead of an array value.
            </summary>
            <param name = "callbackfn">
            A function that accepts up to four arguments. The reduceRight method calls
            the callbackfn function one time for each element in the array.
            </param>
        </member>
        <member name="M:Retyped.es5.Int8Array.reduceRight(Retyped.es5.Int8Array.reduceRightFn,System.Double)">
            <summary>
            Calls the specified callback function for all the elements in an array, in descending order.
            The return value of the callback function is the accumulated result, and is provided as an
            argument in the next call to the callback function.
            argument instead of an array value.
            </summary>
            <param name = "callbackfn">
            A function that accepts up to four arguments. The reduceRight method calls
            the callbackfn function one time for each element in the array.
            </param>
            <param name = "initialValue">
            If initialValue is specified, it is used as the initial value to start
            the accumulation. The first call to the callbackfn function provides this value as an
            </param>
        </member>
        <member name="M:Retyped.es5.Int8Array.reduceRight``1(Retyped.es5.Int8Array.reduceRightFn2{``0},``0)">
            <summary>
            Calls the specified callback function for all the elements in an array, in descending order.
            The return value of the callback function is the accumulated result, and is provided as an
            argument in the next call to the callback function.
            instead of an array value.
            </summary>
            <param name = "callbackfn">
            A function that accepts up to four arguments. The reduceRight method calls
            the callbackfn function one time for each element in the array.
            </param>
            <param name = "initialValue">
            If initialValue is specified, it is used as the initial value to start
            the accumulation. The first call to the callbackfn function provides this value as an argument
            </param>
        </member>
        <member name="M:Retyped.es5.Int8Array.reverse">
            <summary>
            Reverses the elements in an Array.
            </summary>
        </member>
        <member name="M:Retyped.es5.Int8Array.set(Retyped.es5.ArrayLike{System.Double})">
            <summary>
            Sets a value or an array of values.
            </summary>
            <param name = "array">A typed or untyped array of values to set.</param>
        </member>
        <member name="M:Retyped.es5.Int8Array.set(Retyped.es5.ArrayLike{System.Double},System.Double)">
            <summary>
            Sets a value or an array of values.
            </summary>
            <param name = "array">A typed or untyped array of values to set.</param>
            <param name = "offset">The index in the current array at which the values are to be written.</param>
        </member>
        <member name="M:Retyped.es5.Int8Array.slice">
            <summary>
            Returns a section of an array.
            </summary>
        </member>
        <member name="M:Retyped.es5.Int8Array.slice(System.Double)">
            <summary>
            Returns a section of an array.
            </summary>
            <param name = "start">The beginning of the specified portion of the array.</param>
        </member>
        <member name="M:Retyped.es5.Int8Array.slice(System.Double,System.Double)">
            <summary>
            Returns a section of an array.
            </summary>
            <param name = "start">The beginning of the specified portion of the array.</param>
            <param name = "end">The end of the specified portion of the array.</param>
        </member>
        <member name="M:Retyped.es5.Int8Array.some(Retyped.es5.Int8Array.someFn)">
            <summary>
            Determines whether the specified callback function returns true for any element of an array.
            the end of the array.
            </summary>
            <param name = "callbackfn">
            A function that accepts up to three arguments. The some method calls the
            callbackfn function for each element in array1 until the callbackfn returns true, or until
            </param>
        </member>
        <member name="M:Retyped.es5.Int8Array.some(Retyped.es5.Int8Array.someFn,System.Object)">
            <summary>
            Determines whether the specified callback function returns true for any element of an array.
            the end of the array.
            </summary>
            <param name = "callbackfn">
            A function that accepts up to three arguments. The some method calls the
            callbackfn function for each element in array1 until the callbackfn returns true, or until
            </param>
            <param name = "thisArg">
            An object to which the this keyword can refer in the callbackfn function.
            If thisArg is omitted, undefined is used as the this value.
            </param>
        </member>
        <member name="M:Retyped.es5.Int8Array.sort">
            <summary>
            Sorts an array.
            </summary>
        </member>
        <member name="M:Retyped.es5.Int8Array.sort(Retyped.es5.Int8Array.sortFn)">
            <summary>
            Sorts an array.
            </summary>
            <param name = "compareFn">
            The name of the function used to determine the order of the elements. If
            omitted, the elements are sorted in ascending, ASCII character order.
            </param>
        </member>
        <member name="M:Retyped.es5.Int8Array.subarray(System.Double)">
            <summary>
            Gets a new Int8Array view of the ArrayBuffer store for this array, referencing the elements
            at begin, inclusive, up to end, exclusive.
            </summary>
            <param name = "begin">The index of the beginning of the array.</param>
        </member>
        <member name="M:Retyped.es5.Int8Array.subarray(System.Double,System.Double)">
            <summary>
            Gets a new Int8Array view of the ArrayBuffer store for this array, referencing the elements
            at begin, inclusive, up to end, exclusive.
            </summary>
            <param name = "begin">The index of the beginning of the array.</param>
            <param name = "end">The index of the end of the array.</param>
        </member>
        <member name="M:Retyped.es5.Int8Array.toLocaleString">
            <summary>
            Converts a number to a string by using the current locale.
            </summary>
        </member>
        <member name="M:Retyped.es5.Int8Array.toString">
            <summary>
            Returns a string representation of an array.
            </summary>
        </member>
        <member name="P:Retyped.es5.Int8ArrayConstructor.BYTES_PER_ELEMENT">
            <summary>
            The size in bytes of each element in the array.
            </summary>
        </member>
        <member name="M:Retyped.es5.Int8ArrayConstructor.of(System.Double[])">
            <summary>
            Returns a new array from a set of elements.
            </summary>
            <param name = "items">A set of elements to include in the new array object.</param>
        </member>
        <member name="M:Retyped.es5.Int8ArrayConstructor.from(Retyped.es5.ArrayLike{System.Double})">
            <summary>
            Creates an array from an array-like or iterable object.
            </summary>
            <param name = "arrayLike">An array-like or iterable object to convert to an array.</param>
        </member>
        <member name="M:Retyped.es5.Int8ArrayConstructor.from(Retyped.es5.ArrayLike{System.Double},Retyped.es5.Int8ArrayConstructor.fromFn)">
            <summary>
            Creates an array from an array-like or iterable object.
            </summary>
            <param name = "arrayLike">An array-like or iterable object to convert to an array.</param>
            <param name = "mapfn">A mapping function to call on every element of the array.</param>
        </member>
        <member name="M:Retyped.es5.Int8ArrayConstructor.from(Retyped.es5.ArrayLike{System.Double},Retyped.es5.Int8ArrayConstructor.fromFn,System.Object)">
            <summary>
            Creates an array from an array-like or iterable object.
            </summary>
            <param name = "arrayLike">An array-like or iterable object to convert to an array.</param>
            <param name = "mapfn">A mapping function to call on every element of the array.</param>
            <param name = "thisArg">Value of 'this' used to invoke the mapfn.</param>
        </member>
        <member name="P:Retyped.es5.Uint8Array.BYTES_PER_ELEMENT">
            <summary>
            The size in bytes of each element in the array.
            </summary>
        </member>
        <member name="P:Retyped.es5.Uint8Array.buffer">
            <summary>
            The ArrayBuffer instance referenced by the array.
            </summary>
        </member>
        <member name="P:Retyped.es5.Uint8Array.byteLength">
            <summary>
            The length in bytes of the array.
            </summary>
        </member>
        <member name="P:Retyped.es5.Uint8Array.byteOffset">
            <summary>
            The offset in bytes of the array.
            </summary>
        </member>
        <member name="M:Retyped.es5.Uint8Array.copyWithin(System.Double,System.Double)">
            <summary>
            Returns the this object after copying a section of the array identified by start and end
            to the same array starting at position target
            </summary>
            <param name = "target">
            If target is negative, it is treated as length+target where length is the
            length of the array.
            </param>
            <param name = "start">
            If start is negative, it is treated as length+start. If end is negative, it
            is treated as length+end.
            </param>
        </member>
        <member name="M:Retyped.es5.Uint8Array.copyWithin(System.Double,System.Double,System.Double)">
            <summary>
            Returns the this object after copying a section of the array identified by start and end
            to the same array starting at position target
            </summary>
            <param name = "target">
            If target is negative, it is treated as length+target where length is the
            length of the array.
            </param>
            <param name = "start">
            If start is negative, it is treated as length+start. If end is negative, it
            is treated as length+end.
            </param>
            <param name = "end">If not specified, length of the this object is used as its default value.</param>
        </member>
        <member name="M:Retyped.es5.Uint8Array.every(Retyped.es5.Uint8Array.everyFn)">
            <summary>
            Determines whether all the members of an array satisfy the specified test.
            or until the end of the array.
            </summary>
            <param name = "callbackfn">
            A function that accepts up to three arguments. The every method calls
            the callbackfn function for each element in array1 until the callbackfn returns false,
            </param>
        </member>
        <member name="M:Retyped.es5.Uint8Array.every(Retyped.es5.Uint8Array.everyFn,System.Object)">
            <summary>
            Determines whether all the members of an array satisfy the specified test.
            or until the end of the array.
            </summary>
            <param name = "callbackfn">
            A function that accepts up to three arguments. The every method calls
            the callbackfn function for each element in array1 until the callbackfn returns false,
            </param>
            <param name = "thisArg">
            An object to which the this keyword can refer in the callbackfn function.
            If thisArg is omitted, undefined is used as the this value.
            </param>
        </member>
        <member name="M:Retyped.es5.Uint8Array.fill(System.Double)">
            <summary>
            Returns the this object after filling the section identified by start and end with value
            </summary>
            <param name = "value">value to fill array section with</param>
        </member>
        <member name="M:Retyped.es5.Uint8Array.fill(System.Double,System.Double)">
            <summary>
            Returns the this object after filling the section identified by start and end with value
            </summary>
            <param name = "value">value to fill array section with</param>
            <param name = "start">
            index to start filling the array at. If start is negative, it is treated as
            length+start where length is the length of the array.
            </param>
        </member>
        <member name="M:Retyped.es5.Uint8Array.fill(System.Double,System.Double,System.Double)">
            <summary>
            Returns the this object after filling the section identified by start and end with value
            </summary>
            <param name = "value">value to fill array section with</param>
            <param name = "start">
            index to start filling the array at. If start is negative, it is treated as
            length+start where length is the length of the array.
            </param>
            <param name = "end">
            index to stop filling the array at. If end is negative, it is treated as
            length+end.
            </param>
        </member>
        <member name="M:Retyped.es5.Uint8Array.filter(Retyped.es5.Uint8Array.filterFn)">
            <summary>
            Returns the elements of an array that meet the condition specified in a callback function.
            </summary>
            <param name = "callbackfn">
            A function that accepts up to three arguments. The filter method calls
            the callbackfn function one time for each element in the array.
            </param>
        </member>
        <member name="M:Retyped.es5.Uint8Array.filter(Retyped.es5.Uint8Array.filterFn,System.Object)">
            <summary>
            Returns the elements of an array that meet the condition specified in a callback function.
            </summary>
            <param name = "callbackfn">
            A function that accepts up to three arguments. The filter method calls
            the callbackfn function one time for each element in the array.
            </param>
            <param name = "thisArg">
            An object to which the this keyword can refer in the callbackfn function.
            If thisArg is omitted, undefined is used as the this value.
            </param>
        </member>
        <member name="M:Retyped.es5.Uint8Array.find(Retyped.es5.Uint8Array.findFn)">
            <summary>
            Returns the value of the first element in the array where predicate is true, and undefined
            otherwise.
            immediately returns that element value. Otherwise, find returns undefined.
            </summary>
            <param name = "predicate">
            find calls predicate once for each element of the array, in ascending
            order, until it finds one where predicate returns true. If such an element is found, find
            </param>
        </member>
        <member name="M:Retyped.es5.Uint8Array.find(Retyped.es5.Uint8Array.findFn,System.Object)">
            <summary>
            Returns the value of the first element in the array where predicate is true, and undefined
            otherwise.
            immediately returns that element value. Otherwise, find returns undefined.
            </summary>
            <param name = "predicate">
            find calls predicate once for each element of the array, in ascending
            order, until it finds one where predicate returns true. If such an element is found, find
            </param>
            <param name = "thisArg">
            If provided, it will be used as the this value for each invocation of
            predicate. If it is not provided, undefined is used instead.
            </param>
        </member>
        <member name="M:Retyped.es5.Uint8Array.findIndex(Retyped.es5.Uint8Array.findIndexFn)">
            <summary>
            Returns the index of the first element in the array where predicate is true, and -1
            otherwise.
            findIndex immediately returns that element index. Otherwise, findIndex returns -1.
            </summary>
            <param name = "predicate">
            find calls predicate once for each element of the array, in ascending
            order, until it finds one where predicate returns true. If such an element is found,
            </param>
        </member>
        <member name="M:Retyped.es5.Uint8Array.findIndex(Retyped.es5.Uint8Array.findIndexFn,System.Object)">
            <summary>
            Returns the index of the first element in the array where predicate is true, and -1
            otherwise.
            findIndex immediately returns that element index. Otherwise, findIndex returns -1.
            </summary>
            <param name = "predicate">
            find calls predicate once for each element of the array, in ascending
            order, until it finds one where predicate returns true. If such an element is found,
            </param>
            <param name = "thisArg">
            If provided, it will be used as the this value for each invocation of
            predicate. If it is not provided, undefined is used instead.
            </param>
        </member>
        <member name="M:Retyped.es5.Uint8Array.forEach(Retyped.es5.Uint8Array.forEachFn)">
            <summary>
            Performs the specified action for each element in an array.
            </summary>
            <param name = "callbackfn">
            A function that accepts up to three arguments. forEach calls the
            callbackfn function one time for each element in the array.
            </param>
        </member>
        <member name="M:Retyped.es5.Uint8Array.forEach(Retyped.es5.Uint8Array.forEachFn,System.Object)">
            <summary>
            Performs the specified action for each element in an array.
            </summary>
            <param name = "callbackfn">
            A function that accepts up to three arguments. forEach calls the
            callbackfn function one time for each element in the array.
            </param>
            <param name = "thisArg">
            An object to which the this keyword can refer in the callbackfn function.
            If thisArg is omitted, undefined is used as the this value.
            </param>
        </member>
        <member name="M:Retyped.es5.Uint8Array.indexOf(System.Double)">
            <summary>
            Returns the index of the first occurrence of a value in an array.
            </summary>
            <param name = "searchElement">The value to locate in the array.</param>
        </member>
        <member name="M:Retyped.es5.Uint8Array.indexOf(System.Double,System.Double)">
            <summary>
            Returns the index of the first occurrence of a value in an array.
            </summary>
            <param name = "searchElement">The value to locate in the array.</param>
            <param name = "fromIndex">
            The array index at which to begin the search. If fromIndex is omitted, the
            search starts at index 0.
            </param>
        </member>
        <member name="M:Retyped.es5.Uint8Array.join">
            <summary>
            Adds all the elements of an array separated by the specified separator string.
            </summary>
        </member>
        <member name="M:Retyped.es5.Uint8Array.join(System.String)">
            <summary>
            Adds all the elements of an array separated by the specified separator string.
            </summary>
            <param name = "separator">
            A string used to separate one element of an array from the next in the
            resulting String. If omitted, the array elements are separated with a comma.
            </param>
        </member>
        <member name="M:Retyped.es5.Uint8Array.lastIndexOf(System.Double)">
            <summary>
            Returns the index of the last occurrence of a value in an array.
            </summary>
            <param name = "searchElement">The value to locate in the array.</param>
        </member>
        <member name="M:Retyped.es5.Uint8Array.lastIndexOf(System.Double,System.Double)">
            <summary>
            Returns the index of the last occurrence of a value in an array.
            </summary>
            <param name = "searchElement">The value to locate in the array.</param>
            <param name = "fromIndex">
            The array index at which to begin the search. If fromIndex is omitted, the
            search starts at index 0.
            </param>
        </member>
        <member name="P:Retyped.es5.Uint8Array.length">
            <summary>
            The length of the array.
            </summary>
        </member>
        <member name="M:Retyped.es5.Uint8Array.map(Retyped.es5.Uint8Array.mapFn)">
            <summary>
            Calls a defined callback function on each element of an array, and returns an array that
            contains the results.
            </summary>
            <param name = "callbackfn">
            A function that accepts up to three arguments. The map method calls the
            callbackfn function one time for each element in the array.
            </param>
        </member>
        <member name="M:Retyped.es5.Uint8Array.map(Retyped.es5.Uint8Array.mapFn,System.Object)">
            <summary>
            Calls a defined callback function on each element of an array, and returns an array that
            contains the results.
            </summary>
            <param name = "callbackfn">
            A function that accepts up to three arguments. The map method calls the
            callbackfn function one time for each element in the array.
            </param>
            <param name = "thisArg">
            An object to which the this keyword can refer in the callbackfn function.
            If thisArg is omitted, undefined is used as the this value.
            </param>
        </member>
        <member name="M:Retyped.es5.Uint8Array.reduce(Retyped.es5.Uint8Array.reduceFn)">
            <summary>
            Calls the specified callback function for all the elements in an array. The return value of
            the callback function is the accumulated result, and is provided as an argument in the next
            call to the callback function.
            instead of an array value.
            </summary>
            <param name = "callbackfn">
            A function that accepts up to four arguments. The reduce method calls the
            callbackfn function one time for each element in the array.
            </param>
        </member>
        <member name="M:Retyped.es5.Uint8Array.reduce(Retyped.es5.Uint8Array.reduceFn,System.Double)">
            <summary>
            Calls the specified callback function for all the elements in an array. The return value of
            the callback function is the accumulated result, and is provided as an argument in the next
            call to the callback function.
            instead of an array value.
            </summary>
            <param name = "callbackfn">
            A function that accepts up to four arguments. The reduce method calls the
            callbackfn function one time for each element in the array.
            </param>
            <param name = "initialValue">
            If initialValue is specified, it is used as the initial value to start
            the accumulation. The first call to the callbackfn function provides this value as an argument
            </param>
        </member>
        <member name="M:Retyped.es5.Uint8Array.reduce``1(Retyped.es5.Uint8Array.reduceFn2{``0},``0)">
            <summary>
            Calls the specified callback function for all the elements in an array. The return value of
            the callback function is the accumulated result, and is provided as an argument in the next
            call to the callback function.
            instead of an array value.
            </summary>
            <param name = "callbackfn">
            A function that accepts up to four arguments. The reduce method calls the
            callbackfn function one time for each element in the array.
            </param>
            <param name = "initialValue">
            If initialValue is specified, it is used as the initial value to start
            the accumulation. The first call to the callbackfn function provides this value as an argument
            </param>
        </member>
        <member name="M:Retyped.es5.Uint8Array.reduceRight(Retyped.es5.Uint8Array.reduceRightFn)">
            <summary>
            Calls the specified callback function for all the elements in an array, in descending order.
            The return value of the callback function is the accumulated result, and is provided as an
            argument in the next call to the callback function.
            argument instead of an array value.
            </summary>
            <param name = "callbackfn">
            A function that accepts up to four arguments. The reduceRight method calls
            the callbackfn function one time for each element in the array.
            </param>
        </member>
        <member name="M:Retyped.es5.Uint8Array.reduceRight(Retyped.es5.Uint8Array.reduceRightFn,System.Double)">
            <summary>
            Calls the specified callback function for all the elements in an array, in descending order.
            The return value of the callback function is the accumulated result, and is provided as an
            argument in the next call to the callback function.
            argument instead of an array value.
            </summary>
            <param name = "callbackfn">
            A function that accepts up to four arguments. The reduceRight method calls
            the callbackfn function one time for each element in the array.
            </param>
            <param name = "initialValue">
            If initialValue is specified, it is used as the initial value to start
            the accumulation. The first call to the callbackfn function provides this value as an
            </param>
        </member>
        <member name="M:Retyped.es5.Uint8Array.reduceRight``1(Retyped.es5.Uint8Array.reduceRightFn2{``0},``0)">
            <summary>
            Calls the specified callback function for all the elements in an array, in descending order.
            The return value of the callback function is the accumulated result, and is provided as an
            argument in the next call to the callback function.
            instead of an array value.
            </summary>
            <param name = "callbackfn">
            A function that accepts up to four arguments. The reduceRight method calls
            the callbackfn function one time for each element in the array.
            </param>
            <param name = "initialValue">
            If initialValue is specified, it is used as the initial value to start
            the accumulation. The first call to the callbackfn function provides this value as an argument
            </param>
        </member>
        <member name="M:Retyped.es5.Uint8Array.reverse">
            <summary>
            Reverses the elements in an Array.
            </summary>
        </member>
        <member name="M:Retyped.es5.Uint8Array.set(Retyped.es5.ArrayLike{System.Double})">
            <summary>
            Sets a value or an array of values.
            </summary>
            <param name = "array">A typed or untyped array of values to set.</param>
        </member>
        <member name="M:Retyped.es5.Uint8Array.set(Retyped.es5.ArrayLike{System.Double},System.Double)">
            <summary>
            Sets a value or an array of values.
            </summary>
            <param name = "array">A typed or untyped array of values to set.</param>
            <param name = "offset">The index in the current array at which the values are to be written.</param>
        </member>
        <member name="M:Retyped.es5.Uint8Array.slice">
            <summary>
            Returns a section of an array.
            </summary>
        </member>
        <member name="M:Retyped.es5.Uint8Array.slice(System.Double)">
            <summary>
            Returns a section of an array.
            </summary>
            <param name = "start">The beginning of the specified portion of the array.</param>
        </member>
        <member name="M:Retyped.es5.Uint8Array.slice(System.Double,System.Double)">
            <summary>
            Returns a section of an array.
            </summary>
            <param name = "start">The beginning of the specified portion of the array.</param>
            <param name = "end">The end of the specified portion of the array.</param>
        </member>
        <member name="M:Retyped.es5.Uint8Array.some(Retyped.es5.Uint8Array.someFn)">
            <summary>
            Determines whether the specified callback function returns true for any element of an array.
            the end of the array.
            </summary>
            <param name = "callbackfn">
            A function that accepts up to three arguments. The some method calls the
            callbackfn function for each element in array1 until the callbackfn returns true, or until
            </param>
        </member>
        <member name="M:Retyped.es5.Uint8Array.some(Retyped.es5.Uint8Array.someFn,System.Object)">
            <summary>
            Determines whether the specified callback function returns true for any element of an array.
            the end of the array.
            </summary>
            <param name = "callbackfn">
            A function that accepts up to three arguments. The some method calls the
            callbackfn function for each element in array1 until the callbackfn returns true, or until
            </param>
            <param name = "thisArg">
            An object to which the this keyword can refer in the callbackfn function.
            If thisArg is omitted, undefined is used as the this value.
            </param>
        </member>
        <member name="M:Retyped.es5.Uint8Array.sort">
            <summary>
            Sorts an array.
            </summary>
        </member>
        <member name="M:Retyped.es5.Uint8Array.sort(Retyped.es5.Uint8Array.sortFn)">
            <summary>
            Sorts an array.
            </summary>
            <param name = "compareFn">
            The name of the function used to determine the order of the elements. If
            omitted, the elements are sorted in ascending, ASCII character order.
            </param>
        </member>
        <member name="M:Retyped.es5.Uint8Array.subarray(System.Double)">
            <summary>
            Gets a new Uint8Array view of the ArrayBuffer store for this array, referencing the elements
            at begin, inclusive, up to end, exclusive.
            </summary>
            <param name = "begin">The index of the beginning of the array.</param>
        </member>
        <member name="M:Retyped.es5.Uint8Array.subarray(System.Double,System.Double)">
            <summary>
            Gets a new Uint8Array view of the ArrayBuffer store for this array, referencing the elements
            at begin, inclusive, up to end, exclusive.
            </summary>
            <param name = "begin">The index of the beginning of the array.</param>
            <param name = "end">The index of the end of the array.</param>
        </member>
        <member name="M:Retyped.es5.Uint8Array.toLocaleString">
            <summary>
            Converts a number to a string by using the current locale.
            </summary>
        </member>
        <member name="M:Retyped.es5.Uint8Array.toString">
            <summary>
            Returns a string representation of an array.
            </summary>
        </member>
        <member name="P:Retyped.es5.Uint8ArrayConstructor.BYTES_PER_ELEMENT">
            <summary>
            The size in bytes of each element in the array.
            </summary>
        </member>
        <member name="M:Retyped.es5.Uint8ArrayConstructor.of(System.Double[])">
            <summary>
            Returns a new array from a set of elements.
            </summary>
            <param name = "items">A set of elements to include in the new array object.</param>
        </member>
        <member name="M:Retyped.es5.Uint8ArrayConstructor.from(Retyped.es5.ArrayLike{System.Double})">
            <summary>
            Creates an array from an array-like or iterable object.
            </summary>
            <param name = "arrayLike">An array-like or iterable object to convert to an array.</param>
        </member>
        <member name="M:Retyped.es5.Uint8ArrayConstructor.from(Retyped.es5.ArrayLike{System.Double},Retyped.es5.Uint8ArrayConstructor.fromFn)">
            <summary>
            Creates an array from an array-like or iterable object.
            </summary>
            <param name = "arrayLike">An array-like or iterable object to convert to an array.</param>
            <param name = "mapfn">A mapping function to call on every element of the array.</param>
        </member>
        <member name="M:Retyped.es5.Uint8ArrayConstructor.from(Retyped.es5.ArrayLike{System.Double},Retyped.es5.Uint8ArrayConstructor.fromFn,System.Object)">
            <summary>
            Creates an array from an array-like or iterable object.
            </summary>
            <param name = "arrayLike">An array-like or iterable object to convert to an array.</param>
            <param name = "mapfn">A mapping function to call on every element of the array.</param>
            <param name = "thisArg">Value of 'this' used to invoke the mapfn.</param>
        </member>
        <member name="P:Retyped.es5.Uint8ClampedArray.BYTES_PER_ELEMENT">
            <summary>
            The size in bytes of each element in the array.
            </summary>
        </member>
        <member name="P:Retyped.es5.Uint8ClampedArray.buffer">
            <summary>
            The ArrayBuffer instance referenced by the array.
            </summary>
        </member>
        <member name="P:Retyped.es5.Uint8ClampedArray.byteLength">
            <summary>
            The length in bytes of the array.
            </summary>
        </member>
        <member name="P:Retyped.es5.Uint8ClampedArray.byteOffset">
            <summary>
            The offset in bytes of the array.
            </summary>
        </member>
        <member name="M:Retyped.es5.Uint8ClampedArray.copyWithin(System.Double,System.Double)">
            <summary>
            Returns the this object after copying a section of the array identified by start and end
            to the same array starting at position target
            </summary>
            <param name = "target">
            If target is negative, it is treated as length+target where length is the
            length of the array.
            </param>
            <param name = "start">
            If start is negative, it is treated as length+start. If end is negative, it
            is treated as length+end.
            </param>
        </member>
        <member name="M:Retyped.es5.Uint8ClampedArray.copyWithin(System.Double,System.Double,System.Double)">
            <summary>
            Returns the this object after copying a section of the array identified by start and end
            to the same array starting at position target
            </summary>
            <param name = "target">
            If target is negative, it is treated as length+target where length is the
            length of the array.
            </param>
            <param name = "start">
            If start is negative, it is treated as length+start. If end is negative, it
            is treated as length+end.
            </param>
            <param name = "end">If not specified, length of the this object is used as its default value.</param>
        </member>
        <member name="M:Retyped.es5.Uint8ClampedArray.every(Retyped.es5.Uint8ClampedArray.everyFn)">
            <summary>
            Determines whether all the members of an array satisfy the specified test.
            or until the end of the array.
            </summary>
            <param name = "callbackfn">
            A function that accepts up to three arguments. The every method calls
            the callbackfn function for each element in array1 until the callbackfn returns false,
            </param>
        </member>
        <member name="M:Retyped.es5.Uint8ClampedArray.every(Retyped.es5.Uint8ClampedArray.everyFn,System.Object)">
            <summary>
            Determines whether all the members of an array satisfy the specified test.
            or until the end of the array.
            </summary>
            <param name = "callbackfn">
            A function that accepts up to three arguments. The every method calls
            the callbackfn function for each element in array1 until the callbackfn returns false,
            </param>
            <param name = "thisArg">
            An object to which the this keyword can refer in the callbackfn function.
            If thisArg is omitted, undefined is used as the this value.
            </param>
        </member>
        <member name="M:Retyped.es5.Uint8ClampedArray.fill(System.Double)">
            <summary>
            Returns the this object after filling the section identified by start and end with value
            </summary>
            <param name = "value">value to fill array section with</param>
        </member>
        <member name="M:Retyped.es5.Uint8ClampedArray.fill(System.Double,System.Double)">
            <summary>
            Returns the this object after filling the section identified by start and end with value
            </summary>
            <param name = "value">value to fill array section with</param>
            <param name = "start">
            index to start filling the array at. If start is negative, it is treated as
            length+start where length is the length of the array.
            </param>
        </member>
        <member name="M:Retyped.es5.Uint8ClampedArray.fill(System.Double,System.Double,System.Double)">
            <summary>
            Returns the this object after filling the section identified by start and end with value
            </summary>
            <param name = "value">value to fill array section with</param>
            <param name = "start">
            index to start filling the array at. If start is negative, it is treated as
            length+start where length is the length of the array.
            </param>
            <param name = "end">
            index to stop filling the array at. If end is negative, it is treated as
            length+end.
            </param>
        </member>
        <member name="M:Retyped.es5.Uint8ClampedArray.filter(Retyped.es5.Uint8ClampedArray.filterFn)">
            <summary>
            Returns the elements of an array that meet the condition specified in a callback function.
            </summary>
            <param name = "callbackfn">
            A function that accepts up to three arguments. The filter method calls
            the callbackfn function one time for each element in the array.
            </param>
        </member>
        <member name="M:Retyped.es5.Uint8ClampedArray.filter(Retyped.es5.Uint8ClampedArray.filterFn,System.Object)">
            <summary>
            Returns the elements of an array that meet the condition specified in a callback function.
            </summary>
            <param name = "callbackfn">
            A function that accepts up to three arguments. The filter method calls
            the callbackfn function one time for each element in the array.
            </param>
            <param name = "thisArg">
            An object to which the this keyword can refer in the callbackfn function.
            If thisArg is omitted, undefined is used as the this value.
            </param>
        </member>
        <member name="M:Retyped.es5.Uint8ClampedArray.find(Retyped.es5.Uint8ClampedArray.findFn)">
            <summary>
            Returns the value of the first element in the array where predicate is true, and undefined
            otherwise.
            immediately returns that element value. Otherwise, find returns undefined.
            </summary>
            <param name = "predicate">
            find calls predicate once for each element of the array, in ascending
            order, until it finds one where predicate returns true. If such an element is found, find
            </param>
        </member>
        <member name="M:Retyped.es5.Uint8ClampedArray.find(Retyped.es5.Uint8ClampedArray.findFn,System.Object)">
            <summary>
            Returns the value of the first element in the array where predicate is true, and undefined
            otherwise.
            immediately returns that element value. Otherwise, find returns undefined.
            </summary>
            <param name = "predicate">
            find calls predicate once for each element of the array, in ascending
            order, until it finds one where predicate returns true. If such an element is found, find
            </param>
            <param name = "thisArg">
            If provided, it will be used as the this value for each invocation of
            predicate. If it is not provided, undefined is used instead.
            </param>
        </member>
        <member name="M:Retyped.es5.Uint8ClampedArray.findIndex(Retyped.es5.Uint8ClampedArray.findIndexFn)">
            <summary>
            Returns the index of the first element in the array where predicate is true, and -1
            otherwise.
            findIndex immediately returns that element index. Otherwise, findIndex returns -1.
            </summary>
            <param name = "predicate">
            find calls predicate once for each element of the array, in ascending
            order, until it finds one where predicate returns true. If such an element is found,
            </param>
        </member>
        <member name="M:Retyped.es5.Uint8ClampedArray.findIndex(Retyped.es5.Uint8ClampedArray.findIndexFn,System.Object)">
            <summary>
            Returns the index of the first element in the array where predicate is true, and -1
            otherwise.
            findIndex immediately returns that element index. Otherwise, findIndex returns -1.
            </summary>
            <param name = "predicate">
            find calls predicate once for each element of the array, in ascending
            order, until it finds one where predicate returns true. If such an element is found,
            </param>
            <param name = "thisArg">
            If provided, it will be used as the this value for each invocation of
            predicate. If it is not provided, undefined is used instead.
            </param>
        </member>
        <member name="M:Retyped.es5.Uint8ClampedArray.forEach(Retyped.es5.Uint8ClampedArray.forEachFn)">
            <summary>
            Performs the specified action for each element in an array.
            </summary>
            <param name = "callbackfn">
            A function that accepts up to three arguments. forEach calls the
            callbackfn function one time for each element in the array.
            </param>
        </member>
        <member name="M:Retyped.es5.Uint8ClampedArray.forEach(Retyped.es5.Uint8ClampedArray.forEachFn,System.Object)">
            <summary>
            Performs the specified action for each element in an array.
            </summary>
            <param name = "callbackfn">
            A function that accepts up to three arguments. forEach calls the
            callbackfn function one time for each element in the array.
            </param>
            <param name = "thisArg">
            An object to which the this keyword can refer in the callbackfn function.
            If thisArg is omitted, undefined is used as the this value.
            </param>
        </member>
        <member name="M:Retyped.es5.Uint8ClampedArray.indexOf(System.Double)">
            <summary>
            Returns the index of the first occurrence of a value in an array.
            </summary>
            <param name = "searchElement">The value to locate in the array.</param>
        </member>
        <member name="M:Retyped.es5.Uint8ClampedArray.indexOf(System.Double,System.Double)">
            <summary>
            Returns the index of the first occurrence of a value in an array.
            </summary>
            <param name = "searchElement">The value to locate in the array.</param>
            <param name = "fromIndex">
            The array index at which to begin the search. If fromIndex is omitted, the
            search starts at index 0.
            </param>
        </member>
        <member name="M:Retyped.es5.Uint8ClampedArray.join">
            <summary>
            Adds all the elements of an array separated by the specified separator string.
            </summary>
        </member>
        <member name="M:Retyped.es5.Uint8ClampedArray.join(System.String)">
            <summary>
            Adds all the elements of an array separated by the specified separator string.
            </summary>
            <param name = "separator">
            A string used to separate one element of an array from the next in the
            resulting String. If omitted, the array elements are separated with a comma.
            </param>
        </member>
        <member name="M:Retyped.es5.Uint8ClampedArray.lastIndexOf(System.Double)">
            <summary>
            Returns the index of the last occurrence of a value in an array.
            </summary>
            <param name = "searchElement">The value to locate in the array.</param>
        </member>
        <member name="M:Retyped.es5.Uint8ClampedArray.lastIndexOf(System.Double,System.Double)">
            <summary>
            Returns the index of the last occurrence of a value in an array.
            </summary>
            <param name = "searchElement">The value to locate in the array.</param>
            <param name = "fromIndex">
            The array index at which to begin the search. If fromIndex is omitted, the
            search starts at index 0.
            </param>
        </member>
        <member name="P:Retyped.es5.Uint8ClampedArray.length">
            <summary>
            The length of the array.
            </summary>
        </member>
        <member name="M:Retyped.es5.Uint8ClampedArray.map(Retyped.es5.Uint8ClampedArray.mapFn)">
            <summary>
            Calls a defined callback function on each element of an array, and returns an array that
            contains the results.
            </summary>
            <param name = "callbackfn">
            A function that accepts up to three arguments. The map method calls the
            callbackfn function one time for each element in the array.
            </param>
        </member>
        <member name="M:Retyped.es5.Uint8ClampedArray.map(Retyped.es5.Uint8ClampedArray.mapFn,System.Object)">
            <summary>
            Calls a defined callback function on each element of an array, and returns an array that
            contains the results.
            </summary>
            <param name = "callbackfn">
            A function that accepts up to three arguments. The map method calls the
            callbackfn function one time for each element in the array.
            </param>
            <param name = "thisArg">
            An object to which the this keyword can refer in the callbackfn function.
            If thisArg is omitted, undefined is used as the this value.
            </param>
        </member>
        <member name="M:Retyped.es5.Uint8ClampedArray.reduce(Retyped.es5.Uint8ClampedArray.reduceFn)">
            <summary>
            Calls the specified callback function for all the elements in an array. The return value of
            the callback function is the accumulated result, and is provided as an argument in the next
            call to the callback function.
            instead of an array value.
            </summary>
            <param name = "callbackfn">
            A function that accepts up to four arguments. The reduce method calls the
            callbackfn function one time for each element in the array.
            </param>
        </member>
        <member name="M:Retyped.es5.Uint8ClampedArray.reduce(Retyped.es5.Uint8ClampedArray.reduceFn,System.Double)">
            <summary>
            Calls the specified callback function for all the elements in an array. The return value of
            the callback function is the accumulated result, and is provided as an argument in the next
            call to the callback function.
            instead of an array value.
            </summary>
            <param name = "callbackfn">
            A function that accepts up to four arguments. The reduce method calls the
            callbackfn function one time for each element in the array.
            </param>
            <param name = "initialValue">
            If initialValue is specified, it is used as the initial value to start
            the accumulation. The first call to the callbackfn function provides this value as an argument
            </param>
        </member>
        <member name="M:Retyped.es5.Uint8ClampedArray.reduce``1(Retyped.es5.Uint8ClampedArray.reduceFn2{``0},``0)">
            <summary>
            Calls the specified callback function for all the elements in an array. The return value of
            the callback function is the accumulated result, and is provided as an argument in the next
            call to the callback function.
            instead of an array value.
            </summary>
            <param name = "callbackfn">
            A function that accepts up to four arguments. The reduce method calls the
            callbackfn function one time for each element in the array.
            </param>
            <param name = "initialValue">
            If initialValue is specified, it is used as the initial value to start
            the accumulation. The first call to the callbackfn function provides this value as an argument
            </param>
        </member>
        <member name="M:Retyped.es5.Uint8ClampedArray.reduceRight(Retyped.es5.Uint8ClampedArray.reduceRightFn)">
            <summary>
            Calls the specified callback function for all the elements in an array, in descending order.
            The return value of the callback function is the accumulated result, and is provided as an
            argument in the next call to the callback function.
            argument instead of an array value.
            </summary>
            <param name = "callbackfn">
            A function that accepts up to four arguments. The reduceRight method calls
            the callbackfn function one time for each element in the array.
            </param>
        </member>
        <member name="M:Retyped.es5.Uint8ClampedArray.reduceRight(Retyped.es5.Uint8ClampedArray.reduceRightFn,System.Double)">
            <summary>
            Calls the specified callback function for all the elements in an array, in descending order.
            The return value of the callback function is the accumulated result, and is provided as an
            argument in the next call to the callback function.
            argument instead of an array value.
            </summary>
            <param name = "callbackfn">
            A function that accepts up to four arguments. The reduceRight method calls
            the callbackfn function one time for each element in the array.
            </param>
            <param name = "initialValue">
            If initialValue is specified, it is used as the initial value to start
            the accumulation. The first call to the callbackfn function provides this value as an
            </param>
        </member>
        <member name="M:Retyped.es5.Uint8ClampedArray.reduceRight``1(Retyped.es5.Uint8ClampedArray.reduceRightFn2{``0},``0)">
            <summary>
            Calls the specified callback function for all the elements in an array, in descending order.
            The return value of the callback function is the accumulated result, and is provided as an
            argument in the next call to the callback function.
            instead of an array value.
            </summary>
            <param name = "callbackfn">
            A function that accepts up to four arguments. The reduceRight method calls
            the callbackfn function one time for each element in the array.
            </param>
            <param name = "initialValue">
            If initialValue is specified, it is used as the initial value to start
            the accumulation. The first call to the callbackfn function provides this value as an argument
            </param>
        </member>
        <member name="M:Retyped.es5.Uint8ClampedArray.reverse">
            <summary>
            Reverses the elements in an Array.
            </summary>
        </member>
        <member name="M:Retyped.es5.Uint8ClampedArray.set(Retyped.es5.ArrayLike{System.Double})">
            <summary>
            Sets a value or an array of values.
            </summary>
            <param name = "array">A typed or untyped array of values to set.</param>
        </member>
        <member name="M:Retyped.es5.Uint8ClampedArray.set(Retyped.es5.ArrayLike{System.Double},System.Double)">
            <summary>
            Sets a value or an array of values.
            </summary>
            <param name = "array">A typed or untyped array of values to set.</param>
            <param name = "offset">The index in the current array at which the values are to be written.</param>
        </member>
        <member name="M:Retyped.es5.Uint8ClampedArray.slice">
            <summary>
            Returns a section of an array.
            </summary>
        </member>
        <member name="M:Retyped.es5.Uint8ClampedArray.slice(System.Double)">
            <summary>
            Returns a section of an array.
            </summary>
            <param name = "start">The beginning of the specified portion of the array.</param>
        </member>
        <member name="M:Retyped.es5.Uint8ClampedArray.slice(System.Double,System.Double)">
            <summary>
            Returns a section of an array.
            </summary>
            <param name = "start">The beginning of the specified portion of the array.</param>
            <param name = "end">The end of the specified portion of the array.</param>
        </member>
        <member name="M:Retyped.es5.Uint8ClampedArray.some(Retyped.es5.Uint8ClampedArray.someFn)">
            <summary>
            Determines whether the specified callback function returns true for any element of an array.
            the end of the array.
            </summary>
            <param name = "callbackfn">
            A function that accepts up to three arguments. The some method calls the
            callbackfn function for each element in array1 until the callbackfn returns true, or until
            </param>
        </member>
        <member name="M:Retyped.es5.Uint8ClampedArray.some(Retyped.es5.Uint8ClampedArray.someFn,System.Object)">
            <summary>
            Determines whether the specified callback function returns true for any element of an array.
            the end of the array.
            </summary>
            <param name = "callbackfn">
            A function that accepts up to three arguments. The some method calls the
            callbackfn function for each element in array1 until the callbackfn returns true, or until
            </param>
            <param name = "thisArg">
            An object to which the this keyword can refer in the callbackfn function.
            If thisArg is omitted, undefined is used as the this value.
            </param>
        </member>
        <member name="M:Retyped.es5.Uint8ClampedArray.sort">
            <summary>
            Sorts an array.
            </summary>
        </member>
        <member name="M:Retyped.es5.Uint8ClampedArray.sort(Retyped.es5.Uint8ClampedArray.sortFn)">
            <summary>
            Sorts an array.
            </summary>
            <param name = "compareFn">
            The name of the function used to determine the order of the elements. If
            omitted, the elements are sorted in ascending, ASCII character order.
            </param>
        </member>
        <member name="M:Retyped.es5.Uint8ClampedArray.subarray(System.Double)">
            <summary>
            Gets a new Uint8ClampedArray view of the ArrayBuffer store for this array, referencing the elements
            at begin, inclusive, up to end, exclusive.
            </summary>
            <param name = "begin">The index of the beginning of the array.</param>
        </member>
        <member name="M:Retyped.es5.Uint8ClampedArray.subarray(System.Double,System.Double)">
            <summary>
            Gets a new Uint8ClampedArray view of the ArrayBuffer store for this array, referencing the elements
            at begin, inclusive, up to end, exclusive.
            </summary>
            <param name = "begin">The index of the beginning of the array.</param>
            <param name = "end">The index of the end of the array.</param>
        </member>
        <member name="M:Retyped.es5.Uint8ClampedArray.toLocaleString">
            <summary>
            Converts a number to a string by using the current locale.
            </summary>
        </member>
        <member name="M:Retyped.es5.Uint8ClampedArray.toString">
            <summary>
            Returns a string representation of an array.
            </summary>
        </member>
        <member name="P:Retyped.es5.Uint8ClampedArrayConstructor.BYTES_PER_ELEMENT">
            <summary>
            The size in bytes of each element in the array.
            </summary>
        </member>
        <member name="M:Retyped.es5.Uint8ClampedArrayConstructor.of(System.Double[])">
            <summary>
            Returns a new array from a set of elements.
            </summary>
            <param name = "items">A set of elements to include in the new array object.</param>
        </member>
        <member name="M:Retyped.es5.Uint8ClampedArrayConstructor.from(Retyped.es5.ArrayLike{System.Double})">
            <summary>
            Creates an array from an array-like or iterable object.
            </summary>
            <param name = "arrayLike">An array-like or iterable object to convert to an array.</param>
        </member>
        <member name="M:Retyped.es5.Uint8ClampedArrayConstructor.from(Retyped.es5.ArrayLike{System.Double},Retyped.es5.Uint8ClampedArrayConstructor.fromFn)">
            <summary>
            Creates an array from an array-like or iterable object.
            </summary>
            <param name = "arrayLike">An array-like or iterable object to convert to an array.</param>
            <param name = "mapfn">A mapping function to call on every element of the array.</param>
        </member>
        <member name="M:Retyped.es5.Uint8ClampedArrayConstructor.from(Retyped.es5.ArrayLike{System.Double},Retyped.es5.Uint8ClampedArrayConstructor.fromFn,System.Object)">
            <summary>
            Creates an array from an array-like or iterable object.
            </summary>
            <param name = "arrayLike">An array-like or iterable object to convert to an array.</param>
            <param name = "mapfn">A mapping function to call on every element of the array.</param>
            <param name = "thisArg">Value of 'this' used to invoke the mapfn.</param>
        </member>
        <member name="P:Retyped.es5.Int16Array.BYTES_PER_ELEMENT">
            <summary>
            The size in bytes of each element in the array.
            </summary>
        </member>
        <member name="P:Retyped.es5.Int16Array.buffer">
            <summary>
            The ArrayBuffer instance referenced by the array.
            </summary>
        </member>
        <member name="P:Retyped.es5.Int16Array.byteLength">
            <summary>
            The length in bytes of the array.
            </summary>
        </member>
        <member name="P:Retyped.es5.Int16Array.byteOffset">
            <summary>
            The offset in bytes of the array.
            </summary>
        </member>
        <member name="M:Retyped.es5.Int16Array.copyWithin(System.Double,System.Double)">
            <summary>
            Returns the this object after copying a section of the array identified by start and end
            to the same array starting at position target
            </summary>
            <param name = "target">
            If target is negative, it is treated as length+target where length is the
            length of the array.
            </param>
            <param name = "start">
            If start is negative, it is treated as length+start. If end is negative, it
            is treated as length+end.
            </param>
        </member>
        <member name="M:Retyped.es5.Int16Array.copyWithin(System.Double,System.Double,System.Double)">
            <summary>
            Returns the this object after copying a section of the array identified by start and end
            to the same array starting at position target
            </summary>
            <param name = "target">
            If target is negative, it is treated as length+target where length is the
            length of the array.
            </param>
            <param name = "start">
            If start is negative, it is treated as length+start. If end is negative, it
            is treated as length+end.
            </param>
            <param name = "end">If not specified, length of the this object is used as its default value.</param>
        </member>
        <member name="M:Retyped.es5.Int16Array.every(Retyped.es5.Int16Array.everyFn)">
            <summary>
            Determines whether all the members of an array satisfy the specified test.
            or until the end of the array.
            </summary>
            <param name = "callbackfn">
            A function that accepts up to three arguments. The every method calls
            the callbackfn function for each element in array1 until the callbackfn returns false,
            </param>
        </member>
        <member name="M:Retyped.es5.Int16Array.every(Retyped.es5.Int16Array.everyFn,System.Object)">
            <summary>
            Determines whether all the members of an array satisfy the specified test.
            or until the end of the array.
            </summary>
            <param name = "callbackfn">
            A function that accepts up to three arguments. The every method calls
            the callbackfn function for each element in array1 until the callbackfn returns false,
            </param>
            <param name = "thisArg">
            An object to which the this keyword can refer in the callbackfn function.
            If thisArg is omitted, undefined is used as the this value.
            </param>
        </member>
        <member name="M:Retyped.es5.Int16Array.fill(System.Double)">
            <summary>
            Returns the this object after filling the section identified by start and end with value
            </summary>
            <param name = "value">value to fill array section with</param>
        </member>
        <member name="M:Retyped.es5.Int16Array.fill(System.Double,System.Double)">
            <summary>
            Returns the this object after filling the section identified by start and end with value
            </summary>
            <param name = "value">value to fill array section with</param>
            <param name = "start">
            index to start filling the array at. If start is negative, it is treated as
            length+start where length is the length of the array.
            </param>
        </member>
        <member name="M:Retyped.es5.Int16Array.fill(System.Double,System.Double,System.Double)">
            <summary>
            Returns the this object after filling the section identified by start and end with value
            </summary>
            <param name = "value">value to fill array section with</param>
            <param name = "start">
            index to start filling the array at. If start is negative, it is treated as
            length+start where length is the length of the array.
            </param>
            <param name = "end">
            index to stop filling the array at. If end is negative, it is treated as
            length+end.
            </param>
        </member>
        <member name="M:Retyped.es5.Int16Array.filter(Retyped.es5.Int16Array.filterFn)">
            <summary>
            Returns the elements of an array that meet the condition specified in a callback function.
            </summary>
            <param name = "callbackfn">
            A function that accepts up to three arguments. The filter method calls
            the callbackfn function one time for each element in the array.
            </param>
        </member>
        <member name="M:Retyped.es5.Int16Array.filter(Retyped.es5.Int16Array.filterFn,System.Object)">
            <summary>
            Returns the elements of an array that meet the condition specified in a callback function.
            </summary>
            <param name = "callbackfn">
            A function that accepts up to three arguments. The filter method calls
            the callbackfn function one time for each element in the array.
            </param>
            <param name = "thisArg">
            An object to which the this keyword can refer in the callbackfn function.
            If thisArg is omitted, undefined is used as the this value.
            </param>
        </member>
        <member name="M:Retyped.es5.Int16Array.find(Retyped.es5.Int16Array.findFn)">
            <summary>
            Returns the value of the first element in the array where predicate is true, and undefined
            otherwise.
            immediately returns that element value. Otherwise, find returns undefined.
            </summary>
            <param name = "predicate">
            find calls predicate once for each element of the array, in ascending
            order, until it finds one where predicate returns true. If such an element is found, find
            </param>
        </member>
        <member name="M:Retyped.es5.Int16Array.find(Retyped.es5.Int16Array.findFn,System.Object)">
            <summary>
            Returns the value of the first element in the array where predicate is true, and undefined
            otherwise.
            immediately returns that element value. Otherwise, find returns undefined.
            </summary>
            <param name = "predicate">
            find calls predicate once for each element of the array, in ascending
            order, until it finds one where predicate returns true. If such an element is found, find
            </param>
            <param name = "thisArg">
            If provided, it will be used as the this value for each invocation of
            predicate. If it is not provided, undefined is used instead.
            </param>
        </member>
        <member name="M:Retyped.es5.Int16Array.findIndex(Retyped.es5.Int16Array.findIndexFn)">
            <summary>
            Returns the index of the first element in the array where predicate is true, and -1
            otherwise.
            findIndex immediately returns that element index. Otherwise, findIndex returns -1.
            </summary>
            <param name = "predicate">
            find calls predicate once for each element of the array, in ascending
            order, until it finds one where predicate returns true. If such an element is found,
            </param>
        </member>
        <member name="M:Retyped.es5.Int16Array.findIndex(Retyped.es5.Int16Array.findIndexFn,System.Object)">
            <summary>
            Returns the index of the first element in the array where predicate is true, and -1
            otherwise.
            findIndex immediately returns that element index. Otherwise, findIndex returns -1.
            </summary>
            <param name = "predicate">
            find calls predicate once for each element of the array, in ascending
            order, until it finds one where predicate returns true. If such an element is found,
            </param>
            <param name = "thisArg">
            If provided, it will be used as the this value for each invocation of
            predicate. If it is not provided, undefined is used instead.
            </param>
        </member>
        <member name="M:Retyped.es5.Int16Array.forEach(Retyped.es5.Int16Array.forEachFn)">
            <summary>
            Performs the specified action for each element in an array.
            </summary>
            <param name = "callbackfn">
            A function that accepts up to three arguments. forEach calls the
            callbackfn function one time for each element in the array.
            </param>
        </member>
        <member name="M:Retyped.es5.Int16Array.forEach(Retyped.es5.Int16Array.forEachFn,System.Object)">
            <summary>
            Performs the specified action for each element in an array.
            </summary>
            <param name = "callbackfn">
            A function that accepts up to three arguments. forEach calls the
            callbackfn function one time for each element in the array.
            </param>
            <param name = "thisArg">
            An object to which the this keyword can refer in the callbackfn function.
            If thisArg is omitted, undefined is used as the this value.
            </param>
        </member>
        <member name="M:Retyped.es5.Int16Array.indexOf(System.Double)">
            <summary>
            Returns the index of the first occurrence of a value in an array.
            </summary>
            <param name = "searchElement">The value to locate in the array.</param>
        </member>
        <member name="M:Retyped.es5.Int16Array.indexOf(System.Double,System.Double)">
            <summary>
            Returns the index of the first occurrence of a value in an array.
            </summary>
            <param name = "searchElement">The value to locate in the array.</param>
            <param name = "fromIndex">
            The array index at which to begin the search. If fromIndex is omitted, the
            search starts at index 0.
            </param>
        </member>
        <member name="M:Retyped.es5.Int16Array.join">
            <summary>
            Adds all the elements of an array separated by the specified separator string.
            </summary>
        </member>
        <member name="M:Retyped.es5.Int16Array.join(System.String)">
            <summary>
            Adds all the elements of an array separated by the specified separator string.
            </summary>
            <param name = "separator">
            A string used to separate one element of an array from the next in the
            resulting String. If omitted, the array elements are separated with a comma.
            </param>
        </member>
        <member name="M:Retyped.es5.Int16Array.lastIndexOf(System.Double)">
            <summary>
            Returns the index of the last occurrence of a value in an array.
            </summary>
            <param name = "searchElement">The value to locate in the array.</param>
        </member>
        <member name="M:Retyped.es5.Int16Array.lastIndexOf(System.Double,System.Double)">
            <summary>
            Returns the index of the last occurrence of a value in an array.
            </summary>
            <param name = "searchElement">The value to locate in the array.</param>
            <param name = "fromIndex">
            The array index at which to begin the search. If fromIndex is omitted, the
            search starts at index 0.
            </param>
        </member>
        <member name="P:Retyped.es5.Int16Array.length">
            <summary>
            The length of the array.
            </summary>
        </member>
        <member name="M:Retyped.es5.Int16Array.map(Retyped.es5.Int16Array.mapFn)">
            <summary>
            Calls a defined callback function on each element of an array, and returns an array that
            contains the results.
            </summary>
            <param name = "callbackfn">
            A function that accepts up to three arguments. The map method calls the
            callbackfn function one time for each element in the array.
            </param>
        </member>
        <member name="M:Retyped.es5.Int16Array.map(Retyped.es5.Int16Array.mapFn,System.Object)">
            <summary>
            Calls a defined callback function on each element of an array, and returns an array that
            contains the results.
            </summary>
            <param name = "callbackfn">
            A function that accepts up to three arguments. The map method calls the
            callbackfn function one time for each element in the array.
            </param>
            <param name = "thisArg">
            An object to which the this keyword can refer in the callbackfn function.
            If thisArg is omitted, undefined is used as the this value.
            </param>
        </member>
        <member name="M:Retyped.es5.Int16Array.reduce(Retyped.es5.Int16Array.reduceFn)">
            <summary>
            Calls the specified callback function for all the elements in an array. The return value of
            the callback function is the accumulated result, and is provided as an argument in the next
            call to the callback function.
            instead of an array value.
            </summary>
            <param name = "callbackfn">
            A function that accepts up to four arguments. The reduce method calls the
            callbackfn function one time for each element in the array.
            </param>
        </member>
        <member name="M:Retyped.es5.Int16Array.reduce(Retyped.es5.Int16Array.reduceFn,System.Double)">
            <summary>
            Calls the specified callback function for all the elements in an array. The return value of
            the callback function is the accumulated result, and is provided as an argument in the next
            call to the callback function.
            instead of an array value.
            </summary>
            <param name = "callbackfn">
            A function that accepts up to four arguments. The reduce method calls the
            callbackfn function one time for each element in the array.
            </param>
            <param name = "initialValue">
            If initialValue is specified, it is used as the initial value to start
            the accumulation. The first call to the callbackfn function provides this value as an argument
            </param>
        </member>
        <member name="M:Retyped.es5.Int16Array.reduce``1(Retyped.es5.Int16Array.reduceFn2{``0},``0)">
            <summary>
            Calls the specified callback function for all the elements in an array. The return value of
            the callback function is the accumulated result, and is provided as an argument in the next
            call to the callback function.
            instead of an array value.
            </summary>
            <param name = "callbackfn">
            A function that accepts up to four arguments. The reduce method calls the
            callbackfn function one time for each element in the array.
            </param>
            <param name = "initialValue">
            If initialValue is specified, it is used as the initial value to start
            the accumulation. The first call to the callbackfn function provides this value as an argument
            </param>
        </member>
        <member name="M:Retyped.es5.Int16Array.reduceRight(Retyped.es5.Int16Array.reduceRightFn)">
            <summary>
            Calls the specified callback function for all the elements in an array, in descending order.
            The return value of the callback function is the accumulated result, and is provided as an
            argument in the next call to the callback function.
            argument instead of an array value.
            </summary>
            <param name = "callbackfn">
            A function that accepts up to four arguments. The reduceRight method calls
            the callbackfn function one time for each element in the array.
            </param>
        </member>
        <member name="M:Retyped.es5.Int16Array.reduceRight(Retyped.es5.Int16Array.reduceRightFn,System.Double)">
            <summary>
            Calls the specified callback function for all the elements in an array, in descending order.
            The return value of the callback function is the accumulated result, and is provided as an
            argument in the next call to the callback function.
            argument instead of an array value.
            </summary>
            <param name = "callbackfn">
            A function that accepts up to four arguments. The reduceRight method calls
            the callbackfn function one time for each element in the array.
            </param>
            <param name = "initialValue">
            If initialValue is specified, it is used as the initial value to start
            the accumulation. The first call to the callbackfn function provides this value as an
            </param>
        </member>
        <member name="M:Retyped.es5.Int16Array.reduceRight``1(Retyped.es5.Int16Array.reduceRightFn2{``0},``0)">
            <summary>
            Calls the specified callback function for all the elements in an array, in descending order.
            The return value of the callback function is the accumulated result, and is provided as an
            argument in the next call to the callback function.
            instead of an array value.
            </summary>
            <param name = "callbackfn">
            A function that accepts up to four arguments. The reduceRight method calls
            the callbackfn function one time for each element in the array.
            </param>
            <param name = "initialValue">
            If initialValue is specified, it is used as the initial value to start
            the accumulation. The first call to the callbackfn function provides this value as an argument
            </param>
        </member>
        <member name="M:Retyped.es5.Int16Array.reverse">
            <summary>
            Reverses the elements in an Array.
            </summary>
        </member>
        <member name="M:Retyped.es5.Int16Array.set(Retyped.es5.ArrayLike{System.Double})">
            <summary>
            Sets a value or an array of values.
            </summary>
            <param name = "array">A typed or untyped array of values to set.</param>
        </member>
        <member name="M:Retyped.es5.Int16Array.set(Retyped.es5.ArrayLike{System.Double},System.Double)">
            <summary>
            Sets a value or an array of values.
            </summary>
            <param name = "array">A typed or untyped array of values to set.</param>
            <param name = "offset">The index in the current array at which the values are to be written.</param>
        </member>
        <member name="M:Retyped.es5.Int16Array.slice">
            <summary>
            Returns a section of an array.
            </summary>
        </member>
        <member name="M:Retyped.es5.Int16Array.slice(System.Double)">
            <summary>
            Returns a section of an array.
            </summary>
            <param name = "start">The beginning of the specified portion of the array.</param>
        </member>
        <member name="M:Retyped.es5.Int16Array.slice(System.Double,System.Double)">
            <summary>
            Returns a section of an array.
            </summary>
            <param name = "start">The beginning of the specified portion of the array.</param>
            <param name = "end">The end of the specified portion of the array.</param>
        </member>
        <member name="M:Retyped.es5.Int16Array.some(Retyped.es5.Int16Array.someFn)">
            <summary>
            Determines whether the specified callback function returns true for any element of an array.
            the end of the array.
            </summary>
            <param name = "callbackfn">
            A function that accepts up to three arguments. The some method calls the
            callbackfn function for each element in array1 until the callbackfn returns true, or until
            </param>
        </member>
        <member name="M:Retyped.es5.Int16Array.some(Retyped.es5.Int16Array.someFn,System.Object)">
            <summary>
            Determines whether the specified callback function returns true for any element of an array.
            the end of the array.
            </summary>
            <param name = "callbackfn">
            A function that accepts up to three arguments. The some method calls the
            callbackfn function for each element in array1 until the callbackfn returns true, or until
            </param>
            <param name = "thisArg">
            An object to which the this keyword can refer in the callbackfn function.
            If thisArg is omitted, undefined is used as the this value.
            </param>
        </member>
        <member name="M:Retyped.es5.Int16Array.sort">
            <summary>
            Sorts an array.
            </summary>
        </member>
        <member name="M:Retyped.es5.Int16Array.sort(Retyped.es5.Int16Array.sortFn)">
            <summary>
            Sorts an array.
            </summary>
            <param name = "compareFn">
            The name of the function used to determine the order of the elements. If
            omitted, the elements are sorted in ascending, ASCII character order.
            </param>
        </member>
        <member name="M:Retyped.es5.Int16Array.subarray(System.Double)">
            <summary>
            Gets a new Int16Array view of the ArrayBuffer store for this array, referencing the elements
            at begin, inclusive, up to end, exclusive.
            </summary>
            <param name = "begin">The index of the beginning of the array.</param>
        </member>
        <member name="M:Retyped.es5.Int16Array.subarray(System.Double,System.Double)">
            <summary>
            Gets a new Int16Array view of the ArrayBuffer store for this array, referencing the elements
            at begin, inclusive, up to end, exclusive.
            </summary>
            <param name = "begin">The index of the beginning of the array.</param>
            <param name = "end">The index of the end of the array.</param>
        </member>
        <member name="M:Retyped.es5.Int16Array.toLocaleString">
            <summary>
            Converts a number to a string by using the current locale.
            </summary>
        </member>
        <member name="M:Retyped.es5.Int16Array.toString">
            <summary>
            Returns a string representation of an array.
            </summary>
        </member>
        <member name="P:Retyped.es5.Int16ArrayConstructor.BYTES_PER_ELEMENT">
            <summary>
            The size in bytes of each element in the array.
            </summary>
        </member>
        <member name="M:Retyped.es5.Int16ArrayConstructor.of(System.Double[])">
            <summary>
            Returns a new array from a set of elements.
            </summary>
            <param name = "items">A set of elements to include in the new array object.</param>
        </member>
        <member name="M:Retyped.es5.Int16ArrayConstructor.from(Retyped.es5.ArrayLike{System.Double})">
            <summary>
            Creates an array from an array-like or iterable object.
            </summary>
            <param name = "arrayLike">An array-like or iterable object to convert to an array.</param>
        </member>
        <member name="M:Retyped.es5.Int16ArrayConstructor.from(Retyped.es5.ArrayLike{System.Double},Retyped.es5.Int16ArrayConstructor.fromFn)">
            <summary>
            Creates an array from an array-like or iterable object.
            </summary>
            <param name = "arrayLike">An array-like or iterable object to convert to an array.</param>
            <param name = "mapfn">A mapping function to call on every element of the array.</param>
        </member>
        <member name="M:Retyped.es5.Int16ArrayConstructor.from(Retyped.es5.ArrayLike{System.Double},Retyped.es5.Int16ArrayConstructor.fromFn,System.Object)">
            <summary>
            Creates an array from an array-like or iterable object.
            </summary>
            <param name = "arrayLike">An array-like or iterable object to convert to an array.</param>
            <param name = "mapfn">A mapping function to call on every element of the array.</param>
            <param name = "thisArg">Value of 'this' used to invoke the mapfn.</param>
        </member>
        <member name="P:Retyped.es5.Uint16Array.BYTES_PER_ELEMENT">
            <summary>
            The size in bytes of each element in the array.
            </summary>
        </member>
        <member name="P:Retyped.es5.Uint16Array.buffer">
            <summary>
            The ArrayBuffer instance referenced by the array.
            </summary>
        </member>
        <member name="P:Retyped.es5.Uint16Array.byteLength">
            <summary>
            The length in bytes of the array.
            </summary>
        </member>
        <member name="P:Retyped.es5.Uint16Array.byteOffset">
            <summary>
            The offset in bytes of the array.
            </summary>
        </member>
        <member name="M:Retyped.es5.Uint16Array.copyWithin(System.Double,System.Double)">
            <summary>
            Returns the this object after copying a section of the array identified by start and end
            to the same array starting at position target
            </summary>
            <param name = "target">
            If target is negative, it is treated as length+target where length is the
            length of the array.
            </param>
            <param name = "start">
            If start is negative, it is treated as length+start. If end is negative, it
            is treated as length+end.
            </param>
        </member>
        <member name="M:Retyped.es5.Uint16Array.copyWithin(System.Double,System.Double,System.Double)">
            <summary>
            Returns the this object after copying a section of the array identified by start and end
            to the same array starting at position target
            </summary>
            <param name = "target">
            If target is negative, it is treated as length+target where length is the
            length of the array.
            </param>
            <param name = "start">
            If start is negative, it is treated as length+start. If end is negative, it
            is treated as length+end.
            </param>
            <param name = "end">If not specified, length of the this object is used as its default value.</param>
        </member>
        <member name="M:Retyped.es5.Uint16Array.every(Retyped.es5.Uint16Array.everyFn)">
            <summary>
            Determines whether all the members of an array satisfy the specified test.
            or until the end of the array.
            </summary>
            <param name = "callbackfn">
            A function that accepts up to three arguments. The every method calls
            the callbackfn function for each element in array1 until the callbackfn returns false,
            </param>
        </member>
        <member name="M:Retyped.es5.Uint16Array.every(Retyped.es5.Uint16Array.everyFn,System.Object)">
            <summary>
            Determines whether all the members of an array satisfy the specified test.
            or until the end of the array.
            </summary>
            <param name = "callbackfn">
            A function that accepts up to three arguments. The every method calls
            the callbackfn function for each element in array1 until the callbackfn returns false,
            </param>
            <param name = "thisArg">
            An object to which the this keyword can refer in the callbackfn function.
            If thisArg is omitted, undefined is used as the this value.
            </param>
        </member>
        <member name="M:Retyped.es5.Uint16Array.fill(System.Double)">
            <summary>
            Returns the this object after filling the section identified by start and end with value
            </summary>
            <param name = "value">value to fill array section with</param>
        </member>
        <member name="M:Retyped.es5.Uint16Array.fill(System.Double,System.Double)">
            <summary>
            Returns the this object after filling the section identified by start and end with value
            </summary>
            <param name = "value">value to fill array section with</param>
            <param name = "start">
            index to start filling the array at. If start is negative, it is treated as
            length+start where length is the length of the array.
            </param>
        </member>
        <member name="M:Retyped.es5.Uint16Array.fill(System.Double,System.Double,System.Double)">
            <summary>
            Returns the this object after filling the section identified by start and end with value
            </summary>
            <param name = "value">value to fill array section with</param>
            <param name = "start">
            index to start filling the array at. If start is negative, it is treated as
            length+start where length is the length of the array.
            </param>
            <param name = "end">
            index to stop filling the array at. If end is negative, it is treated as
            length+end.
            </param>
        </member>
        <member name="M:Retyped.es5.Uint16Array.filter(Retyped.es5.Uint16Array.filterFn)">
            <summary>
            Returns the elements of an array that meet the condition specified in a callback function.
            </summary>
            <param name = "callbackfn">
            A function that accepts up to three arguments. The filter method calls
            the callbackfn function one time for each element in the array.
            </param>
        </member>
        <member name="M:Retyped.es5.Uint16Array.filter(Retyped.es5.Uint16Array.filterFn,System.Object)">
            <summary>
            Returns the elements of an array that meet the condition specified in a callback function.
            </summary>
            <param name = "callbackfn">
            A function that accepts up to three arguments. The filter method calls
            the callbackfn function one time for each element in the array.
            </param>
            <param name = "thisArg">
            An object to which the this keyword can refer in the callbackfn function.
            If thisArg is omitted, undefined is used as the this value.
            </param>
        </member>
        <member name="M:Retyped.es5.Uint16Array.find(Retyped.es5.Uint16Array.findFn)">
            <summary>
            Returns the value of the first element in the array where predicate is true, and undefined
            otherwise.
            immediately returns that element value. Otherwise, find returns undefined.
            </summary>
            <param name = "predicate">
            find calls predicate once for each element of the array, in ascending
            order, until it finds one where predicate returns true. If such an element is found, find
            </param>
        </member>
        <member name="M:Retyped.es5.Uint16Array.find(Retyped.es5.Uint16Array.findFn,System.Object)">
            <summary>
            Returns the value of the first element in the array where predicate is true, and undefined
            otherwise.
            immediately returns that element value. Otherwise, find returns undefined.
            </summary>
            <param name = "predicate">
            find calls predicate once for each element of the array, in ascending
            order, until it finds one where predicate returns true. If such an element is found, find
            </param>
            <param name = "thisArg">
            If provided, it will be used as the this value for each invocation of
            predicate. If it is not provided, undefined is used instead.
            </param>
        </member>
        <member name="M:Retyped.es5.Uint16Array.findIndex(Retyped.es5.Uint16Array.findIndexFn)">
            <summary>
            Returns the index of the first element in the array where predicate is true, and -1
            otherwise.
            findIndex immediately returns that element index. Otherwise, findIndex returns -1.
            </summary>
            <param name = "predicate">
            find calls predicate once for each element of the array, in ascending
            order, until it finds one where predicate returns true. If such an element is found,
            </param>
        </member>
        <member name="M:Retyped.es5.Uint16Array.findIndex(Retyped.es5.Uint16Array.findIndexFn,System.Object)">
            <summary>
            Returns the index of the first element in the array where predicate is true, and -1
            otherwise.
            findIndex immediately returns that element index. Otherwise, findIndex returns -1.
            </summary>
            <param name = "predicate">
            find calls predicate once for each element of the array, in ascending
            order, until it finds one where predicate returns true. If such an element is found,
            </param>
            <param name = "thisArg">
            If provided, it will be used as the this value for each invocation of
            predicate. If it is not provided, undefined is used instead.
            </param>
        </member>
        <member name="M:Retyped.es5.Uint16Array.forEach(Retyped.es5.Uint16Array.forEachFn)">
            <summary>
            Performs the specified action for each element in an array.
            </summary>
            <param name = "callbackfn">
            A function that accepts up to three arguments. forEach calls the
            callbackfn function one time for each element in the array.
            </param>
        </member>
        <member name="M:Retyped.es5.Uint16Array.forEach(Retyped.es5.Uint16Array.forEachFn,System.Object)">
            <summary>
            Performs the specified action for each element in an array.
            </summary>
            <param name = "callbackfn">
            A function that accepts up to three arguments. forEach calls the
            callbackfn function one time for each element in the array.
            </param>
            <param name = "thisArg">
            An object to which the this keyword can refer in the callbackfn function.
            If thisArg is omitted, undefined is used as the this value.
            </param>
        </member>
        <member name="M:Retyped.es5.Uint16Array.indexOf(System.Double)">
            <summary>
            Returns the index of the first occurrence of a value in an array.
            </summary>
            <param name = "searchElement">The value to locate in the array.</param>
        </member>
        <member name="M:Retyped.es5.Uint16Array.indexOf(System.Double,System.Double)">
            <summary>
            Returns the index of the first occurrence of a value in an array.
            </summary>
            <param name = "searchElement">The value to locate in the array.</param>
            <param name = "fromIndex">
            The array index at which to begin the search. If fromIndex is omitted, the
            search starts at index 0.
            </param>
        </member>
        <member name="M:Retyped.es5.Uint16Array.join">
            <summary>
            Adds all the elements of an array separated by the specified separator string.
            </summary>
        </member>
        <member name="M:Retyped.es5.Uint16Array.join(System.String)">
            <summary>
            Adds all the elements of an array separated by the specified separator string.
            </summary>
            <param name = "separator">
            A string used to separate one element of an array from the next in the
            resulting String. If omitted, the array elements are separated with a comma.
            </param>
        </member>
        <member name="M:Retyped.es5.Uint16Array.lastIndexOf(System.Double)">
            <summary>
            Returns the index of the last occurrence of a value in an array.
            </summary>
            <param name = "searchElement">The value to locate in the array.</param>
        </member>
        <member name="M:Retyped.es5.Uint16Array.lastIndexOf(System.Double,System.Double)">
            <summary>
            Returns the index of the last occurrence of a value in an array.
            </summary>
            <param name = "searchElement">The value to locate in the array.</param>
            <param name = "fromIndex">
            The array index at which to begin the search. If fromIndex is omitted, the
            search starts at index 0.
            </param>
        </member>
        <member name="P:Retyped.es5.Uint16Array.length">
            <summary>
            The length of the array.
            </summary>
        </member>
        <member name="M:Retyped.es5.Uint16Array.map(Retyped.es5.Uint16Array.mapFn)">
            <summary>
            Calls a defined callback function on each element of an array, and returns an array that
            contains the results.
            </summary>
            <param name = "callbackfn">
            A function that accepts up to three arguments. The map method calls the
            callbackfn function one time for each element in the array.
            </param>
        </member>
        <member name="M:Retyped.es5.Uint16Array.map(Retyped.es5.Uint16Array.mapFn,System.Object)">
            <summary>
            Calls a defined callback function on each element of an array, and returns an array that
            contains the results.
            </summary>
            <param name = "callbackfn">
            A function that accepts up to three arguments. The map method calls the
            callbackfn function one time for each element in the array.
            </param>
            <param name = "thisArg">
            An object to which the this keyword can refer in the callbackfn function.
            If thisArg is omitted, undefined is used as the this value.
            </param>
        </member>
        <member name="M:Retyped.es5.Uint16Array.reduce(Retyped.es5.Uint16Array.reduceFn)">
            <summary>
            Calls the specified callback function for all the elements in an array. The return value of
            the callback function is the accumulated result, and is provided as an argument in the next
            call to the callback function.
            instead of an array value.
            </summary>
            <param name = "callbackfn">
            A function that accepts up to four arguments. The reduce method calls the
            callbackfn function one time for each element in the array.
            </param>
        </member>
        <member name="M:Retyped.es5.Uint16Array.reduce(Retyped.es5.Uint16Array.reduceFn,System.Double)">
            <summary>
            Calls the specified callback function for all the elements in an array. The return value of
            the callback function is the accumulated result, and is provided as an argument in the next
            call to the callback function.
            instead of an array value.
            </summary>
            <param name = "callbackfn">
            A function that accepts up to four arguments. The reduce method calls the
            callbackfn function one time for each element in the array.
            </param>
            <param name = "initialValue">
            If initialValue is specified, it is used as the initial value to start
            the accumulation. The first call to the callbackfn function provides this value as an argument
            </param>
        </member>
        <member name="M:Retyped.es5.Uint16Array.reduce``1(Retyped.es5.Uint16Array.reduceFn2{``0},``0)">
            <summary>
            Calls the specified callback function for all the elements in an array. The return value of
            the callback function is the accumulated result, and is provided as an argument in the next
            call to the callback function.
            instead of an array value.
            </summary>
            <param name = "callbackfn">
            A function that accepts up to four arguments. The reduce method calls the
            callbackfn function one time for each element in the array.
            </param>
            <param name = "initialValue">
            If initialValue is specified, it is used as the initial value to start
            the accumulation. The first call to the callbackfn function provides this value as an argument
            </param>
        </member>
        <member name="M:Retyped.es5.Uint16Array.reduceRight(Retyped.es5.Uint16Array.reduceRightFn)">
            <summary>
            Calls the specified callback function for all the elements in an array, in descending order.
            The return value of the callback function is the accumulated result, and is provided as an
            argument in the next call to the callback function.
            argument instead of an array value.
            </summary>
            <param name = "callbackfn">
            A function that accepts up to four arguments. The reduceRight method calls
            the callbackfn function one time for each element in the array.
            </param>
        </member>
        <member name="M:Retyped.es5.Uint16Array.reduceRight(Retyped.es5.Uint16Array.reduceRightFn,System.Double)">
            <summary>
            Calls the specified callback function for all the elements in an array, in descending order.
            The return value of the callback function is the accumulated result, and is provided as an
            argument in the next call to the callback function.
            argument instead of an array value.
            </summary>
            <param name = "callbackfn">
            A function that accepts up to four arguments. The reduceRight method calls
            the callbackfn function one time for each element in the array.
            </param>
            <param name = "initialValue">
            If initialValue is specified, it is used as the initial value to start
            the accumulation. The first call to the callbackfn function provides this value as an
            </param>
        </member>
        <member name="M:Retyped.es5.Uint16Array.reduceRight``1(Retyped.es5.Uint16Array.reduceRightFn2{``0},``0)">
            <summary>
            Calls the specified callback function for all the elements in an array, in descending order.
            The return value of the callback function is the accumulated result, and is provided as an
            argument in the next call to the callback function.
            instead of an array value.
            </summary>
            <param name = "callbackfn">
            A function that accepts up to four arguments. The reduceRight method calls
            the callbackfn function one time for each element in the array.
            </param>
            <param name = "initialValue">
            If initialValue is specified, it is used as the initial value to start
            the accumulation. The first call to the callbackfn function provides this value as an argument
            </param>
        </member>
        <member name="M:Retyped.es5.Uint16Array.reverse">
            <summary>
            Reverses the elements in an Array.
            </summary>
        </member>
        <member name="M:Retyped.es5.Uint16Array.set(Retyped.es5.ArrayLike{System.Double})">
            <summary>
            Sets a value or an array of values.
            </summary>
            <param name = "array">A typed or untyped array of values to set.</param>
        </member>
        <member name="M:Retyped.es5.Uint16Array.set(Retyped.es5.ArrayLike{System.Double},System.Double)">
            <summary>
            Sets a value or an array of values.
            </summary>
            <param name = "array">A typed or untyped array of values to set.</param>
            <param name = "offset">The index in the current array at which the values are to be written.</param>
        </member>
        <member name="M:Retyped.es5.Uint16Array.slice">
            <summary>
            Returns a section of an array.
            </summary>
        </member>
        <member name="M:Retyped.es5.Uint16Array.slice(System.Double)">
            <summary>
            Returns a section of an array.
            </summary>
            <param name = "start">The beginning of the specified portion of the array.</param>
        </member>
        <member name="M:Retyped.es5.Uint16Array.slice(System.Double,System.Double)">
            <summary>
            Returns a section of an array.
            </summary>
            <param name = "start">The beginning of the specified portion of the array.</param>
            <param name = "end">The end of the specified portion of the array.</param>
        </member>
        <member name="M:Retyped.es5.Uint16Array.some(Retyped.es5.Uint16Array.someFn)">
            <summary>
            Determines whether the specified callback function returns true for any element of an array.
            the end of the array.
            </summary>
            <param name = "callbackfn">
            A function that accepts up to three arguments. The some method calls the
            callbackfn function for each element in array1 until the callbackfn returns true, or until
            </param>
        </member>
        <member name="M:Retyped.es5.Uint16Array.some(Retyped.es5.Uint16Array.someFn,System.Object)">
            <summary>
            Determines whether the specified callback function returns true for any element of an array.
            the end of the array.
            </summary>
            <param name = "callbackfn">
            A function that accepts up to three arguments. The some method calls the
            callbackfn function for each element in array1 until the callbackfn returns true, or until
            </param>
            <param name = "thisArg">
            An object to which the this keyword can refer in the callbackfn function.
            If thisArg is omitted, undefined is used as the this value.
            </param>
        </member>
        <member name="M:Retyped.es5.Uint16Array.sort">
            <summary>
            Sorts an array.
            </summary>
        </member>
        <member name="M:Retyped.es5.Uint16Array.sort(Retyped.es5.Uint16Array.sortFn)">
            <summary>
            Sorts an array.
            </summary>
            <param name = "compareFn">
            The name of the function used to determine the order of the elements. If
            omitted, the elements are sorted in ascending, ASCII character order.
            </param>
        </member>
        <member name="M:Retyped.es5.Uint16Array.subarray(System.Double)">
            <summary>
            Gets a new Uint16Array view of the ArrayBuffer store for this array, referencing the elements
            at begin, inclusive, up to end, exclusive.
            </summary>
            <param name = "begin">The index of the beginning of the array.</param>
        </member>
        <member name="M:Retyped.es5.Uint16Array.subarray(System.Double,System.Double)">
            <summary>
            Gets a new Uint16Array view of the ArrayBuffer store for this array, referencing the elements
            at begin, inclusive, up to end, exclusive.
            </summary>
            <param name = "begin">The index of the beginning of the array.</param>
            <param name = "end">The index of the end of the array.</param>
        </member>
        <member name="M:Retyped.es5.Uint16Array.toLocaleString">
            <summary>
            Converts a number to a string by using the current locale.
            </summary>
        </member>
        <member name="M:Retyped.es5.Uint16Array.toString">
            <summary>
            Returns a string representation of an array.
            </summary>
        </member>
        <member name="P:Retyped.es5.Uint16ArrayConstructor.BYTES_PER_ELEMENT">
            <summary>
            The size in bytes of each element in the array.
            </summary>
        </member>
        <member name="M:Retyped.es5.Uint16ArrayConstructor.of(System.Double[])">
            <summary>
            Returns a new array from a set of elements.
            </summary>
            <param name = "items">A set of elements to include in the new array object.</param>
        </member>
        <member name="M:Retyped.es5.Uint16ArrayConstructor.from(Retyped.es5.ArrayLike{System.Double})">
            <summary>
            Creates an array from an array-like or iterable object.
            </summary>
            <param name = "arrayLike">An array-like or iterable object to convert to an array.</param>
        </member>
        <member name="M:Retyped.es5.Uint16ArrayConstructor.from(Retyped.es5.ArrayLike{System.Double},Retyped.es5.Uint16ArrayConstructor.fromFn)">
            <summary>
            Creates an array from an array-like or iterable object.
            </summary>
            <param name = "arrayLike">An array-like or iterable object to convert to an array.</param>
            <param name = "mapfn">A mapping function to call on every element of the array.</param>
        </member>
        <member name="M:Retyped.es5.Uint16ArrayConstructor.from(Retyped.es5.ArrayLike{System.Double},Retyped.es5.Uint16ArrayConstructor.fromFn,System.Object)">
            <summary>
            Creates an array from an array-like or iterable object.
            </summary>
            <param name = "arrayLike">An array-like or iterable object to convert to an array.</param>
            <param name = "mapfn">A mapping function to call on every element of the array.</param>
            <param name = "thisArg">Value of 'this' used to invoke the mapfn.</param>
        </member>
        <member name="P:Retyped.es5.Int32Array.BYTES_PER_ELEMENT">
            <summary>
            The size in bytes of each element in the array.
            </summary>
        </member>
        <member name="P:Retyped.es5.Int32Array.buffer">
            <summary>
            The ArrayBuffer instance referenced by the array.
            </summary>
        </member>
        <member name="P:Retyped.es5.Int32Array.byteLength">
            <summary>
            The length in bytes of the array.
            </summary>
        </member>
        <member name="P:Retyped.es5.Int32Array.byteOffset">
            <summary>
            The offset in bytes of the array.
            </summary>
        </member>
        <member name="M:Retyped.es5.Int32Array.copyWithin(System.Double,System.Double)">
            <summary>
            Returns the this object after copying a section of the array identified by start and end
            to the same array starting at position target
            </summary>
            <param name = "target">
            If target is negative, it is treated as length+target where length is the
            length of the array.
            </param>
            <param name = "start">
            If start is negative, it is treated as length+start. If end is negative, it
            is treated as length+end.
            </param>
        </member>
        <member name="M:Retyped.es5.Int32Array.copyWithin(System.Double,System.Double,System.Double)">
            <summary>
            Returns the this object after copying a section of the array identified by start and end
            to the same array starting at position target
            </summary>
            <param name = "target">
            If target is negative, it is treated as length+target where length is the
            length of the array.
            </param>
            <param name = "start">
            If start is negative, it is treated as length+start. If end is negative, it
            is treated as length+end.
            </param>
            <param name = "end">If not specified, length of the this object is used as its default value.</param>
        </member>
        <member name="M:Retyped.es5.Int32Array.every(Retyped.es5.Int32Array.everyFn)">
            <summary>
            Determines whether all the members of an array satisfy the specified test.
            or until the end of the array.
            </summary>
            <param name = "callbackfn">
            A function that accepts up to three arguments. The every method calls
            the callbackfn function for each element in array1 until the callbackfn returns false,
            </param>
        </member>
        <member name="M:Retyped.es5.Int32Array.every(Retyped.es5.Int32Array.everyFn,System.Object)">
            <summary>
            Determines whether all the members of an array satisfy the specified test.
            or until the end of the array.
            </summary>
            <param name = "callbackfn">
            A function that accepts up to three arguments. The every method calls
            the callbackfn function for each element in array1 until the callbackfn returns false,
            </param>
            <param name = "thisArg">
            An object to which the this keyword can refer in the callbackfn function.
            If thisArg is omitted, undefined is used as the this value.
            </param>
        </member>
        <member name="M:Retyped.es5.Int32Array.fill(System.Double)">
            <summary>
            Returns the this object after filling the section identified by start and end with value
            </summary>
            <param name = "value">value to fill array section with</param>
        </member>
        <member name="M:Retyped.es5.Int32Array.fill(System.Double,System.Double)">
            <summary>
            Returns the this object after filling the section identified by start and end with value
            </summary>
            <param name = "value">value to fill array section with</param>
            <param name = "start">
            index to start filling the array at. If start is negative, it is treated as
            length+start where length is the length of the array.
            </param>
        </member>
        <member name="M:Retyped.es5.Int32Array.fill(System.Double,System.Double,System.Double)">
            <summary>
            Returns the this object after filling the section identified by start and end with value
            </summary>
            <param name = "value">value to fill array section with</param>
            <param name = "start">
            index to start filling the array at. If start is negative, it is treated as
            length+start where length is the length of the array.
            </param>
            <param name = "end">
            index to stop filling the array at. If end is negative, it is treated as
            length+end.
            </param>
        </member>
        <member name="M:Retyped.es5.Int32Array.filter(Retyped.es5.Int32Array.filterFn)">
            <summary>
            Returns the elements of an array that meet the condition specified in a callback function.
            </summary>
            <param name = "callbackfn">
            A function that accepts up to three arguments. The filter method calls
            the callbackfn function one time for each element in the array.
            </param>
        </member>
        <member name="M:Retyped.es5.Int32Array.filter(Retyped.es5.Int32Array.filterFn,System.Object)">
            <summary>
            Returns the elements of an array that meet the condition specified in a callback function.
            </summary>
            <param name = "callbackfn">
            A function that accepts up to three arguments. The filter method calls
            the callbackfn function one time for each element in the array.
            </param>
            <param name = "thisArg">
            An object to which the this keyword can refer in the callbackfn function.
            If thisArg is omitted, undefined is used as the this value.
            </param>
        </member>
        <member name="M:Retyped.es5.Int32Array.find(Retyped.es5.Int32Array.findFn)">
            <summary>
            Returns the value of the first element in the array where predicate is true, and undefined
            otherwise.
            immediately returns that element value. Otherwise, find returns undefined.
            </summary>
            <param name = "predicate">
            find calls predicate once for each element of the array, in ascending
            order, until it finds one where predicate returns true. If such an element is found, find
            </param>
        </member>
        <member name="M:Retyped.es5.Int32Array.find(Retyped.es5.Int32Array.findFn,System.Object)">
            <summary>
            Returns the value of the first element in the array where predicate is true, and undefined
            otherwise.
            immediately returns that element value. Otherwise, find returns undefined.
            </summary>
            <param name = "predicate">
            find calls predicate once for each element of the array, in ascending
            order, until it finds one where predicate returns true. If such an element is found, find
            </param>
            <param name = "thisArg">
            If provided, it will be used as the this value for each invocation of
            predicate. If it is not provided, undefined is used instead.
            </param>
        </member>
        <member name="M:Retyped.es5.Int32Array.findIndex(Retyped.es5.Int32Array.findIndexFn)">
            <summary>
            Returns the index of the first element in the array where predicate is true, and -1
            otherwise.
            findIndex immediately returns that element index. Otherwise, findIndex returns -1.
            </summary>
            <param name = "predicate">
            find calls predicate once for each element of the array, in ascending
            order, until it finds one where predicate returns true. If such an element is found,
            </param>
        </member>
        <member name="M:Retyped.es5.Int32Array.findIndex(Retyped.es5.Int32Array.findIndexFn,System.Object)">
            <summary>
            Returns the index of the first element in the array where predicate is true, and -1
            otherwise.
            findIndex immediately returns that element index. Otherwise, findIndex returns -1.
            </summary>
            <param name = "predicate">
            find calls predicate once for each element of the array, in ascending
            order, until it finds one where predicate returns true. If such an element is found,
            </param>
            <param name = "thisArg">
            If provided, it will be used as the this value for each invocation of
            predicate. If it is not provided, undefined is used instead.
            </param>
        </member>
        <member name="M:Retyped.es5.Int32Array.forEach(Retyped.es5.Int32Array.forEachFn)">
            <summary>
            Performs the specified action for each element in an array.
            </summary>
            <param name = "callbackfn">
            A function that accepts up to three arguments. forEach calls the
            callbackfn function one time for each element in the array.
            </param>
        </member>
        <member name="M:Retyped.es5.Int32Array.forEach(Retyped.es5.Int32Array.forEachFn,System.Object)">
            <summary>
            Performs the specified action for each element in an array.
            </summary>
            <param name = "callbackfn">
            A function that accepts up to three arguments. forEach calls the
            callbackfn function one time for each element in the array.
            </param>
            <param name = "thisArg">
            An object to which the this keyword can refer in the callbackfn function.
            If thisArg is omitted, undefined is used as the this value.
            </param>
        </member>
        <member name="M:Retyped.es5.Int32Array.indexOf(System.Double)">
            <summary>
            Returns the index of the first occurrence of a value in an array.
            </summary>
            <param name = "searchElement">The value to locate in the array.</param>
        </member>
        <member name="M:Retyped.es5.Int32Array.indexOf(System.Double,System.Double)">
            <summary>
            Returns the index of the first occurrence of a value in an array.
            </summary>
            <param name = "searchElement">The value to locate in the array.</param>
            <param name = "fromIndex">
            The array index at which to begin the search. If fromIndex is omitted, the
            search starts at index 0.
            </param>
        </member>
        <member name="M:Retyped.es5.Int32Array.join">
            <summary>
            Adds all the elements of an array separated by the specified separator string.
            </summary>
        </member>
        <member name="M:Retyped.es5.Int32Array.join(System.String)">
            <summary>
            Adds all the elements of an array separated by the specified separator string.
            </summary>
            <param name = "separator">
            A string used to separate one element of an array from the next in the
            resulting String. If omitted, the array elements are separated with a comma.
            </param>
        </member>
        <member name="M:Retyped.es5.Int32Array.lastIndexOf(System.Double)">
            <summary>
            Returns the index of the last occurrence of a value in an array.
            </summary>
            <param name = "searchElement">The value to locate in the array.</param>
        </member>
        <member name="M:Retyped.es5.Int32Array.lastIndexOf(System.Double,System.Double)">
            <summary>
            Returns the index of the last occurrence of a value in an array.
            </summary>
            <param name = "searchElement">The value to locate in the array.</param>
            <param name = "fromIndex">
            The array index at which to begin the search. If fromIndex is omitted, the
            search starts at index 0.
            </param>
        </member>
        <member name="P:Retyped.es5.Int32Array.length">
            <summary>
            The length of the array.
            </summary>
        </member>
        <member name="M:Retyped.es5.Int32Array.map(Retyped.es5.Int32Array.mapFn)">
            <summary>
            Calls a defined callback function on each element of an array, and returns an array that
            contains the results.
            </summary>
            <param name = "callbackfn">
            A function that accepts up to three arguments. The map method calls the
            callbackfn function one time for each element in the array.
            </param>
        </member>
        <member name="M:Retyped.es5.Int32Array.map(Retyped.es5.Int32Array.mapFn,System.Object)">
            <summary>
            Calls a defined callback function on each element of an array, and returns an array that
            contains the results.
            </summary>
            <param name = "callbackfn">
            A function that accepts up to three arguments. The map method calls the
            callbackfn function one time for each element in the array.
            </param>
            <param name = "thisArg">
            An object to which the this keyword can refer in the callbackfn function.
            If thisArg is omitted, undefined is used as the this value.
            </param>
        </member>
        <member name="M:Retyped.es5.Int32Array.reduce(Retyped.es5.Int32Array.reduceFn)">
            <summary>
            Calls the specified callback function for all the elements in an array. The return value of
            the callback function is the accumulated result, and is provided as an argument in the next
            call to the callback function.
            instead of an array value.
            </summary>
            <param name = "callbackfn">
            A function that accepts up to four arguments. The reduce method calls the
            callbackfn function one time for each element in the array.
            </param>
        </member>
        <member name="M:Retyped.es5.Int32Array.reduce(Retyped.es5.Int32Array.reduceFn,System.Double)">
            <summary>
            Calls the specified callback function for all the elements in an array. The return value of
            the callback function is the accumulated result, and is provided as an argument in the next
            call to the callback function.
            instead of an array value.
            </summary>
            <param name = "callbackfn">
            A function that accepts up to four arguments. The reduce method calls the
            callbackfn function one time for each element in the array.
            </param>
            <param name = "initialValue">
            If initialValue is specified, it is used as the initial value to start
            the accumulation. The first call to the callbackfn function provides this value as an argument
            </param>
        </member>
        <member name="M:Retyped.es5.Int32Array.reduce``1(Retyped.es5.Int32Array.reduceFn2{``0},``0)">
            <summary>
            Calls the specified callback function for all the elements in an array. The return value of
            the callback function is the accumulated result, and is provided as an argument in the next
            call to the callback function.
            instead of an array value.
            </summary>
            <param name = "callbackfn">
            A function that accepts up to four arguments. The reduce method calls the
            callbackfn function one time for each element in the array.
            </param>
            <param name = "initialValue">
            If initialValue is specified, it is used as the initial value to start
            the accumulation. The first call to the callbackfn function provides this value as an argument
            </param>
        </member>
        <member name="M:Retyped.es5.Int32Array.reduceRight(Retyped.es5.Int32Array.reduceRightFn)">
            <summary>
            Calls the specified callback function for all the elements in an array, in descending order.
            The return value of the callback function is the accumulated result, and is provided as an
            argument in the next call to the callback function.
            argument instead of an array value.
            </summary>
            <param name = "callbackfn">
            A function that accepts up to four arguments. The reduceRight method calls
            the callbackfn function one time for each element in the array.
            </param>
        </member>
        <member name="M:Retyped.es5.Int32Array.reduceRight(Retyped.es5.Int32Array.reduceRightFn,System.Double)">
            <summary>
            Calls the specified callback function for all the elements in an array, in descending order.
            The return value of the callback function is the accumulated result, and is provided as an
            argument in the next call to the callback function.
            argument instead of an array value.
            </summary>
            <param name = "callbackfn">
            A function that accepts up to four arguments. The reduceRight method calls
            the callbackfn function one time for each element in the array.
            </param>
            <param name = "initialValue">
            If initialValue is specified, it is used as the initial value to start
            the accumulation. The first call to the callbackfn function provides this value as an
            </param>
        </member>
        <member name="M:Retyped.es5.Int32Array.reduceRight``1(Retyped.es5.Int32Array.reduceRightFn2{``0},``0)">
            <summary>
            Calls the specified callback function for all the elements in an array, in descending order.
            The return value of the callback function is the accumulated result, and is provided as an
            argument in the next call to the callback function.
            instead of an array value.
            </summary>
            <param name = "callbackfn">
            A function that accepts up to four arguments. The reduceRight method calls
            the callbackfn function one time for each element in the array.
            </param>
            <param name = "initialValue">
            If initialValue is specified, it is used as the initial value to start
            the accumulation. The first call to the callbackfn function provides this value as an argument
            </param>
        </member>
        <member name="M:Retyped.es5.Int32Array.reverse">
            <summary>
            Reverses the elements in an Array.
            </summary>
        </member>
        <member name="M:Retyped.es5.Int32Array.set(Retyped.es5.ArrayLike{System.Double})">
            <summary>
            Sets a value or an array of values.
            </summary>
            <param name = "array">A typed or untyped array of values to set.</param>
        </member>
        <member name="M:Retyped.es5.Int32Array.set(Retyped.es5.ArrayLike{System.Double},System.Double)">
            <summary>
            Sets a value or an array of values.
            </summary>
            <param name = "array">A typed or untyped array of values to set.</param>
            <param name = "offset">The index in the current array at which the values are to be written.</param>
        </member>
        <member name="M:Retyped.es5.Int32Array.slice">
            <summary>
            Returns a section of an array.
            </summary>
        </member>
        <member name="M:Retyped.es5.Int32Array.slice(System.Double)">
            <summary>
            Returns a section of an array.
            </summary>
            <param name = "start">The beginning of the specified portion of the array.</param>
        </member>
        <member name="M:Retyped.es5.Int32Array.slice(System.Double,System.Double)">
            <summary>
            Returns a section of an array.
            </summary>
            <param name = "start">The beginning of the specified portion of the array.</param>
            <param name = "end">The end of the specified portion of the array.</param>
        </member>
        <member name="M:Retyped.es5.Int32Array.some(Retyped.es5.Int32Array.someFn)">
            <summary>
            Determines whether the specified callback function returns true for any element of an array.
            the end of the array.
            </summary>
            <param name = "callbackfn">
            A function that accepts up to three arguments. The some method calls the
            callbackfn function for each element in array1 until the callbackfn returns true, or until
            </param>
        </member>
        <member name="M:Retyped.es5.Int32Array.some(Retyped.es5.Int32Array.someFn,System.Object)">
            <summary>
            Determines whether the specified callback function returns true for any element of an array.
            the end of the array.
            </summary>
            <param name = "callbackfn">
            A function that accepts up to three arguments. The some method calls the
            callbackfn function for each element in array1 until the callbackfn returns true, or until
            </param>
            <param name = "thisArg">
            An object to which the this keyword can refer in the callbackfn function.
            If thisArg is omitted, undefined is used as the this value.
            </param>
        </member>
        <member name="M:Retyped.es5.Int32Array.sort">
            <summary>
            Sorts an array.
            </summary>
        </member>
        <member name="M:Retyped.es5.Int32Array.sort(Retyped.es5.Int32Array.sortFn)">
            <summary>
            Sorts an array.
            </summary>
            <param name = "compareFn">
            The name of the function used to determine the order of the elements. If
            omitted, the elements are sorted in ascending, ASCII character order.
            </param>
        </member>
        <member name="M:Retyped.es5.Int32Array.subarray(System.Double)">
            <summary>
            Gets a new Int32Array view of the ArrayBuffer store for this array, referencing the elements
            at begin, inclusive, up to end, exclusive.
            </summary>
            <param name = "begin">The index of the beginning of the array.</param>
        </member>
        <member name="M:Retyped.es5.Int32Array.subarray(System.Double,System.Double)">
            <summary>
            Gets a new Int32Array view of the ArrayBuffer store for this array, referencing the elements
            at begin, inclusive, up to end, exclusive.
            </summary>
            <param name = "begin">The index of the beginning of the array.</param>
            <param name = "end">The index of the end of the array.</param>
        </member>
        <member name="M:Retyped.es5.Int32Array.toLocaleString">
            <summary>
            Converts a number to a string by using the current locale.
            </summary>
        </member>
        <member name="M:Retyped.es5.Int32Array.toString">
            <summary>
            Returns a string representation of an array.
            </summary>
        </member>
        <member name="P:Retyped.es5.Int32ArrayConstructor.BYTES_PER_ELEMENT">
            <summary>
            The size in bytes of each element in the array.
            </summary>
        </member>
        <member name="M:Retyped.es5.Int32ArrayConstructor.of(System.Double[])">
            <summary>
            Returns a new array from a set of elements.
            </summary>
            <param name = "items">A set of elements to include in the new array object.</param>
        </member>
        <member name="M:Retyped.es5.Int32ArrayConstructor.from(Retyped.es5.ArrayLike{System.Double})">
            <summary>
            Creates an array from an array-like or iterable object.
            </summary>
            <param name = "arrayLike">An array-like or iterable object to convert to an array.</param>
        </member>
        <member name="M:Retyped.es5.Int32ArrayConstructor.from(Retyped.es5.ArrayLike{System.Double},Retyped.es5.Int32ArrayConstructor.fromFn)">
            <summary>
            Creates an array from an array-like or iterable object.
            </summary>
            <param name = "arrayLike">An array-like or iterable object to convert to an array.</param>
            <param name = "mapfn">A mapping function to call on every element of the array.</param>
        </member>
        <member name="M:Retyped.es5.Int32ArrayConstructor.from(Retyped.es5.ArrayLike{System.Double},Retyped.es5.Int32ArrayConstructor.fromFn,System.Object)">
            <summary>
            Creates an array from an array-like or iterable object.
            </summary>
            <param name = "arrayLike">An array-like or iterable object to convert to an array.</param>
            <param name = "mapfn">A mapping function to call on every element of the array.</param>
            <param name = "thisArg">Value of 'this' used to invoke the mapfn.</param>
        </member>
        <member name="P:Retyped.es5.Uint32Array.BYTES_PER_ELEMENT">
            <summary>
            The size in bytes of each element in the array.
            </summary>
        </member>
        <member name="P:Retyped.es5.Uint32Array.buffer">
            <summary>
            The ArrayBuffer instance referenced by the array.
            </summary>
        </member>
        <member name="P:Retyped.es5.Uint32Array.byteLength">
            <summary>
            The length in bytes of the array.
            </summary>
        </member>
        <member name="P:Retyped.es5.Uint32Array.byteOffset">
            <summary>
            The offset in bytes of the array.
            </summary>
        </member>
        <member name="M:Retyped.es5.Uint32Array.copyWithin(System.Double,System.Double)">
            <summary>
            Returns the this object after copying a section of the array identified by start and end
            to the same array starting at position target
            </summary>
            <param name = "target">
            If target is negative, it is treated as length+target where length is the
            length of the array.
            </param>
            <param name = "start">
            If start is negative, it is treated as length+start. If end is negative, it
            is treated as length+end.
            </param>
        </member>
        <member name="M:Retyped.es5.Uint32Array.copyWithin(System.Double,System.Double,System.Double)">
            <summary>
            Returns the this object after copying a section of the array identified by start and end
            to the same array starting at position target
            </summary>
            <param name = "target">
            If target is negative, it is treated as length+target where length is the
            length of the array.
            </param>
            <param name = "start">
            If start is negative, it is treated as length+start. If end is negative, it
            is treated as length+end.
            </param>
            <param name = "end">If not specified, length of the this object is used as its default value.</param>
        </member>
        <member name="M:Retyped.es5.Uint32Array.every(Retyped.es5.Uint32Array.everyFn)">
            <summary>
            Determines whether all the members of an array satisfy the specified test.
            or until the end of the array.
            </summary>
            <param name = "callbackfn">
            A function that accepts up to three arguments. The every method calls
            the callbackfn function for each element in array1 until the callbackfn returns false,
            </param>
        </member>
        <member name="M:Retyped.es5.Uint32Array.every(Retyped.es5.Uint32Array.everyFn,System.Object)">
            <summary>
            Determines whether all the members of an array satisfy the specified test.
            or until the end of the array.
            </summary>
            <param name = "callbackfn">
            A function that accepts up to three arguments. The every method calls
            the callbackfn function for each element in array1 until the callbackfn returns false,
            </param>
            <param name = "thisArg">
            An object to which the this keyword can refer in the callbackfn function.
            If thisArg is omitted, undefined is used as the this value.
            </param>
        </member>
        <member name="M:Retyped.es5.Uint32Array.fill(System.Double)">
            <summary>
            Returns the this object after filling the section identified by start and end with value
            </summary>
            <param name = "value">value to fill array section with</param>
        </member>
        <member name="M:Retyped.es5.Uint32Array.fill(System.Double,System.Double)">
            <summary>
            Returns the this object after filling the section identified by start and end with value
            </summary>
            <param name = "value">value to fill array section with</param>
            <param name = "start">
            index to start filling the array at. If start is negative, it is treated as
            length+start where length is the length of the array.
            </param>
        </member>
        <member name="M:Retyped.es5.Uint32Array.fill(System.Double,System.Double,System.Double)">
            <summary>
            Returns the this object after filling the section identified by start and end with value
            </summary>
            <param name = "value">value to fill array section with</param>
            <param name = "start">
            index to start filling the array at. If start is negative, it is treated as
            length+start where length is the length of the array.
            </param>
            <param name = "end">
            index to stop filling the array at. If end is negative, it is treated as
            length+end.
            </param>
        </member>
        <member name="M:Retyped.es5.Uint32Array.filter(Retyped.es5.Uint32Array.filterFn)">
            <summary>
            Returns the elements of an array that meet the condition specified in a callback function.
            </summary>
            <param name = "callbackfn">
            A function that accepts up to three arguments. The filter method calls
            the callbackfn function one time for each element in the array.
            </param>
        </member>
        <member name="M:Retyped.es5.Uint32Array.filter(Retyped.es5.Uint32Array.filterFn,System.Object)">
            <summary>
            Returns the elements of an array that meet the condition specified in a callback function.
            </summary>
            <param name = "callbackfn">
            A function that accepts up to three arguments. The filter method calls
            the callbackfn function one time for each element in the array.
            </param>
            <param name = "thisArg">
            An object to which the this keyword can refer in the callbackfn function.
            If thisArg is omitted, undefined is used as the this value.
            </param>
        </member>
        <member name="M:Retyped.es5.Uint32Array.find(Retyped.es5.Uint32Array.findFn)">
            <summary>
            Returns the value of the first element in the array where predicate is true, and undefined
            otherwise.
            immediately returns that element value. Otherwise, find returns undefined.
            </summary>
            <param name = "predicate">
            find calls predicate once for each element of the array, in ascending
            order, until it finds one where predicate returns true. If such an element is found, find
            </param>
        </member>
        <member name="M:Retyped.es5.Uint32Array.find(Retyped.es5.Uint32Array.findFn,System.Object)">
            <summary>
            Returns the value of the first element in the array where predicate is true, and undefined
            otherwise.
            immediately returns that element value. Otherwise, find returns undefined.
            </summary>
            <param name = "predicate">
            find calls predicate once for each element of the array, in ascending
            order, until it finds one where predicate returns true. If such an element is found, find
            </param>
            <param name = "thisArg">
            If provided, it will be used as the this value for each invocation of
            predicate. If it is not provided, undefined is used instead.
            </param>
        </member>
        <member name="M:Retyped.es5.Uint32Array.findIndex(Retyped.es5.Uint32Array.findIndexFn)">
            <summary>
            Returns the index of the first element in the array where predicate is true, and -1
            otherwise.
            findIndex immediately returns that element index. Otherwise, findIndex returns -1.
            </summary>
            <param name = "predicate">
            find calls predicate once for each element of the array, in ascending
            order, until it finds one where predicate returns true. If such an element is found,
            </param>
        </member>
        <member name="M:Retyped.es5.Uint32Array.findIndex(Retyped.es5.Uint32Array.findIndexFn,System.Object)">
            <summary>
            Returns the index of the first element in the array where predicate is true, and -1
            otherwise.
            findIndex immediately returns that element index. Otherwise, findIndex returns -1.
            </summary>
            <param name = "predicate">
            find calls predicate once for each element of the array, in ascending
            order, until it finds one where predicate returns true. If such an element is found,
            </param>
            <param name = "thisArg">
            If provided, it will be used as the this value for each invocation of
            predicate. If it is not provided, undefined is used instead.
            </param>
        </member>
        <member name="M:Retyped.es5.Uint32Array.forEach(Retyped.es5.Uint32Array.forEachFn)">
            <summary>
            Performs the specified action for each element in an array.
            </summary>
            <param name = "callbackfn">
            A function that accepts up to three arguments. forEach calls the
            callbackfn function one time for each element in the array.
            </param>
        </member>
        <member name="M:Retyped.es5.Uint32Array.forEach(Retyped.es5.Uint32Array.forEachFn,System.Object)">
            <summary>
            Performs the specified action for each element in an array.
            </summary>
            <param name = "callbackfn">
            A function that accepts up to three arguments. forEach calls the
            callbackfn function one time for each element in the array.
            </param>
            <param name = "thisArg">
            An object to which the this keyword can refer in the callbackfn function.
            If thisArg is omitted, undefined is used as the this value.
            </param>
        </member>
        <member name="M:Retyped.es5.Uint32Array.indexOf(System.Double)">
            <summary>
            Returns the index of the first occurrence of a value in an array.
            </summary>
            <param name = "searchElement">The value to locate in the array.</param>
        </member>
        <member name="M:Retyped.es5.Uint32Array.indexOf(System.Double,System.Double)">
            <summary>
            Returns the index of the first occurrence of a value in an array.
            </summary>
            <param name = "searchElement">The value to locate in the array.</param>
            <param name = "fromIndex">
            The array index at which to begin the search. If fromIndex is omitted, the
            search starts at index 0.
            </param>
        </member>
        <member name="M:Retyped.es5.Uint32Array.join">
            <summary>
            Adds all the elements of an array separated by the specified separator string.
            </summary>
        </member>
        <member name="M:Retyped.es5.Uint32Array.join(System.String)">
            <summary>
            Adds all the elements of an array separated by the specified separator string.
            </summary>
            <param name = "separator">
            A string used to separate one element of an array from the next in the
            resulting String. If omitted, the array elements are separated with a comma.
            </param>
        </member>
        <member name="M:Retyped.es5.Uint32Array.lastIndexOf(System.Double)">
            <summary>
            Returns the index of the last occurrence of a value in an array.
            </summary>
            <param name = "searchElement">The value to locate in the array.</param>
        </member>
        <member name="M:Retyped.es5.Uint32Array.lastIndexOf(System.Double,System.Double)">
            <summary>
            Returns the index of the last occurrence of a value in an array.
            </summary>
            <param name = "searchElement">The value to locate in the array.</param>
            <param name = "fromIndex">
            The array index at which to begin the search. If fromIndex is omitted, the
            search starts at index 0.
            </param>
        </member>
        <member name="P:Retyped.es5.Uint32Array.length">
            <summary>
            The length of the array.
            </summary>
        </member>
        <member name="M:Retyped.es5.Uint32Array.map(Retyped.es5.Uint32Array.mapFn)">
            <summary>
            Calls a defined callback function on each element of an array, and returns an array that
            contains the results.
            </summary>
            <param name = "callbackfn">
            A function that accepts up to three arguments. The map method calls the
            callbackfn function one time for each element in the array.
            </param>
        </member>
        <member name="M:Retyped.es5.Uint32Array.map(Retyped.es5.Uint32Array.mapFn,System.Object)">
            <summary>
            Calls a defined callback function on each element of an array, and returns an array that
            contains the results.
            </summary>
            <param name = "callbackfn">
            A function that accepts up to three arguments. The map method calls the
            callbackfn function one time for each element in the array.
            </param>
            <param name = "thisArg">
            An object to which the this keyword can refer in the callbackfn function.
            If thisArg is omitted, undefined is used as the this value.
            </param>
        </member>
        <member name="M:Retyped.es5.Uint32Array.reduce(Retyped.es5.Uint32Array.reduceFn)">
            <summary>
            Calls the specified callback function for all the elements in an array. The return value of
            the callback function is the accumulated result, and is provided as an argument in the next
            call to the callback function.
            instead of an array value.
            </summary>
            <param name = "callbackfn">
            A function that accepts up to four arguments. The reduce method calls the
            callbackfn function one time for each element in the array.
            </param>
        </member>
        <member name="M:Retyped.es5.Uint32Array.reduce(Retyped.es5.Uint32Array.reduceFn,System.Double)">
            <summary>
            Calls the specified callback function for all the elements in an array. The return value of
            the callback function is the accumulated result, and is provided as an argument in the next
            call to the callback function.
            instead of an array value.
            </summary>
            <param name = "callbackfn">
            A function that accepts up to four arguments. The reduce method calls the
            callbackfn function one time for each element in the array.
            </param>
            <param name = "initialValue">
            If initialValue is specified, it is used as the initial value to start
            the accumulation. The first call to the callbackfn function provides this value as an argument
            </param>
        </member>
        <member name="M:Retyped.es5.Uint32Array.reduce``1(Retyped.es5.Uint32Array.reduceFn2{``0},``0)">
            <summary>
            Calls the specified callback function for all the elements in an array. The return value of
            the callback function is the accumulated result, and is provided as an argument in the next
            call to the callback function.
            instead of an array value.
            </summary>
            <param name = "callbackfn">
            A function that accepts up to four arguments. The reduce method calls the
            callbackfn function one time for each element in the array.
            </param>
            <param name = "initialValue">
            If initialValue is specified, it is used as the initial value to start
            the accumulation. The first call to the callbackfn function provides this value as an argument
            </param>
        </member>
        <member name="M:Retyped.es5.Uint32Array.reduceRight(Retyped.es5.Uint32Array.reduceRightFn)">
            <summary>
            Calls the specified callback function for all the elements in an array, in descending order.
            The return value of the callback function is the accumulated result, and is provided as an
            argument in the next call to the callback function.
            argument instead of an array value.
            </summary>
            <param name = "callbackfn">
            A function that accepts up to four arguments. The reduceRight method calls
            the callbackfn function one time for each element in the array.
            </param>
        </member>
        <member name="M:Retyped.es5.Uint32Array.reduceRight(Retyped.es5.Uint32Array.reduceRightFn,System.Double)">
            <summary>
            Calls the specified callback function for all the elements in an array, in descending order.
            The return value of the callback function is the accumulated result, and is provided as an
            argument in the next call to the callback function.
            argument instead of an array value.
            </summary>
            <param name = "callbackfn">
            A function that accepts up to four arguments. The reduceRight method calls
            the callbackfn function one time for each element in the array.
            </param>
            <param name = "initialValue">
            If initialValue is specified, it is used as the initial value to start
            the accumulation. The first call to the callbackfn function provides this value as an
            </param>
        </member>
        <member name="M:Retyped.es5.Uint32Array.reduceRight``1(Retyped.es5.Uint32Array.reduceRightFn2{``0},``0)">
            <summary>
            Calls the specified callback function for all the elements in an array, in descending order.
            The return value of the callback function is the accumulated result, and is provided as an
            argument in the next call to the callback function.
            instead of an array value.
            </summary>
            <param name = "callbackfn">
            A function that accepts up to four arguments. The reduceRight method calls
            the callbackfn function one time for each element in the array.
            </param>
            <param name = "initialValue">
            If initialValue is specified, it is used as the initial value to start
            the accumulation. The first call to the callbackfn function provides this value as an argument
            </param>
        </member>
        <member name="M:Retyped.es5.Uint32Array.reverse">
            <summary>
            Reverses the elements in an Array.
            </summary>
        </member>
        <member name="M:Retyped.es5.Uint32Array.set(Retyped.es5.ArrayLike{System.Double})">
            <summary>
            Sets a value or an array of values.
            </summary>
            <param name = "array">A typed or untyped array of values to set.</param>
        </member>
        <member name="M:Retyped.es5.Uint32Array.set(Retyped.es5.ArrayLike{System.Double},System.Double)">
            <summary>
            Sets a value or an array of values.
            </summary>
            <param name = "array">A typed or untyped array of values to set.</param>
            <param name = "offset">The index in the current array at which the values are to be written.</param>
        </member>
        <member name="M:Retyped.es5.Uint32Array.slice">
            <summary>
            Returns a section of an array.
            </summary>
        </member>
        <member name="M:Retyped.es5.Uint32Array.slice(System.Double)">
            <summary>
            Returns a section of an array.
            </summary>
            <param name = "start">The beginning of the specified portion of the array.</param>
        </member>
        <member name="M:Retyped.es5.Uint32Array.slice(System.Double,System.Double)">
            <summary>
            Returns a section of an array.
            </summary>
            <param name = "start">The beginning of the specified portion of the array.</param>
            <param name = "end">The end of the specified portion of the array.</param>
        </member>
        <member name="M:Retyped.es5.Uint32Array.some(Retyped.es5.Uint32Array.someFn)">
            <summary>
            Determines whether the specified callback function returns true for any element of an array.
            the end of the array.
            </summary>
            <param name = "callbackfn">
            A function that accepts up to three arguments. The some method calls the
            callbackfn function for each element in array1 until the callbackfn returns true, or until
            </param>
        </member>
        <member name="M:Retyped.es5.Uint32Array.some(Retyped.es5.Uint32Array.someFn,System.Object)">
            <summary>
            Determines whether the specified callback function returns true for any element of an array.
            the end of the array.
            </summary>
            <param name = "callbackfn">
            A function that accepts up to three arguments. The some method calls the
            callbackfn function for each element in array1 until the callbackfn returns true, or until
            </param>
            <param name = "thisArg">
            An object to which the this keyword can refer in the callbackfn function.
            If thisArg is omitted, undefined is used as the this value.
            </param>
        </member>
        <member name="M:Retyped.es5.Uint32Array.sort">
            <summary>
            Sorts an array.
            </summary>
        </member>
        <member name="M:Retyped.es5.Uint32Array.sort(Retyped.es5.Uint32Array.sortFn)">
            <summary>
            Sorts an array.
            </summary>
            <param name = "compareFn">
            The name of the function used to determine the order of the elements. If
            omitted, the elements are sorted in ascending, ASCII character order.
            </param>
        </member>
        <member name="M:Retyped.es5.Uint32Array.subarray(System.Double)">
            <summary>
            Gets a new Uint32Array view of the ArrayBuffer store for this array, referencing the elements
            at begin, inclusive, up to end, exclusive.
            </summary>
            <param name = "begin">The index of the beginning of the array.</param>
        </member>
        <member name="M:Retyped.es5.Uint32Array.subarray(System.Double,System.Double)">
            <summary>
            Gets a new Uint32Array view of the ArrayBuffer store for this array, referencing the elements
            at begin, inclusive, up to end, exclusive.
            </summary>
            <param name = "begin">The index of the beginning of the array.</param>
            <param name = "end">The index of the end of the array.</param>
        </member>
        <member name="M:Retyped.es5.Uint32Array.toLocaleString">
            <summary>
            Converts a number to a string by using the current locale.
            </summary>
        </member>
        <member name="M:Retyped.es5.Uint32Array.toString">
            <summary>
            Returns a string representation of an array.
            </summary>
        </member>
        <member name="P:Retyped.es5.Uint32ArrayConstructor.BYTES_PER_ELEMENT">
            <summary>
            The size in bytes of each element in the array.
            </summary>
        </member>
        <member name="M:Retyped.es5.Uint32ArrayConstructor.of(System.Double[])">
            <summary>
            Returns a new array from a set of elements.
            </summary>
            <param name = "items">A set of elements to include in the new array object.</param>
        </member>
        <member name="M:Retyped.es5.Uint32ArrayConstructor.from(Retyped.es5.ArrayLike{System.Double})">
            <summary>
            Creates an array from an array-like or iterable object.
            </summary>
            <param name = "arrayLike">An array-like or iterable object to convert to an array.</param>
        </member>
        <member name="M:Retyped.es5.Uint32ArrayConstructor.from(Retyped.es5.ArrayLike{System.Double},Retyped.es5.Uint32ArrayConstructor.fromFn)">
            <summary>
            Creates an array from an array-like or iterable object.
            </summary>
            <param name = "arrayLike">An array-like or iterable object to convert to an array.</param>
            <param name = "mapfn">A mapping function to call on every element of the array.</param>
        </member>
        <member name="M:Retyped.es5.Uint32ArrayConstructor.from(Retyped.es5.ArrayLike{System.Double},Retyped.es5.Uint32ArrayConstructor.fromFn,System.Object)">
            <summary>
            Creates an array from an array-like or iterable object.
            </summary>
            <param name = "arrayLike">An array-like or iterable object to convert to an array.</param>
            <param name = "mapfn">A mapping function to call on every element of the array.</param>
            <param name = "thisArg">Value of 'this' used to invoke the mapfn.</param>
        </member>
        <member name="P:Retyped.es5.Float32Array.BYTES_PER_ELEMENT">
            <summary>
            The size in bytes of each element in the array.
            </summary>
        </member>
        <member name="P:Retyped.es5.Float32Array.buffer">
            <summary>
            The ArrayBuffer instance referenced by the array.
            </summary>
        </member>
        <member name="P:Retyped.es5.Float32Array.byteLength">
            <summary>
            The length in bytes of the array.
            </summary>
        </member>
        <member name="P:Retyped.es5.Float32Array.byteOffset">
            <summary>
            The offset in bytes of the array.
            </summary>
        </member>
        <member name="M:Retyped.es5.Float32Array.copyWithin(System.Double,System.Double)">
            <summary>
            Returns the this object after copying a section of the array identified by start and end
            to the same array starting at position target
            </summary>
            <param name = "target">
            If target is negative, it is treated as length+target where length is the
            length of the array.
            </param>
            <param name = "start">
            If start is negative, it is treated as length+start. If end is negative, it
            is treated as length+end.
            </param>
        </member>
        <member name="M:Retyped.es5.Float32Array.copyWithin(System.Double,System.Double,System.Double)">
            <summary>
            Returns the this object after copying a section of the array identified by start and end
            to the same array starting at position target
            </summary>
            <param name = "target">
            If target is negative, it is treated as length+target where length is the
            length of the array.
            </param>
            <param name = "start">
            If start is negative, it is treated as length+start. If end is negative, it
            is treated as length+end.
            </param>
            <param name = "end">If not specified, length of the this object is used as its default value.</param>
        </member>
        <member name="M:Retyped.es5.Float32Array.every(Retyped.es5.Float32Array.everyFn)">
            <summary>
            Determines whether all the members of an array satisfy the specified test.
            or until the end of the array.
            </summary>
            <param name = "callbackfn">
            A function that accepts up to three arguments. The every method calls
            the callbackfn function for each element in array1 until the callbackfn returns false,
            </param>
        </member>
        <member name="M:Retyped.es5.Float32Array.every(Retyped.es5.Float32Array.everyFn,System.Object)">
            <summary>
            Determines whether all the members of an array satisfy the specified test.
            or until the end of the array.
            </summary>
            <param name = "callbackfn">
            A function that accepts up to three arguments. The every method calls
            the callbackfn function for each element in array1 until the callbackfn returns false,
            </param>
            <param name = "thisArg">
            An object to which the this keyword can refer in the callbackfn function.
            If thisArg is omitted, undefined is used as the this value.
            </param>
        </member>
        <member name="M:Retyped.es5.Float32Array.fill(System.Double)">
            <summary>
            Returns the this object after filling the section identified by start and end with value
            </summary>
            <param name = "value">value to fill array section with</param>
        </member>
        <member name="M:Retyped.es5.Float32Array.fill(System.Double,System.Double)">
            <summary>
            Returns the this object after filling the section identified by start and end with value
            </summary>
            <param name = "value">value to fill array section with</param>
            <param name = "start">
            index to start filling the array at. If start is negative, it is treated as
            length+start where length is the length of the array.
            </param>
        </member>
        <member name="M:Retyped.es5.Float32Array.fill(System.Double,System.Double,System.Double)">
            <summary>
            Returns the this object after filling the section identified by start and end with value
            </summary>
            <param name = "value">value to fill array section with</param>
            <param name = "start">
            index to start filling the array at. If start is negative, it is treated as
            length+start where length is the length of the array.
            </param>
            <param name = "end">
            index to stop filling the array at. If end is negative, it is treated as
            length+end.
            </param>
        </member>
        <member name="M:Retyped.es5.Float32Array.filter(Retyped.es5.Float32Array.filterFn)">
            <summary>
            Returns the elements of an array that meet the condition specified in a callback function.
            </summary>
            <param name = "callbackfn">
            A function that accepts up to three arguments. The filter method calls
            the callbackfn function one time for each element in the array.
            </param>
        </member>
        <member name="M:Retyped.es5.Float32Array.filter(Retyped.es5.Float32Array.filterFn,System.Object)">
            <summary>
            Returns the elements of an array that meet the condition specified in a callback function.
            </summary>
            <param name = "callbackfn">
            A function that accepts up to three arguments. The filter method calls
            the callbackfn function one time for each element in the array.
            </param>
            <param name = "thisArg">
            An object to which the this keyword can refer in the callbackfn function.
            If thisArg is omitted, undefined is used as the this value.
            </param>
        </member>
        <member name="M:Retyped.es5.Float32Array.find(Retyped.es5.Float32Array.findFn)">
            <summary>
            Returns the value of the first element in the array where predicate is true, and undefined
            otherwise.
            immediately returns that element value. Otherwise, find returns undefined.
            </summary>
            <param name = "predicate">
            find calls predicate once for each element of the array, in ascending
            order, until it finds one where predicate returns true. If such an element is found, find
            </param>
        </member>
        <member name="M:Retyped.es5.Float32Array.find(Retyped.es5.Float32Array.findFn,System.Object)">
            <summary>
            Returns the value of the first element in the array where predicate is true, and undefined
            otherwise.
            immediately returns that element value. Otherwise, find returns undefined.
            </summary>
            <param name = "predicate">
            find calls predicate once for each element of the array, in ascending
            order, until it finds one where predicate returns true. If such an element is found, find
            </param>
            <param name = "thisArg">
            If provided, it will be used as the this value for each invocation of
            predicate. If it is not provided, undefined is used instead.
            </param>
        </member>
        <member name="M:Retyped.es5.Float32Array.findIndex(Retyped.es5.Float32Array.findIndexFn)">
            <summary>
            Returns the index of the first element in the array where predicate is true, and -1
            otherwise.
            findIndex immediately returns that element index. Otherwise, findIndex returns -1.
            </summary>
            <param name = "predicate">
            find calls predicate once for each element of the array, in ascending
            order, until it finds one where predicate returns true. If such an element is found,
            </param>
        </member>
        <member name="M:Retyped.es5.Float32Array.findIndex(Retyped.es5.Float32Array.findIndexFn,System.Object)">
            <summary>
            Returns the index of the first element in the array where predicate is true, and -1
            otherwise.
            findIndex immediately returns that element index. Otherwise, findIndex returns -1.
            </summary>
            <param name = "predicate">
            find calls predicate once for each element of the array, in ascending
            order, until it finds one where predicate returns true. If such an element is found,
            </param>
            <param name = "thisArg">
            If provided, it will be used as the this value for each invocation of
            predicate. If it is not provided, undefined is used instead.
            </param>
        </member>
        <member name="M:Retyped.es5.Float32Array.forEach(Retyped.es5.Float32Array.forEachFn)">
            <summary>
            Performs the specified action for each element in an array.
            </summary>
            <param name = "callbackfn">
            A function that accepts up to three arguments. forEach calls the
            callbackfn function one time for each element in the array.
            </param>
        </member>
        <member name="M:Retyped.es5.Float32Array.forEach(Retyped.es5.Float32Array.forEachFn,System.Object)">
            <summary>
            Performs the specified action for each element in an array.
            </summary>
            <param name = "callbackfn">
            A function that accepts up to three arguments. forEach calls the
            callbackfn function one time for each element in the array.
            </param>
            <param name = "thisArg">
            An object to which the this keyword can refer in the callbackfn function.
            If thisArg is omitted, undefined is used as the this value.
            </param>
        </member>
        <member name="M:Retyped.es5.Float32Array.indexOf(System.Double)">
            <summary>
            Returns the index of the first occurrence of a value in an array.
            </summary>
            <param name = "searchElement">The value to locate in the array.</param>
        </member>
        <member name="M:Retyped.es5.Float32Array.indexOf(System.Double,System.Double)">
            <summary>
            Returns the index of the first occurrence of a value in an array.
            </summary>
            <param name = "searchElement">The value to locate in the array.</param>
            <param name = "fromIndex">
            The array index at which to begin the search. If fromIndex is omitted, the
            search starts at index 0.
            </param>
        </member>
        <member name="M:Retyped.es5.Float32Array.join">
            <summary>
            Adds all the elements of an array separated by the specified separator string.
            </summary>
        </member>
        <member name="M:Retyped.es5.Float32Array.join(System.String)">
            <summary>
            Adds all the elements of an array separated by the specified separator string.
            </summary>
            <param name = "separator">
            A string used to separate one element of an array from the next in the
            resulting String. If omitted, the array elements are separated with a comma.
            </param>
        </member>
        <member name="M:Retyped.es5.Float32Array.lastIndexOf(System.Double)">
            <summary>
            Returns the index of the last occurrence of a value in an array.
            </summary>
            <param name = "searchElement">The value to locate in the array.</param>
        </member>
        <member name="M:Retyped.es5.Float32Array.lastIndexOf(System.Double,System.Double)">
            <summary>
            Returns the index of the last occurrence of a value in an array.
            </summary>
            <param name = "searchElement">The value to locate in the array.</param>
            <param name = "fromIndex">
            The array index at which to begin the search. If fromIndex is omitted, the
            search starts at index 0.
            </param>
        </member>
        <member name="P:Retyped.es5.Float32Array.length">
            <summary>
            The length of the array.
            </summary>
        </member>
        <member name="M:Retyped.es5.Float32Array.map(Retyped.es5.Float32Array.mapFn)">
            <summary>
            Calls a defined callback function on each element of an array, and returns an array that
            contains the results.
            </summary>
            <param name = "callbackfn">
            A function that accepts up to three arguments. The map method calls the
            callbackfn function one time for each element in the array.
            </param>
        </member>
        <member name="M:Retyped.es5.Float32Array.map(Retyped.es5.Float32Array.mapFn,System.Object)">
            <summary>
            Calls a defined callback function on each element of an array, and returns an array that
            contains the results.
            </summary>
            <param name = "callbackfn">
            A function that accepts up to three arguments. The map method calls the
            callbackfn function one time for each element in the array.
            </param>
            <param name = "thisArg">
            An object to which the this keyword can refer in the callbackfn function.
            If thisArg is omitted, undefined is used as the this value.
            </param>
        </member>
        <member name="M:Retyped.es5.Float32Array.reduce(Retyped.es5.Float32Array.reduceFn)">
            <summary>
            Calls the specified callback function for all the elements in an array. The return value of
            the callback function is the accumulated result, and is provided as an argument in the next
            call to the callback function.
            instead of an array value.
            </summary>
            <param name = "callbackfn">
            A function that accepts up to four arguments. The reduce method calls the
            callbackfn function one time for each element in the array.
            </param>
        </member>
        <member name="M:Retyped.es5.Float32Array.reduce(Retyped.es5.Float32Array.reduceFn,System.Double)">
            <summary>
            Calls the specified callback function for all the elements in an array. The return value of
            the callback function is the accumulated result, and is provided as an argument in the next
            call to the callback function.
            instead of an array value.
            </summary>
            <param name = "callbackfn">
            A function that accepts up to four arguments. The reduce method calls the
            callbackfn function one time for each element in the array.
            </param>
            <param name = "initialValue">
            If initialValue is specified, it is used as the initial value to start
            the accumulation. The first call to the callbackfn function provides this value as an argument
            </param>
        </member>
        <member name="M:Retyped.es5.Float32Array.reduce``1(Retyped.es5.Float32Array.reduceFn2{``0},``0)">
            <summary>
            Calls the specified callback function for all the elements in an array. The return value of
            the callback function is the accumulated result, and is provided as an argument in the next
            call to the callback function.
            instead of an array value.
            </summary>
            <param name = "callbackfn">
            A function that accepts up to four arguments. The reduce method calls the
            callbackfn function one time for each element in the array.
            </param>
            <param name = "initialValue">
            If initialValue is specified, it is used as the initial value to start
            the accumulation. The first call to the callbackfn function provides this value as an argument
            </param>
        </member>
        <member name="M:Retyped.es5.Float32Array.reduceRight(Retyped.es5.Float32Array.reduceRightFn)">
            <summary>
            Calls the specified callback function for all the elements in an array, in descending order.
            The return value of the callback function is the accumulated result, and is provided as an
            argument in the next call to the callback function.
            argument instead of an array value.
            </summary>
            <param name = "callbackfn">
            A function that accepts up to four arguments. The reduceRight method calls
            the callbackfn function one time for each element in the array.
            </param>
        </member>
        <member name="M:Retyped.es5.Float32Array.reduceRight(Retyped.es5.Float32Array.reduceRightFn,System.Double)">
            <summary>
            Calls the specified callback function for all the elements in an array, in descending order.
            The return value of the callback function is the accumulated result, and is provided as an
            argument in the next call to the callback function.
            argument instead of an array value.
            </summary>
            <param name = "callbackfn">
            A function that accepts up to four arguments. The reduceRight method calls
            the callbackfn function one time for each element in the array.
            </param>
            <param name = "initialValue">
            If initialValue is specified, it is used as the initial value to start
            the accumulation. The first call to the callbackfn function provides this value as an
            </param>
        </member>
        <member name="M:Retyped.es5.Float32Array.reduceRight``1(Retyped.es5.Float32Array.reduceRightFn2{``0},``0)">
            <summary>
            Calls the specified callback function for all the elements in an array, in descending order.
            The return value of the callback function is the accumulated result, and is provided as an
            argument in the next call to the callback function.
            instead of an array value.
            </summary>
            <param name = "callbackfn">
            A function that accepts up to four arguments. The reduceRight method calls
            the callbackfn function one time for each element in the array.
            </param>
            <param name = "initialValue">
            If initialValue is specified, it is used as the initial value to start
            the accumulation. The first call to the callbackfn function provides this value as an argument
            </param>
        </member>
        <member name="M:Retyped.es5.Float32Array.reverse">
            <summary>
            Reverses the elements in an Array.
            </summary>
        </member>
        <member name="M:Retyped.es5.Float32Array.set(Retyped.es5.ArrayLike{System.Double})">
            <summary>
            Sets a value or an array of values.
            </summary>
            <param name = "array">A typed or untyped array of values to set.</param>
        </member>
        <member name="M:Retyped.es5.Float32Array.set(Retyped.es5.ArrayLike{System.Double},System.Double)">
            <summary>
            Sets a value or an array of values.
            </summary>
            <param name = "array">A typed or untyped array of values to set.</param>
            <param name = "offset">The index in the current array at which the values are to be written.</param>
        </member>
        <member name="M:Retyped.es5.Float32Array.slice">
            <summary>
            Returns a section of an array.
            </summary>
        </member>
        <member name="M:Retyped.es5.Float32Array.slice(System.Double)">
            <summary>
            Returns a section of an array.
            </summary>
            <param name = "start">The beginning of the specified portion of the array.</param>
        </member>
        <member name="M:Retyped.es5.Float32Array.slice(System.Double,System.Double)">
            <summary>
            Returns a section of an array.
            </summary>
            <param name = "start">The beginning of the specified portion of the array.</param>
            <param name = "end">The end of the specified portion of the array.</param>
        </member>
        <member name="M:Retyped.es5.Float32Array.some(Retyped.es5.Float32Array.someFn)">
            <summary>
            Determines whether the specified callback function returns true for any element of an array.
            the end of the array.
            </summary>
            <param name = "callbackfn">
            A function that accepts up to three arguments. The some method calls the
            callbackfn function for each element in array1 until the callbackfn returns true, or until
            </param>
        </member>
        <member name="M:Retyped.es5.Float32Array.some(Retyped.es5.Float32Array.someFn,System.Object)">
            <summary>
            Determines whether the specified callback function returns true for any element of an array.
            the end of the array.
            </summary>
            <param name = "callbackfn">
            A function that accepts up to three arguments. The some method calls the
            callbackfn function for each element in array1 until the callbackfn returns true, or until
            </param>
            <param name = "thisArg">
            An object to which the this keyword can refer in the callbackfn function.
            If thisArg is omitted, undefined is used as the this value.
            </param>
        </member>
        <member name="M:Retyped.es5.Float32Array.sort">
            <summary>
            Sorts an array.
            </summary>
        </member>
        <member name="M:Retyped.es5.Float32Array.sort(Retyped.es5.Float32Array.sortFn)">
            <summary>
            Sorts an array.
            </summary>
            <param name = "compareFn">
            The name of the function used to determine the order of the elements. If
            omitted, the elements are sorted in ascending, ASCII character order.
            </param>
        </member>
        <member name="M:Retyped.es5.Float32Array.subarray(System.Double)">
            <summary>
            Gets a new Float32Array view of the ArrayBuffer store for this array, referencing the elements
            at begin, inclusive, up to end, exclusive.
            </summary>
            <param name = "begin">The index of the beginning of the array.</param>
        </member>
        <member name="M:Retyped.es5.Float32Array.subarray(System.Double,System.Double)">
            <summary>
            Gets a new Float32Array view of the ArrayBuffer store for this array, referencing the elements
            at begin, inclusive, up to end, exclusive.
            </summary>
            <param name = "begin">The index of the beginning of the array.</param>
            <param name = "end">The index of the end of the array.</param>
        </member>
        <member name="M:Retyped.es5.Float32Array.toLocaleString">
            <summary>
            Converts a number to a string by using the current locale.
            </summary>
        </member>
        <member name="M:Retyped.es5.Float32Array.toString">
            <summary>
            Returns a string representation of an array.
            </summary>
        </member>
        <member name="P:Retyped.es5.Float32ArrayConstructor.BYTES_PER_ELEMENT">
            <summary>
            The size in bytes of each element in the array.
            </summary>
        </member>
        <member name="M:Retyped.es5.Float32ArrayConstructor.of(System.Double[])">
            <summary>
            Returns a new array from a set of elements.
            </summary>
            <param name = "items">A set of elements to include in the new array object.</param>
        </member>
        <member name="M:Retyped.es5.Float32ArrayConstructor.from(Retyped.es5.ArrayLike{System.Double})">
            <summary>
            Creates an array from an array-like or iterable object.
            </summary>
            <param name = "arrayLike">An array-like or iterable object to convert to an array.</param>
        </member>
        <member name="M:Retyped.es5.Float32ArrayConstructor.from(Retyped.es5.ArrayLike{System.Double},Retyped.es5.Float32ArrayConstructor.fromFn)">
            <summary>
            Creates an array from an array-like or iterable object.
            </summary>
            <param name = "arrayLike">An array-like or iterable object to convert to an array.</param>
            <param name = "mapfn">A mapping function to call on every element of the array.</param>
        </member>
        <member name="M:Retyped.es5.Float32ArrayConstructor.from(Retyped.es5.ArrayLike{System.Double},Retyped.es5.Float32ArrayConstructor.fromFn,System.Object)">
            <summary>
            Creates an array from an array-like or iterable object.
            </summary>
            <param name = "arrayLike">An array-like or iterable object to convert to an array.</param>
            <param name = "mapfn">A mapping function to call on every element of the array.</param>
            <param name = "thisArg">Value of 'this' used to invoke the mapfn.</param>
        </member>
        <member name="P:Retyped.es5.Float64Array.BYTES_PER_ELEMENT">
            <summary>
            The size in bytes of each element in the array.
            </summary>
        </member>
        <member name="P:Retyped.es5.Float64Array.buffer">
            <summary>
            The ArrayBuffer instance referenced by the array.
            </summary>
        </member>
        <member name="P:Retyped.es5.Float64Array.byteLength">
            <summary>
            The length in bytes of the array.
            </summary>
        </member>
        <member name="P:Retyped.es5.Float64Array.byteOffset">
            <summary>
            The offset in bytes of the array.
            </summary>
        </member>
        <member name="M:Retyped.es5.Float64Array.copyWithin(System.Double,System.Double)">
            <summary>
            Returns the this object after copying a section of the array identified by start and end
            to the same array starting at position target
            </summary>
            <param name = "target">
            If target is negative, it is treated as length+target where length is the
            length of the array.
            </param>
            <param name = "start">
            If start is negative, it is treated as length+start. If end is negative, it
            is treated as length+end.
            </param>
        </member>
        <member name="M:Retyped.es5.Float64Array.copyWithin(System.Double,System.Double,System.Double)">
            <summary>
            Returns the this object after copying a section of the array identified by start and end
            to the same array starting at position target
            </summary>
            <param name = "target">
            If target is negative, it is treated as length+target where length is the
            length of the array.
            </param>
            <param name = "start">
            If start is negative, it is treated as length+start. If end is negative, it
            is treated as length+end.
            </param>
            <param name = "end">If not specified, length of the this object is used as its default value.</param>
        </member>
        <member name="M:Retyped.es5.Float64Array.every(Retyped.es5.Float64Array.everyFn)">
            <summary>
            Determines whether all the members of an array satisfy the specified test.
            or until the end of the array.
            </summary>
            <param name = "callbackfn">
            A function that accepts up to three arguments. The every method calls
            the callbackfn function for each element in array1 until the callbackfn returns false,
            </param>
        </member>
        <member name="M:Retyped.es5.Float64Array.every(Retyped.es5.Float64Array.everyFn,System.Object)">
            <summary>
            Determines whether all the members of an array satisfy the specified test.
            or until the end of the array.
            </summary>
            <param name = "callbackfn">
            A function that accepts up to three arguments. The every method calls
            the callbackfn function for each element in array1 until the callbackfn returns false,
            </param>
            <param name = "thisArg">
            An object to which the this keyword can refer in the callbackfn function.
            If thisArg is omitted, undefined is used as the this value.
            </param>
        </member>
        <member name="M:Retyped.es5.Float64Array.fill(System.Double)">
            <summary>
            Returns the this object after filling the section identified by start and end with value
            </summary>
            <param name = "value">value to fill array section with</param>
        </member>
        <member name="M:Retyped.es5.Float64Array.fill(System.Double,System.Double)">
            <summary>
            Returns the this object after filling the section identified by start and end with value
            </summary>
            <param name = "value">value to fill array section with</param>
            <param name = "start">
            index to start filling the array at. If start is negative, it is treated as
            length+start where length is the length of the array.
            </param>
        </member>
        <member name="M:Retyped.es5.Float64Array.fill(System.Double,System.Double,System.Double)">
            <summary>
            Returns the this object after filling the section identified by start and end with value
            </summary>
            <param name = "value">value to fill array section with</param>
            <param name = "start">
            index to start filling the array at. If start is negative, it is treated as
            length+start where length is the length of the array.
            </param>
            <param name = "end">
            index to stop filling the array at. If end is negative, it is treated as
            length+end.
            </param>
        </member>
        <member name="M:Retyped.es5.Float64Array.filter(Retyped.es5.Float64Array.filterFn)">
            <summary>
            Returns the elements of an array that meet the condition specified in a callback function.
            </summary>
            <param name = "callbackfn">
            A function that accepts up to three arguments. The filter method calls
            the callbackfn function one time for each element in the array.
            </param>
        </member>
        <member name="M:Retyped.es5.Float64Array.filter(Retyped.es5.Float64Array.filterFn,System.Object)">
            <summary>
            Returns the elements of an array that meet the condition specified in a callback function.
            </summary>
            <param name = "callbackfn">
            A function that accepts up to three arguments. The filter method calls
            the callbackfn function one time for each element in the array.
            </param>
            <param name = "thisArg">
            An object to which the this keyword can refer in the callbackfn function.
            If thisArg is omitted, undefined is used as the this value.
            </param>
        </member>
        <member name="M:Retyped.es5.Float64Array.find(Retyped.es5.Float64Array.findFn)">
            <summary>
            Returns the value of the first element in the array where predicate is true, and undefined
            otherwise.
            immediately returns that element value. Otherwise, find returns undefined.
            </summary>
            <param name = "predicate">
            find calls predicate once for each element of the array, in ascending
            order, until it finds one where predicate returns true. If such an element is found, find
            </param>
        </member>
        <member name="M:Retyped.es5.Float64Array.find(Retyped.es5.Float64Array.findFn,System.Object)">
            <summary>
            Returns the value of the first element in the array where predicate is true, and undefined
            otherwise.
            immediately returns that element value. Otherwise, find returns undefined.
            </summary>
            <param name = "predicate">
            find calls predicate once for each element of the array, in ascending
            order, until it finds one where predicate returns true. If such an element is found, find
            </param>
            <param name = "thisArg">
            If provided, it will be used as the this value for each invocation of
            predicate. If it is not provided, undefined is used instead.
            </param>
        </member>
        <member name="M:Retyped.es5.Float64Array.findIndex(Retyped.es5.Float64Array.findIndexFn)">
            <summary>
            Returns the index of the first element in the array where predicate is true, and -1
            otherwise.
            findIndex immediately returns that element index. Otherwise, findIndex returns -1.
            </summary>
            <param name = "predicate">
            find calls predicate once for each element of the array, in ascending
            order, until it finds one where predicate returns true. If such an element is found,
            </param>
        </member>
        <member name="M:Retyped.es5.Float64Array.findIndex(Retyped.es5.Float64Array.findIndexFn,System.Object)">
            <summary>
            Returns the index of the first element in the array where predicate is true, and -1
            otherwise.
            findIndex immediately returns that element index. Otherwise, findIndex returns -1.
            </summary>
            <param name = "predicate">
            find calls predicate once for each element of the array, in ascending
            order, until it finds one where predicate returns true. If such an element is found,
            </param>
            <param name = "thisArg">
            If provided, it will be used as the this value for each invocation of
            predicate. If it is not provided, undefined is used instead.
            </param>
        </member>
        <member name="M:Retyped.es5.Float64Array.forEach(Retyped.es5.Float64Array.forEachFn)">
            <summary>
            Performs the specified action for each element in an array.
            </summary>
            <param name = "callbackfn">
            A function that accepts up to three arguments. forEach calls the
            callbackfn function one time for each element in the array.
            </param>
        </member>
        <member name="M:Retyped.es5.Float64Array.forEach(Retyped.es5.Float64Array.forEachFn,System.Object)">
            <summary>
            Performs the specified action for each element in an array.
            </summary>
            <param name = "callbackfn">
            A function that accepts up to three arguments. forEach calls the
            callbackfn function one time for each element in the array.
            </param>
            <param name = "thisArg">
            An object to which the this keyword can refer in the callbackfn function.
            If thisArg is omitted, undefined is used as the this value.
            </param>
        </member>
        <member name="M:Retyped.es5.Float64Array.indexOf(System.Double)">
            <summary>
            Returns the index of the first occurrence of a value in an array.
            </summary>
            <param name = "searchElement">The value to locate in the array.</param>
        </member>
        <member name="M:Retyped.es5.Float64Array.indexOf(System.Double,System.Double)">
            <summary>
            Returns the index of the first occurrence of a value in an array.
            </summary>
            <param name = "searchElement">The value to locate in the array.</param>
            <param name = "fromIndex">
            The array index at which to begin the search. If fromIndex is omitted, the
            search starts at index 0.
            </param>
        </member>
        <member name="M:Retyped.es5.Float64Array.join">
            <summary>
            Adds all the elements of an array separated by the specified separator string.
            </summary>
        </member>
        <member name="M:Retyped.es5.Float64Array.join(System.String)">
            <summary>
            Adds all the elements of an array separated by the specified separator string.
            </summary>
            <param name = "separator">
            A string used to separate one element of an array from the next in the
            resulting String. If omitted, the array elements are separated with a comma.
            </param>
        </member>
        <member name="M:Retyped.es5.Float64Array.lastIndexOf(System.Double)">
            <summary>
            Returns the index of the last occurrence of a value in an array.
            </summary>
            <param name = "searchElement">The value to locate in the array.</param>
        </member>
        <member name="M:Retyped.es5.Float64Array.lastIndexOf(System.Double,System.Double)">
            <summary>
            Returns the index of the last occurrence of a value in an array.
            </summary>
            <param name = "searchElement">The value to locate in the array.</param>
            <param name = "fromIndex">
            The array index at which to begin the search. If fromIndex is omitted, the
            search starts at index 0.
            </param>
        </member>
        <member name="P:Retyped.es5.Float64Array.length">
            <summary>
            The length of the array.
            </summary>
        </member>
        <member name="M:Retyped.es5.Float64Array.map(Retyped.es5.Float64Array.mapFn)">
            <summary>
            Calls a defined callback function on each element of an array, and returns an array that
            contains the results.
            </summary>
            <param name = "callbackfn">
            A function that accepts up to three arguments. The map method calls the
            callbackfn function one time for each element in the array.
            </param>
        </member>
        <member name="M:Retyped.es5.Float64Array.map(Retyped.es5.Float64Array.mapFn,System.Object)">
            <summary>
            Calls a defined callback function on each element of an array, and returns an array that
            contains the results.
            </summary>
            <param name = "callbackfn">
            A function that accepts up to three arguments. The map method calls the
            callbackfn function one time for each element in the array.
            </param>
            <param name = "thisArg">
            An object to which the this keyword can refer in the callbackfn function.
            If thisArg is omitted, undefined is used as the this value.
            </param>
        </member>
        <member name="M:Retyped.es5.Float64Array.reduce(Retyped.es5.Float64Array.reduceFn)">
            <summary>
            Calls the specified callback function for all the elements in an array. The return value of
            the callback function is the accumulated result, and is provided as an argument in the next
            call to the callback function.
            instead of an array value.
            </summary>
            <param name = "callbackfn">
            A function that accepts up to four arguments. The reduce method calls the
            callbackfn function one time for each element in the array.
            </param>
        </member>
        <member name="M:Retyped.es5.Float64Array.reduce(Retyped.es5.Float64Array.reduceFn,System.Double)">
            <summary>
            Calls the specified callback function for all the elements in an array. The return value of
            the callback function is the accumulated result, and is provided as an argument in the next
            call to the callback function.
            instead of an array value.
            </summary>
            <param name = "callbackfn">
            A function that accepts up to four arguments. The reduce method calls the
            callbackfn function one time for each element in the array.
            </param>
            <param name = "initialValue">
            If initialValue is specified, it is used as the initial value to start
            the accumulation. The first call to the callbackfn function provides this value as an argument
            </param>
        </member>
        <member name="M:Retyped.es5.Float64Array.reduce``1(Retyped.es5.Float64Array.reduceFn2{``0},``0)">
            <summary>
            Calls the specified callback function for all the elements in an array. The return value of
            the callback function is the accumulated result, and is provided as an argument in the next
            call to the callback function.
            instead of an array value.
            </summary>
            <param name = "callbackfn">
            A function that accepts up to four arguments. The reduce method calls the
            callbackfn function one time for each element in the array.
            </param>
            <param name = "initialValue">
            If initialValue is specified, it is used as the initial value to start
            the accumulation. The first call to the callbackfn function provides this value as an argument
            </param>
        </member>
        <member name="M:Retyped.es5.Float64Array.reduceRight(Retyped.es5.Float64Array.reduceRightFn)">
            <summary>
            Calls the specified callback function for all the elements in an array, in descending order.
            The return value of the callback function is the accumulated result, and is provided as an
            argument in the next call to the callback function.
            argument instead of an array value.
            </summary>
            <param name = "callbackfn">
            A function that accepts up to four arguments. The reduceRight method calls
            the callbackfn function one time for each element in the array.
            </param>
        </member>
        <member name="M:Retyped.es5.Float64Array.reduceRight(Retyped.es5.Float64Array.reduceRightFn,System.Double)">
            <summary>
            Calls the specified callback function for all the elements in an array, in descending order.
            The return value of the callback function is the accumulated result, and is provided as an
            argument in the next call to the callback function.
            argument instead of an array value.
            </summary>
            <param name = "callbackfn">
            A function that accepts up to four arguments. The reduceRight method calls
            the callbackfn function one time for each element in the array.
            </param>
            <param name = "initialValue">
            If initialValue is specified, it is used as the initial value to start
            the accumulation. The first call to the callbackfn function provides this value as an
            </param>
        </member>
        <member name="M:Retyped.es5.Float64Array.reduceRight``1(Retyped.es5.Float64Array.reduceRightFn2{``0},``0)">
            <summary>
            Calls the specified callback function for all the elements in an array, in descending order.
            The return value of the callback function is the accumulated result, and is provided as an
            argument in the next call to the callback function.
            instead of an array value.
            </summary>
            <param name = "callbackfn">
            A function that accepts up to four arguments. The reduceRight method calls
            the callbackfn function one time for each element in the array.
            </param>
            <param name = "initialValue">
            If initialValue is specified, it is used as the initial value to start
            the accumulation. The first call to the callbackfn function provides this value as an argument
            </param>
        </member>
        <member name="M:Retyped.es5.Float64Array.reverse">
            <summary>
            Reverses the elements in an Array.
            </summary>
        </member>
        <member name="M:Retyped.es5.Float64Array.set(Retyped.es5.ArrayLike{System.Double})">
            <summary>
            Sets a value or an array of values.
            </summary>
            <param name = "array">A typed or untyped array of values to set.</param>
        </member>
        <member name="M:Retyped.es5.Float64Array.set(Retyped.es5.ArrayLike{System.Double},System.Double)">
            <summary>
            Sets a value or an array of values.
            </summary>
            <param name = "array">A typed or untyped array of values to set.</param>
            <param name = "offset">The index in the current array at which the values are to be written.</param>
        </member>
        <member name="M:Retyped.es5.Float64Array.slice">
            <summary>
            Returns a section of an array.
            </summary>
        </member>
        <member name="M:Retyped.es5.Float64Array.slice(System.Double)">
            <summary>
            Returns a section of an array.
            </summary>
            <param name = "start">The beginning of the specified portion of the array.</param>
        </member>
        <member name="M:Retyped.es5.Float64Array.slice(System.Double,System.Double)">
            <summary>
            Returns a section of an array.
            </summary>
            <param name = "start">The beginning of the specified portion of the array.</param>
            <param name = "end">The end of the specified portion of the array.</param>
        </member>
        <member name="M:Retyped.es5.Float64Array.some(Retyped.es5.Float64Array.someFn)">
            <summary>
            Determines whether the specified callback function returns true for any element of an array.
            the end of the array.
            </summary>
            <param name = "callbackfn">
            A function that accepts up to three arguments. The some method calls the
            callbackfn function for each element in array1 until the callbackfn returns true, or until
            </param>
        </member>
        <member name="M:Retyped.es5.Float64Array.some(Retyped.es5.Float64Array.someFn,System.Object)">
            <summary>
            Determines whether the specified callback function returns true for any element of an array.
            the end of the array.
            </summary>
            <param name = "callbackfn">
            A function that accepts up to three arguments. The some method calls the
            callbackfn function for each element in array1 until the callbackfn returns true, or until
            </param>
            <param name = "thisArg">
            An object to which the this keyword can refer in the callbackfn function.
            If thisArg is omitted, undefined is used as the this value.
            </param>
        </member>
        <member name="M:Retyped.es5.Float64Array.sort">
            <summary>
            Sorts an array.
            </summary>
        </member>
        <member name="M:Retyped.es5.Float64Array.sort(Retyped.es5.Float64Array.sortFn)">
            <summary>
            Sorts an array.
            </summary>
            <param name = "compareFn">
            The name of the function used to determine the order of the elements. If
            omitted, the elements are sorted in ascending, ASCII character order.
            </param>
        </member>
        <member name="M:Retyped.es5.Float64Array.subarray(System.Double)">
            <summary>
            Gets a new Float64Array view of the ArrayBuffer store for this array, referencing the elements
            at begin, inclusive, up to end, exclusive.
            </summary>
            <param name = "begin">The index of the beginning of the array.</param>
        </member>
        <member name="M:Retyped.es5.Float64Array.subarray(System.Double,System.Double)">
            <summary>
            Gets a new Float64Array view of the ArrayBuffer store for this array, referencing the elements
            at begin, inclusive, up to end, exclusive.
            </summary>
            <param name = "begin">The index of the beginning of the array.</param>
            <param name = "end">The index of the end of the array.</param>
        </member>
        <member name="M:Retyped.es5.Float64Array.toLocaleString">
            <summary>
            Converts a number to a string by using the current locale.
            </summary>
        </member>
        <member name="M:Retyped.es5.Float64Array.toString">
            <summary>
            Returns a string representation of an array.
            </summary>
        </member>
        <member name="P:Retyped.es5.Float64ArrayConstructor.BYTES_PER_ELEMENT">
            <summary>
            The size in bytes of each element in the array.
            </summary>
        </member>
        <member name="M:Retyped.es5.Float64ArrayConstructor.of(System.Double[])">
            <summary>
            Returns a new array from a set of elements.
            </summary>
            <param name = "items">A set of elements to include in the new array object.</param>
        </member>
        <member name="M:Retyped.es5.Float64ArrayConstructor.from(Retyped.es5.ArrayLike{System.Double})">
            <summary>
            Creates an array from an array-like or iterable object.
            </summary>
            <param name = "arrayLike">An array-like or iterable object to convert to an array.</param>
        </member>
        <member name="M:Retyped.es5.Float64ArrayConstructor.from(Retyped.es5.ArrayLike{System.Double},Retyped.es5.Float64ArrayConstructor.fromFn)">
            <summary>
            Creates an array from an array-like or iterable object.
            </summary>
            <param name = "arrayLike">An array-like or iterable object to convert to an array.</param>
            <param name = "mapfn">A mapping function to call on every element of the array.</param>
        </member>
        <member name="M:Retyped.es5.Float64ArrayConstructor.from(Retyped.es5.ArrayLike{System.Double},Retyped.es5.Float64ArrayConstructor.fromFn,System.Object)">
            <summary>
            Creates an array from an array-like or iterable object.
            </summary>
            <param name = "arrayLike">An array-like or iterable object to convert to an array.</param>
            <param name = "mapfn">A mapping function to call on every element of the array.</param>
            <param name = "thisArg">Value of 'this' used to invoke the mapfn.</param>
        </member>
        <member name="T:Retyped.es5.Intl">
            ECMAScript Internationalization API
        </member>
        <member name="T:Retyped.es5.Partial`1">
            <summary>
            Make all properties in T optional
            </summary>
        </member>
        <member name="T:Retyped.es5.Required`1">
            <summary>
            Make all properties in T required
            </summary>
        </member>
        <member name="T:Retyped.es5.Readonly`1">
            <summary>
            Make all properties in T readonly
            </summary>
        </member>
        <member name="T:Retyped.es5.Pick`2">
            <summary>
            From T pick a set of properties K
            </summary>
        </member>
        <member name="T:Retyped.es5.Record`2">
            <summary>
            Construct a type with a set of properties K of type T
            </summary>
        </member>
        <member name="T:Retyped.es5.Exclude`2">
            <summary>
            Exclude from T those types that are assignable to U
            </summary>
        </member>
        <member name="T:Retyped.es5.Extract`2">
            <summary>
            Extract from T those types that are assignable to U
            </summary>
        </member>
        <member name="T:Retyped.es5.NonNullable`1">
            <summary>
            Exclude null and undefined from T
            </summary>
        </member>
        <member name="T:Retyped.es5.ReturnType`1">
            <summary>
            Obtain the return type of a function type
            </summary>
        </member>
        <member name="T:Retyped.es5.InstanceType`1">
            <summary>
            Obtain the return type of a constructor function type
            </summary>
        </member>
        <member name="P:Retyped.Primitive.Object.Interface.constructor">
            <summary>
            The initial value of Object.prototype.constructor is the standard built-in Object constructor.
            </summary>
        </member>
        <member name="M:Retyped.Primitive.Object.Interface.toString">
            <summary>
            Returns a string representation of an object.
            </summary>
        </member>
        <member name="M:Retyped.Primitive.Object.Interface.toLocaleString">
            <summary>
            Returns a date converted to a string using the current locale.
            </summary>
        </member>
        <member name="M:Retyped.Primitive.Object.Interface.valueOf">
            <summary>
            Returns the primitive value of the specified object.
            </summary>
        </member>
        <member name="M:Retyped.Primitive.Object.Interface.hasOwnProperty(System.String)">
            <summary>
            Determines whether an object has a property with the specified name.
            </summary>
            <param name = "v">A property name.</param>
        </member>
        <member name="M:Retyped.Primitive.Object.Interface.isPrototypeOf(Retyped.Primitive.Object)">
            <summary>
            Determines whether an object exists in another object's prototype chain.
            </summary>
            <param name = "v">Another object whose prototype chain is to be checked.</param>
        </member>
        <member name="M:Retyped.Primitive.Object.Interface.propertyIsEnumerable(System.String)">
            <summary>
            Determines whether a specified property is enumerable.
            </summary>
            <param name = "v">A property name.</param>
        </member>
        <member name="P:Retyped.Primitive.Object.constructor">
            <summary>
            The initial value of Object.prototype.constructor is the standard built-in Object constructor.
            </summary>
        </member>
        <member name="M:Retyped.Primitive.Object.toString">
            <summary>
            Returns a string representation of an object.
            </summary>
        </member>
        <member name="M:Retyped.Primitive.Object.toLocaleString">
            <summary>
            Returns a date converted to a string using the current locale.
            </summary>
        </member>
        <member name="M:Retyped.Primitive.Object.valueOf">
            <summary>
            Returns the primitive value of the specified object.
            </summary>
        </member>
        <member name="M:Retyped.Primitive.Object.hasOwnProperty(System.String)">
            <summary>
            Determines whether an object has a property with the specified name.
            </summary>
            <param name = "v">A property name.</param>
        </member>
        <member name="M:Retyped.Primitive.Object.isPrototypeOf(Retyped.Primitive.Object)">
            <summary>
            Determines whether an object exists in another object's prototype chain.
            </summary>
            <param name = "v">Another object whose prototype chain is to be checked.</param>
        </member>
        <member name="M:Retyped.Primitive.Object.propertyIsEnumerable(System.String)">
            <summary>
            Determines whether a specified property is enumerable.
            </summary>
            <param name = "v">A property name.</param>
        </member>
        <member name="P:Retyped.Primitive.ObjectConstructor.prototype">
            <summary>
            A reference to the prototype for a class of objects.
            </summary>
        </member>
        <member name="M:Retyped.Primitive.ObjectConstructor.getPrototypeOf(System.Object)">
            <summary>
            Returns the prototype of an object.
            </summary>
            <param name = "o">The object that references the prototype.</param>
        </member>
        <member name="M:Retyped.Primitive.ObjectConstructor.getOwnPropertyDescriptor(System.Object,System.String)">
            <summary>
            Gets the own property descriptor of the specified object.
            An own property descriptor is one that is defined directly on the object and is not inherited from the object's prototype.
            </summary>
            <param name = "o">Object that contains the property.</param>
            <param name = "p">Name of the property.</param>
        </member>
        <member name="M:Retyped.Primitive.ObjectConstructor.getOwnPropertyNames(System.Object)">
            <summary>
            Returns the names of the own properties of an object. The own properties of an object are those that are defined directly
            on that object, and are not inherited from the object's prototype. The properties of an object include both fields (objects) and functions.
            </summary>
            <param name = "o">Object that contains the own properties.</param>
        </member>
        <member name="M:Retyped.Primitive.ObjectConstructor.create(Retyped.IObject)">
            <summary>
            Creates an object that has the specified prototype or that has null prototype.
            </summary>
            <param name = "o">Object to use as a prototype. May be null.</param>
        </member>
        <member name="M:Retyped.Primitive.ObjectConstructor.create(Retyped.IObject,Bridge.Intersection{Retyped.es5.PropertyDescriptorMap,Retyped.es5.ThisType{System.Object}})">
            <summary>
            Creates an object that has the specified prototype, and that optionally contains specified properties.
            </summary>
            <param name = "o">Object to use as a prototype. May be null</param>
            <param name = "properties">JavaScript object that contains one or more property descriptors.</param>
        </member>
        <member name="M:Retyped.Primitive.ObjectConstructor.defineProperty(System.Object,System.String,Bridge.Intersection{Retyped.es5.PropertyDescriptor,Retyped.es5.ThisType{System.Object}})">
            <summary>
            Adds a property to an object, or modifies attributes of an existing property.
            </summary>
            <param name = "o">Object on which to add or modify the property. This can be a native JavaScript object (that is, a user-defined object or a built in object) or a DOM object.</param>
            <param name = "p">The property name.</param>
            <param name = "attributes">Descriptor for the property. It can be for a data property or an accessor property.</param>
        </member>
        <member name="M:Retyped.Primitive.ObjectConstructor.defineProperties(System.Object,Bridge.Intersection{Retyped.es5.PropertyDescriptorMap,Retyped.es5.ThisType{System.Object}})">
            <summary>
            Adds one or more properties to an object, and/or modifies attributes of existing properties.
            </summary>
            <param name = "o">Object on which to add or modify the properties. This can be a native JavaScript object or a DOM object.</param>
            <param name = "properties">JavaScript object that contains one or more descriptor objects. Each descriptor object describes a data property or an accessor property.</param>
        </member>
        <member name="M:Retyped.Primitive.ObjectConstructor.seal``1(``0)">
            <summary>
            Prevents the modification of attributes of existing properties, and prevents the addition of new properties.
            </summary>
            <param name = "o">Object on which to lock the attributes.</param>
        </member>
        <member name="M:Retyped.Primitive.ObjectConstructor.freeze``1(``0[])">
            <summary>
            Prevents the modification of existing property attributes and values, and prevents the addition of new properties.
            </summary>
        </member>
        <member name="M:Retyped.Primitive.ObjectConstructor.freeze``1(``0)">
            <summary>
            Prevents the modification of existing property attributes and values, and prevents the addition of new properties.
            </summary>
        </member>
        <member name="M:Retyped.Primitive.ObjectConstructor.freeze2``1(``0)">
            <summary>
            Prevents the modification of existing property attributes and values, and prevents the addition of new properties.
            </summary>
            <param name = "o">Object on which to lock the attributes.</param>
        </member>
        <member name="M:Retyped.Primitive.ObjectConstructor.preventExtensions``1(``0)">
            <summary>
            Prevents the addition of new properties to an object.
            </summary>
            <param name = "o">Object to make non-extensible.</param>
        </member>
        <member name="M:Retyped.Primitive.ObjectConstructor.isSealed(System.Object)">
            <summary>
            Returns true if existing property attributes cannot be modified in an object and new properties cannot be added to the object.
            </summary>
            <param name = "o">Object to test.</param>
        </member>
        <member name="M:Retyped.Primitive.ObjectConstructor.isFrozen(System.Object)">
            <summary>
            Returns true if existing property attributes and values cannot be modified in an object, and new properties cannot be added to the object.
            </summary>
            <param name = "o">Object to test.</param>
        </member>
        <member name="M:Retyped.Primitive.ObjectConstructor.isExtensible(System.Object)">
            <summary>
            Returns a value that indicates whether new properties can be added to an object.
            </summary>
            <param name = "o">Object to test.</param>
        </member>
        <member name="M:Retyped.Primitive.ObjectConstructor.keys(System.Object)">
            <summary>
            Returns the names of the enumerable properties and methods of an object.
            </summary>
            <param name = "o">Object that contains the properties and methods. This can be an object that you created or an existing Document Object Model (DOM) object.</param>
        </member>
        <member name="M:Retyped.Primitive.String.Interface.toString">
            <summary>
            Returns a string representation of a string.
            </summary>
        </member>
        <member name="M:Retyped.Primitive.String.Interface.charAt(System.Double)">
            <summary>
            Returns the character at the specified index.
            </summary>
            <param name = "pos">The zero-based index of the desired character.</param>
        </member>
        <member name="M:Retyped.Primitive.String.Interface.charCodeAt(System.Double)">
            <summary>
            Returns the Unicode value of the character at the specified location.
            </summary>
            <param name = "index">The zero-based index of the desired character. If there is no character at the specified index, NaN is returned.</param>
        </member>
        <member name="M:Retyped.Primitive.String.Interface.concat(System.String[])">
            <summary>
            Returns a string that contains the concatenation of two or more strings.
            </summary>
            <param name = "strings">The strings to append to the end of the string.</param>
        </member>
        <member name="M:Retyped.Primitive.String.Interface.indexOf(System.String)">
            <summary>
            Returns the position of the first occurrence of a substring.
            </summary>
            <param name = "searchString">The substring to search for in the string</param>
        </member>
        <member name="M:Retyped.Primitive.String.Interface.indexOf(System.String,System.Double)">
            <summary>
            Returns the position of the first occurrence of a substring.
            </summary>
            <param name = "searchString">The substring to search for in the string</param>
            <param name = "position">The index at which to begin searching the String object. If omitted, search starts at the beginning of the string.</param>
        </member>
        <member name="M:Retyped.Primitive.String.Interface.lastIndexOf(System.String)">
            <summary>
            Returns the last occurrence of a substring in the string.
            </summary>
            <param name = "searchString">The substring to search for.</param>
        </member>
        <member name="M:Retyped.Primitive.String.Interface.lastIndexOf(System.String,System.Double)">
            <summary>
            Returns the last occurrence of a substring in the string.
            </summary>
            <param name = "searchString">The substring to search for.</param>
            <param name = "position">The index at which to begin searching. If omitted, the search begins at the end of the string.</param>
        </member>
        <member name="M:Retyped.Primitive.String.Interface.localeCompare(System.String)">
            <summary>
            Determines whether two strings are equivalent in the current locale.
            </summary>
            <param name = "that">String to compare to target string</param>
        </member>
        <member name="M:Retyped.Primitive.String.Interface.match(Bridge.Union{System.String,Retyped.es5.RegExp})">
            <summary>
            Matches a string with a regular expression, and returns an array containing the results of that search.
            </summary>
            <param name = "regexp">A variable name or string literal containing the regular expression pattern and flags.</param>
        </member>
        <member name="M:Retyped.Primitive.String.Interface.match(System.String)">
            <summary>
            Matches a string with a regular expression, and returns an array containing the results of that search.
            </summary>
            <param name = "regexp">A variable name or string literal containing the regular expression pattern and flags.</param>
        </member>
        <member name="M:Retyped.Primitive.String.Interface.match(Retyped.es5.RegExp)">
            <summary>
            Matches a string with a regular expression, and returns an array containing the results of that search.
            </summary>
            <param name = "regexp">A variable name or string literal containing the regular expression pattern and flags.</param>
        </member>
        <member name="M:Retyped.Primitive.String.Interface.replace(Bridge.Union{System.String,Retyped.es5.RegExp},System.String)">
            <summary>
            Replaces text in a string, using a regular expression or search string.
            </summary>
            <param name = "searchValue">A string to search for.</param>
            <param name = "replaceValue">A string containing the text to replace for every successful match of searchValue in this string.</param>
        </member>
        <member name="M:Retyped.Primitive.String.Interface.replace(System.String,System.String)">
            <summary>
            Replaces text in a string, using a regular expression or search string.
            </summary>
            <param name = "searchValue">A string to search for.</param>
            <param name = "replaceValue">A string containing the text to replace for every successful match of searchValue in this string.</param>
        </member>
        <member name="M:Retyped.Primitive.String.Interface.replace(Retyped.es5.RegExp,System.String)">
            <summary>
            Replaces text in a string, using a regular expression or search string.
            </summary>
            <param name = "searchValue">A string to search for.</param>
            <param name = "replaceValue">A string containing the text to replace for every successful match of searchValue in this string.</param>
        </member>
        <member name="M:Retyped.Primitive.String.Interface.replace(Bridge.Union{System.String,Retyped.es5.RegExp},Retyped.Primitive.String.replaceFn)">
            <summary>
            Replaces text in a string, using a regular expression or search string.
            </summary>
            <param name = "searchValue">A string to search for.</param>
            <param name = "replacer">A function that returns the replacement text.</param>
        </member>
        <member name="M:Retyped.Primitive.String.Interface.replace(System.String,Retyped.Primitive.String.replaceFn)">
            <summary>
            Replaces text in a string, using a regular expression or search string.
            </summary>
            <param name = "searchValue">A string to search for.</param>
            <param name = "replacer">A function that returns the replacement text.</param>
        </member>
        <member name="M:Retyped.Primitive.String.Interface.replace(Retyped.es5.RegExp,Retyped.Primitive.String.replaceFn)">
            <summary>
            Replaces text in a string, using a regular expression or search string.
            </summary>
            <param name = "searchValue">A string to search for.</param>
            <param name = "replacer">A function that returns the replacement text.</param>
        </member>
        <member name="M:Retyped.Primitive.String.Interface.search(Bridge.Union{System.String,Retyped.es5.RegExp})">
            <summary>
            Finds the first substring match in a regular expression search.
            </summary>
            <param name = "regexp">The regular expression pattern and applicable flags.</param>
        </member>
        <member name="M:Retyped.Primitive.String.Interface.search(System.String)">
            <summary>
            Finds the first substring match in a regular expression search.
            </summary>
            <param name = "regexp">The regular expression pattern and applicable flags.</param>
        </member>
        <member name="M:Retyped.Primitive.String.Interface.search(Retyped.es5.RegExp)">
            <summary>
            Finds the first substring match in a regular expression search.
            </summary>
            <param name = "regexp">The regular expression pattern and applicable flags.</param>
        </member>
        <member name="M:Retyped.Primitive.String.Interface.slice">
            <summary>
            Returns a section of a string.
            </summary>
        </member>
        <member name="M:Retyped.Primitive.String.Interface.slice(System.Double)">
            <summary>
            Returns a section of a string.
            </summary>
            <param name = "start">The index to the beginning of the specified portion of stringObj.</param>
        </member>
        <member name="M:Retyped.Primitive.String.Interface.slice(System.Double,System.Double)">
            <summary>
            Returns a section of a string.
            </summary>
            <param name = "start">The index to the beginning of the specified portion of stringObj.</param>
            <param name = "end">
            The index to the end of the specified portion of stringObj. The substring includes the characters up to, but not including, the character indicated by end.
            If this value is not specified, the substring continues to the end of stringObj.
            </param>
        </member>
        <member name="M:Retyped.Primitive.String.Interface.split(Bridge.Union{System.String,Retyped.es5.RegExp})">
            <summary>
            Split a string into substrings using the specified separator and return them as an array.
            </summary>
            <param name = "separator">A string that identifies character or characters to use in separating the string. If omitted, a single-element array containing the entire string is returned.</param>
        </member>
        <member name="M:Retyped.Primitive.String.Interface.split(System.String)">
            <summary>
            Split a string into substrings using the specified separator and return them as an array.
            </summary>
            <param name = "separator">A string that identifies character or characters to use in separating the string. If omitted, a single-element array containing the entire string is returned.</param>
        </member>
        <member name="M:Retyped.Primitive.String.Interface.split(Retyped.es5.RegExp)">
            <summary>
            Split a string into substrings using the specified separator and return them as an array.
            </summary>
            <param name = "separator">A string that identifies character or characters to use in separating the string. If omitted, a single-element array containing the entire string is returned.</param>
        </member>
        <member name="M:Retyped.Primitive.String.Interface.split(Bridge.Union{System.String,Retyped.es5.RegExp},System.Double)">
            <summary>
            Split a string into substrings using the specified separator and return them as an array.
            </summary>
            <param name = "separator">A string that identifies character or characters to use in separating the string. If omitted, a single-element array containing the entire string is returned.</param>
            <param name = "limit">A value used to limit the number of elements returned in the array.</param>
        </member>
        <member name="M:Retyped.Primitive.String.Interface.split(System.String,System.Double)">
            <summary>
            Split a string into substrings using the specified separator and return them as an array.
            </summary>
            <param name = "separator">A string that identifies character or characters to use in separating the string. If omitted, a single-element array containing the entire string is returned.</param>
            <param name = "limit">A value used to limit the number of elements returned in the array.</param>
        </member>
        <member name="M:Retyped.Primitive.String.Interface.split(Retyped.es5.RegExp,System.Double)">
            <summary>
            Split a string into substrings using the specified separator and return them as an array.
            </summary>
            <param name = "separator">A string that identifies character or characters to use in separating the string. If omitted, a single-element array containing the entire string is returned.</param>
            <param name = "limit">A value used to limit the number of elements returned in the array.</param>
        </member>
        <member name="M:Retyped.Primitive.String.Interface.substring(System.Double)">
            <summary>
            Returns the substring at the specified location within a String object.
            </summary>
            <param name = "start">The zero-based index number indicating the beginning of the substring.</param>
        </member>
        <member name="M:Retyped.Primitive.String.Interface.substring(System.Double,System.Double)">
            <summary>
            Returns the substring at the specified location within a String object.
            </summary>
            <param name = "start">The zero-based index number indicating the beginning of the substring.</param>
            <param name = "end">
            Zero-based index number indicating the end of the substring. The substring includes the characters up to, but not including, the character indicated by end.
            If end is omitted, the characters from start through the end of the original string are returned.
            </param>
        </member>
        <member name="M:Retyped.Primitive.String.Interface.toLowerCase">
            <summary>
            Converts all the alphabetic characters in a string to lowercase.
            </summary>
        </member>
        <member name="M:Retyped.Primitive.String.Interface.toLocaleLowerCase">
            <summary>
            Converts all alphabetic characters to lowercase, taking into account the host environment's current locale.
            </summary>
        </member>
        <member name="M:Retyped.Primitive.String.Interface.toUpperCase">
            <summary>
            Converts all the alphabetic characters in a string to uppercase.
            </summary>
        </member>
        <member name="M:Retyped.Primitive.String.Interface.toLocaleUpperCase">
            <summary>
            Returns a string where all alphabetic characters have been converted to uppercase, taking into account the host environment's current locale.
            </summary>
        </member>
        <member name="M:Retyped.Primitive.String.Interface.trim">
            <summary>
            Removes the leading and trailing white space and line terminator characters from a string.
            </summary>
        </member>
        <member name="P:Retyped.Primitive.String.Interface.length">
            <summary>
            Returns the length of a String object.
            </summary>
        </member>
        <member name="M:Retyped.Primitive.String.Interface.substr(System.Double)">
            <summary>
            Gets a substring beginning at the specified location and having the specified length.
            </summary>
            <param name = "from">The starting position of the desired substring. The index of the first character in the string is zero.</param>
        </member>
        <member name="M:Retyped.Primitive.String.Interface.substr(System.Double,System.Double)">
            <summary>
            Gets a substring beginning at the specified location and having the specified length.
            </summary>
            <param name = "from">The starting position of the desired substring. The index of the first character in the string is zero.</param>
            <param name = "length">The number of characters to include in the returned substring.</param>
        </member>
        <member name="M:Retyped.Primitive.String.Interface.valueOf">
            <summary>
            Returns the primitive value of the specified object.
            </summary>
        </member>
        <member name="M:Retyped.Primitive.String.Interface.localeCompare(System.String,Bridge.Union{System.String,System.String[]})">
            <summary>
            Determines whether two strings are equivalent in the current or specified locale.
            </summary>
            <param name = "that">String to compare to target string</param>
            <param name = "locales">A locale string or array of locale strings that contain one or more language or locale tags. If you include more than one locale string, list them in descending order of priority so that the first entry is the preferred locale. If you omit this parameter, the default locale of the JavaScript runtime is used. This parameter must conform to BCP 47 standards; see the Intl.Collator object for details.</param>
        </member>
        <member name="M:Retyped.Primitive.String.Interface.localeCompare(System.String,System.String)">
            <summary>
            Determines whether two strings are equivalent in the current or specified locale.
            </summary>
            <param name = "that">String to compare to target string</param>
            <param name = "locales">A locale string or array of locale strings that contain one or more language or locale tags. If you include more than one locale string, list them in descending order of priority so that the first entry is the preferred locale. If you omit this parameter, the default locale of the JavaScript runtime is used. This parameter must conform to BCP 47 standards; see the Intl.Collator object for details.</param>
        </member>
        <member name="M:Retyped.Primitive.String.Interface.localeCompare(System.String,System.String[])">
            <summary>
            Determines whether two strings are equivalent in the current or specified locale.
            </summary>
            <param name = "that">String to compare to target string</param>
            <param name = "locales">A locale string or array of locale strings that contain one or more language or locale tags. If you include more than one locale string, list them in descending order of priority so that the first entry is the preferred locale. If you omit this parameter, the default locale of the JavaScript runtime is used. This parameter must conform to BCP 47 standards; see the Intl.Collator object for details.</param>
        </member>
        <member name="M:Retyped.Primitive.String.Interface.localeCompare(System.String,Bridge.Union{System.String,System.String[]},Retyped.es5.Intl.CollatorOptions)">
            <summary>
            Determines whether two strings are equivalent in the current or specified locale.
            </summary>
            <param name = "that">String to compare to target string</param>
            <param name = "locales">A locale string or array of locale strings that contain one or more language or locale tags. If you include more than one locale string, list them in descending order of priority so that the first entry is the preferred locale. If you omit this parameter, the default locale of the JavaScript runtime is used. This parameter must conform to BCP 47 standards; see the Intl.Collator object for details.</param>
            <param name = "options">An object that contains one or more properties that specify comparison options. see the Intl.Collator object for details.</param>
        </member>
        <member name="M:Retyped.Primitive.String.Interface.localeCompare(System.String,System.String,Retyped.es5.Intl.CollatorOptions)">
            <summary>
            Determines whether two strings are equivalent in the current or specified locale.
            </summary>
            <param name = "that">String to compare to target string</param>
            <param name = "locales">A locale string or array of locale strings that contain one or more language or locale tags. If you include more than one locale string, list them in descending order of priority so that the first entry is the preferred locale. If you omit this parameter, the default locale of the JavaScript runtime is used. This parameter must conform to BCP 47 standards; see the Intl.Collator object for details.</param>
            <param name = "options">An object that contains one or more properties that specify comparison options. see the Intl.Collator object for details.</param>
        </member>
        <member name="M:Retyped.Primitive.String.Interface.localeCompare(System.String,System.String[],Retyped.es5.Intl.CollatorOptions)">
            <summary>
            Determines whether two strings are equivalent in the current or specified locale.
            </summary>
            <param name = "that">String to compare to target string</param>
            <param name = "locales">A locale string or array of locale strings that contain one or more language or locale tags. If you include more than one locale string, list them in descending order of priority so that the first entry is the preferred locale. If you omit this parameter, the default locale of the JavaScript runtime is used. This parameter must conform to BCP 47 standards; see the Intl.Collator object for details.</param>
            <param name = "options">An object that contains one or more properties that specify comparison options. see the Intl.Collator object for details.</param>
        </member>
        <member name="M:Retyped.Primitive.String.toString">
            <summary>
            Returns a string representation of a string.
            </summary>
        </member>
        <member name="M:Retyped.Primitive.String.charAt(System.Double)">
            <summary>
            Returns the character at the specified index.
            </summary>
            <param name = "pos">The zero-based index of the desired character.</param>
        </member>
        <member name="M:Retyped.Primitive.String.charCodeAt(System.Double)">
            <summary>
            Returns the Unicode value of the character at the specified location.
            </summary>
            <param name = "index">The zero-based index of the desired character. If there is no character at the specified index, NaN is returned.</param>
        </member>
        <member name="M:Retyped.Primitive.String.concat(System.String[])">
            <summary>
            Returns a string that contains the concatenation of two or more strings.
            </summary>
            <param name = "strings">The strings to append to the end of the string.</param>
        </member>
        <member name="M:Retyped.Primitive.String.indexOf(System.String)">
            <summary>
            Returns the position of the first occurrence of a substring.
            </summary>
            <param name = "searchString">The substring to search for in the string</param>
        </member>
        <member name="M:Retyped.Primitive.String.indexOf(System.String,System.Double)">
            <summary>
            Returns the position of the first occurrence of a substring.
            </summary>
            <param name = "searchString">The substring to search for in the string</param>
            <param name = "position">The index at which to begin searching the String object. If omitted, search starts at the beginning of the string.</param>
        </member>
        <member name="M:Retyped.Primitive.String.lastIndexOf(System.String)">
            <summary>
            Returns the last occurrence of a substring in the string.
            </summary>
            <param name = "searchString">The substring to search for.</param>
        </member>
        <member name="M:Retyped.Primitive.String.lastIndexOf(System.String,System.Double)">
            <summary>
            Returns the last occurrence of a substring in the string.
            </summary>
            <param name = "searchString">The substring to search for.</param>
            <param name = "position">The index at which to begin searching. If omitted, the search begins at the end of the string.</param>
        </member>
        <member name="M:Retyped.Primitive.String.localeCompare(System.String)">
            <summary>
            Determines whether two strings are equivalent in the current locale.
            </summary>
            <param name = "that">String to compare to target string</param>
        </member>
        <member name="M:Retyped.Primitive.String.match(Bridge.Union{System.String,Retyped.es5.RegExp})">
            <summary>
            Matches a string with a regular expression, and returns an array containing the results of that search.
            </summary>
            <param name = "regexp">A variable name or string literal containing the regular expression pattern and flags.</param>
        </member>
        <member name="M:Retyped.Primitive.String.match(System.String)">
            <summary>
            Matches a string with a regular expression, and returns an array containing the results of that search.
            </summary>
            <param name = "regexp">A variable name or string literal containing the regular expression pattern and flags.</param>
        </member>
        <member name="M:Retyped.Primitive.String.match(Retyped.es5.RegExp)">
            <summary>
            Matches a string with a regular expression, and returns an array containing the results of that search.
            </summary>
            <param name = "regexp">A variable name or string literal containing the regular expression pattern and flags.</param>
        </member>
        <member name="M:Retyped.Primitive.String.replace(Bridge.Union{System.String,Retyped.es5.RegExp},System.String)">
            <summary>
            Replaces text in a string, using a regular expression or search string.
            </summary>
            <param name = "searchValue">A string to search for.</param>
            <param name = "replaceValue">A string containing the text to replace for every successful match of searchValue in this string.</param>
        </member>
        <member name="M:Retyped.Primitive.String.replace(System.String,System.String)">
            <summary>
            Replaces text in a string, using a regular expression or search string.
            </summary>
            <param name = "searchValue">A string to search for.</param>
            <param name = "replaceValue">A string containing the text to replace for every successful match of searchValue in this string.</param>
        </member>
        <member name="M:Retyped.Primitive.String.replace(Retyped.es5.RegExp,System.String)">
            <summary>
            Replaces text in a string, using a regular expression or search string.
            </summary>
            <param name = "searchValue">A string to search for.</param>
            <param name = "replaceValue">A string containing the text to replace for every successful match of searchValue in this string.</param>
        </member>
        <member name="M:Retyped.Primitive.String.replace(Bridge.Union{System.String,Retyped.es5.RegExp},Retyped.Primitive.String.replaceFn)">
            <summary>
            Replaces text in a string, using a regular expression or search string.
            </summary>
            <param name = "searchValue">A string to search for.</param>
            <param name = "replacer">A function that returns the replacement text.</param>
        </member>
        <member name="M:Retyped.Primitive.String.replace(System.String,Retyped.Primitive.String.replaceFn)">
            <summary>
            Replaces text in a string, using a regular expression or search string.
            </summary>
            <param name = "searchValue">A string to search for.</param>
            <param name = "replacer">A function that returns the replacement text.</param>
        </member>
        <member name="M:Retyped.Primitive.String.replace(Retyped.es5.RegExp,Retyped.Primitive.String.replaceFn)">
            <summary>
            Replaces text in a string, using a regular expression or search string.
            </summary>
            <param name = "searchValue">A string to search for.</param>
            <param name = "replacer">A function that returns the replacement text.</param>
        </member>
        <member name="M:Retyped.Primitive.String.search(Bridge.Union{System.String,Retyped.es5.RegExp})">
            <summary>
            Finds the first substring match in a regular expression search.
            </summary>
            <param name = "regexp">The regular expression pattern and applicable flags.</param>
        </member>
        <member name="M:Retyped.Primitive.String.search(System.String)">
            <summary>
            Finds the first substring match in a regular expression search.
            </summary>
            <param name = "regexp">The regular expression pattern and applicable flags.</param>
        </member>
        <member name="M:Retyped.Primitive.String.search(Retyped.es5.RegExp)">
            <summary>
            Finds the first substring match in a regular expression search.
            </summary>
            <param name = "regexp">The regular expression pattern and applicable flags.</param>
        </member>
        <member name="M:Retyped.Primitive.String.slice">
            <summary>
            Returns a section of a string.
            </summary>
        </member>
        <member name="M:Retyped.Primitive.String.slice(System.Double)">
            <summary>
            Returns a section of a string.
            </summary>
            <param name = "start">The index to the beginning of the specified portion of stringObj.</param>
        </member>
        <member name="M:Retyped.Primitive.String.slice(System.Double,System.Double)">
            <summary>
            Returns a section of a string.
            </summary>
            <param name = "start">The index to the beginning of the specified portion of stringObj.</param>
            <param name = "end">
            The index to the end of the specified portion of stringObj. The substring includes the characters up to, but not including, the character indicated by end.
            If this value is not specified, the substring continues to the end of stringObj.
            </param>
        </member>
        <member name="M:Retyped.Primitive.String.split(Bridge.Union{System.String,Retyped.es5.RegExp})">
            <summary>
            Split a string into substrings using the specified separator and return them as an array.
            </summary>
            <param name = "separator">A string that identifies character or characters to use in separating the string. If omitted, a single-element array containing the entire string is returned.</param>
        </member>
        <member name="M:Retyped.Primitive.String.split(System.String)">
            <summary>
            Split a string into substrings using the specified separator and return them as an array.
            </summary>
            <param name = "separator">A string that identifies character or characters to use in separating the string. If omitted, a single-element array containing the entire string is returned.</param>
        </member>
        <member name="M:Retyped.Primitive.String.split(Retyped.es5.RegExp)">
            <summary>
            Split a string into substrings using the specified separator and return them as an array.
            </summary>
            <param name = "separator">A string that identifies character or characters to use in separating the string. If omitted, a single-element array containing the entire string is returned.</param>
        </member>
        <member name="M:Retyped.Primitive.String.split(Bridge.Union{System.String,Retyped.es5.RegExp},System.Double)">
            <summary>
            Split a string into substrings using the specified separator and return them as an array.
            </summary>
            <param name = "separator">A string that identifies character or characters to use in separating the string. If omitted, a single-element array containing the entire string is returned.</param>
            <param name = "limit">A value used to limit the number of elements returned in the array.</param>
        </member>
        <member name="M:Retyped.Primitive.String.split(System.String,System.Double)">
            <summary>
            Split a string into substrings using the specified separator and return them as an array.
            </summary>
            <param name = "separator">A string that identifies character or characters to use in separating the string. If omitted, a single-element array containing the entire string is returned.</param>
            <param name = "limit">A value used to limit the number of elements returned in the array.</param>
        </member>
        <member name="M:Retyped.Primitive.String.split(Retyped.es5.RegExp,System.Double)">
            <summary>
            Split a string into substrings using the specified separator and return them as an array.
            </summary>
            <param name = "separator">A string that identifies character or characters to use in separating the string. If omitted, a single-element array containing the entire string is returned.</param>
            <param name = "limit">A value used to limit the number of elements returned in the array.</param>
        </member>
        <member name="M:Retyped.Primitive.String.substring(System.Double)">
            <summary>
            Returns the substring at the specified location within a String object.
            </summary>
            <param name = "start">The zero-based index number indicating the beginning of the substring.</param>
        </member>
        <member name="M:Retyped.Primitive.String.substring(System.Double,System.Double)">
            <summary>
            Returns the substring at the specified location within a String object.
            </summary>
            <param name = "start">The zero-based index number indicating the beginning of the substring.</param>
            <param name = "end">
            Zero-based index number indicating the end of the substring. The substring includes the characters up to, but not including, the character indicated by end.
            If end is omitted, the characters from start through the end of the original string are returned.
            </param>
        </member>
        <member name="M:Retyped.Primitive.String.toLowerCase">
            <summary>
            Converts all the alphabetic characters in a string to lowercase.
            </summary>
        </member>
        <member name="M:Retyped.Primitive.String.toLocaleLowerCase">
            <summary>
            Converts all alphabetic characters to lowercase, taking into account the host environment's current locale.
            </summary>
        </member>
        <member name="M:Retyped.Primitive.String.toUpperCase">
            <summary>
            Converts all the alphabetic characters in a string to uppercase.
            </summary>
        </member>
        <member name="M:Retyped.Primitive.String.toLocaleUpperCase">
            <summary>
            Returns a string where all alphabetic characters have been converted to uppercase, taking into account the host environment's current locale.
            </summary>
        </member>
        <member name="M:Retyped.Primitive.String.trim">
            <summary>
            Removes the leading and trailing white space and line terminator characters from a string.
            </summary>
        </member>
        <member name="P:Retyped.Primitive.String.length">
            <summary>
            Returns the length of a String object.
            </summary>
        </member>
        <member name="M:Retyped.Primitive.String.substr(System.Double)">
            <summary>
            Gets a substring beginning at the specified location and having the specified length.
            </summary>
            <param name = "from">The starting position of the desired substring. The index of the first character in the string is zero.</param>
        </member>
        <member name="M:Retyped.Primitive.String.substr(System.Double,System.Double)">
            <summary>
            Gets a substring beginning at the specified location and having the specified length.
            </summary>
            <param name = "from">The starting position of the desired substring. The index of the first character in the string is zero.</param>
            <param name = "length">The number of characters to include in the returned substring.</param>
        </member>
        <member name="M:Retyped.Primitive.String.valueOf">
            <summary>
            Returns the primitive value of the specified object.
            </summary>
        </member>
        <member name="M:Retyped.Primitive.String.localeCompare(System.String,Bridge.Union{System.String,System.String[]})">
            <summary>
            Determines whether two strings are equivalent in the current or specified locale.
            </summary>
            <param name = "that">String to compare to target string</param>
            <param name = "locales">A locale string or array of locale strings that contain one or more language or locale tags. If you include more than one locale string, list them in descending order of priority so that the first entry is the preferred locale. If you omit this parameter, the default locale of the JavaScript runtime is used. This parameter must conform to BCP 47 standards; see the Intl.Collator object for details.</param>
        </member>
        <member name="M:Retyped.Primitive.String.localeCompare(System.String,System.String)">
            <summary>
            Determines whether two strings are equivalent in the current or specified locale.
            </summary>
            <param name = "that">String to compare to target string</param>
            <param name = "locales">A locale string or array of locale strings that contain one or more language or locale tags. If you include more than one locale string, list them in descending order of priority so that the first entry is the preferred locale. If you omit this parameter, the default locale of the JavaScript runtime is used. This parameter must conform to BCP 47 standards; see the Intl.Collator object for details.</param>
        </member>
        <member name="M:Retyped.Primitive.String.localeCompare(System.String,System.String[])">
            <summary>
            Determines whether two strings are equivalent in the current or specified locale.
            </summary>
            <param name = "that">String to compare to target string</param>
            <param name = "locales">A locale string or array of locale strings that contain one or more language or locale tags. If you include more than one locale string, list them in descending order of priority so that the first entry is the preferred locale. If you omit this parameter, the default locale of the JavaScript runtime is used. This parameter must conform to BCP 47 standards; see the Intl.Collator object for details.</param>
        </member>
        <member name="M:Retyped.Primitive.String.localeCompare(System.String,Bridge.Union{System.String,System.String[]},Retyped.es5.Intl.CollatorOptions)">
            <summary>
            Determines whether two strings are equivalent in the current or specified locale.
            </summary>
            <param name = "that">String to compare to target string</param>
            <param name = "locales">A locale string or array of locale strings that contain one or more language or locale tags. If you include more than one locale string, list them in descending order of priority so that the first entry is the preferred locale. If you omit this parameter, the default locale of the JavaScript runtime is used. This parameter must conform to BCP 47 standards; see the Intl.Collator object for details.</param>
            <param name = "options">An object that contains one or more properties that specify comparison options. see the Intl.Collator object for details.</param>
        </member>
        <member name="M:Retyped.Primitive.String.localeCompare(System.String,System.String,Retyped.es5.Intl.CollatorOptions)">
            <summary>
            Determines whether two strings are equivalent in the current or specified locale.
            </summary>
            <param name = "that">String to compare to target string</param>
            <param name = "locales">A locale string or array of locale strings that contain one or more language or locale tags. If you include more than one locale string, list them in descending order of priority so that the first entry is the preferred locale. If you omit this parameter, the default locale of the JavaScript runtime is used. This parameter must conform to BCP 47 standards; see the Intl.Collator object for details.</param>
            <param name = "options">An object that contains one or more properties that specify comparison options. see the Intl.Collator object for details.</param>
        </member>
        <member name="M:Retyped.Primitive.String.localeCompare(System.String,System.String[],Retyped.es5.Intl.CollatorOptions)">
            <summary>
            Determines whether two strings are equivalent in the current or specified locale.
            </summary>
            <param name = "that">String to compare to target string</param>
            <param name = "locales">A locale string or array of locale strings that contain one or more language or locale tags. If you include more than one locale string, list them in descending order of priority so that the first entry is the preferred locale. If you omit this parameter, the default locale of the JavaScript runtime is used. This parameter must conform to BCP 47 standards; see the Intl.Collator object for details.</param>
            <param name = "options">An object that contains one or more properties that specify comparison options. see the Intl.Collator object for details.</param>
        </member>
        <member name="M:Retyped.Primitive.Number.Interface.toString">
            <summary>
            Returns a string representation of an object.
            </summary>
        </member>
        <member name="M:Retyped.Primitive.Number.Interface.toString(System.Double)">
            <summary>
            Returns a string representation of an object.
            </summary>
            <param name = "radix">Specifies a radix for converting numeric values to strings. This value is only used for numbers.</param>
        </member>
        <member name="M:Retyped.Primitive.Number.Interface.toFixed">
            <summary>
            Returns a string representing a number in fixed-point notation.
            </summary>
        </member>
        <member name="M:Retyped.Primitive.Number.Interface.toFixed(System.Double)">
            <summary>
            Returns a string representing a number in fixed-point notation.
            </summary>
            <param name = "fractionDigits">Number of digits after the decimal point. Must be in the range 0 - 20, inclusive.</param>
        </member>
        <member name="M:Retyped.Primitive.Number.Interface.toExponential">
            <summary>
            Returns a string containing a number represented in exponential notation.
            </summary>
        </member>
        <member name="M:Retyped.Primitive.Number.Interface.toExponential(System.Double)">
            <summary>
            Returns a string containing a number represented in exponential notation.
            </summary>
            <param name = "fractionDigits">Number of digits after the decimal point. Must be in the range 0 - 20, inclusive.</param>
        </member>
        <member name="M:Retyped.Primitive.Number.Interface.toPrecision">
            <summary>
            Returns a string containing a number represented either in exponential or fixed-point notation with a specified number of digits.
            </summary>
        </member>
        <member name="M:Retyped.Primitive.Number.Interface.toPrecision(System.Double)">
            <summary>
            Returns a string containing a number represented either in exponential or fixed-point notation with a specified number of digits.
            </summary>
            <param name = "precision">Number of significant digits. Must be in the range 1 - 21, inclusive.</param>
        </member>
        <member name="M:Retyped.Primitive.Number.Interface.valueOf">
            <summary>
            Returns the primitive value of the specified object.
            </summary>
        </member>
        <member name="M:Retyped.Primitive.Number.Interface.toLocaleString">
            <summary>
            Converts a number to a string by using the current or specified locale.
            </summary>
        </member>
        <member name="M:Retyped.Primitive.Number.Interface.toLocaleString(Bridge.Union{System.String,System.String[]})">
            <summary>
            Converts a number to a string by using the current or specified locale.
            </summary>
            <param name = "locales">A locale string or array of locale strings that contain one or more language or locale tags. If you include more than one locale string, list them in descending order of priority so that the first entry is the preferred locale. If you omit this parameter, the default locale of the JavaScript runtime is used.</param>
        </member>
        <member name="M:Retyped.Primitive.Number.Interface.toLocaleString(System.String)">
            <summary>
            Converts a number to a string by using the current or specified locale.
            </summary>
            <param name = "locales">A locale string or array of locale strings that contain one or more language or locale tags. If you include more than one locale string, list them in descending order of priority so that the first entry is the preferred locale. If you omit this parameter, the default locale of the JavaScript runtime is used.</param>
        </member>
        <member name="M:Retyped.Primitive.Number.Interface.toLocaleString(System.String[])">
            <summary>
            Converts a number to a string by using the current or specified locale.
            </summary>
            <param name = "locales">A locale string or array of locale strings that contain one or more language or locale tags. If you include more than one locale string, list them in descending order of priority so that the first entry is the preferred locale. If you omit this parameter, the default locale of the JavaScript runtime is used.</param>
        </member>
        <member name="M:Retyped.Primitive.Number.Interface.toLocaleString(Bridge.Union{System.String,System.String[]},Retyped.es5.Intl.NumberFormatOptions)">
            <summary>
            Converts a number to a string by using the current or specified locale.
            </summary>
            <param name = "locales">A locale string or array of locale strings that contain one or more language or locale tags. If you include more than one locale string, list them in descending order of priority so that the first entry is the preferred locale. If you omit this parameter, the default locale of the JavaScript runtime is used.</param>
            <param name = "options">An object that contains one or more properties that specify comparison options.</param>
        </member>
        <member name="M:Retyped.Primitive.Number.Interface.toLocaleString(System.String,Retyped.es5.Intl.NumberFormatOptions)">
            <summary>
            Converts a number to a string by using the current or specified locale.
            </summary>
            <param name = "locales">A locale string or array of locale strings that contain one or more language or locale tags. If you include more than one locale string, list them in descending order of priority so that the first entry is the preferred locale. If you omit this parameter, the default locale of the JavaScript runtime is used.</param>
            <param name = "options">An object that contains one or more properties that specify comparison options.</param>
        </member>
        <member name="M:Retyped.Primitive.Number.Interface.toLocaleString(System.String[],Retyped.es5.Intl.NumberFormatOptions)">
            <summary>
            Converts a number to a string by using the current or specified locale.
            </summary>
            <param name = "locales">A locale string or array of locale strings that contain one or more language or locale tags. If you include more than one locale string, list them in descending order of priority so that the first entry is the preferred locale. If you omit this parameter, the default locale of the JavaScript runtime is used.</param>
            <param name = "options">An object that contains one or more properties that specify comparison options.</param>
        </member>
        <member name="M:Retyped.Primitive.Number.toString">
            <summary>
            Returns a string representation of an object.
            </summary>
        </member>
        <member name="M:Retyped.Primitive.Number.toString(System.Double)">
            <summary>
            Returns a string representation of an object.
            </summary>
            <param name = "radix">Specifies a radix for converting numeric values to strings. This value is only used for numbers.</param>
        </member>
        <member name="M:Retyped.Primitive.Number.toFixed">
            <summary>
            Returns a string representing a number in fixed-point notation.
            </summary>
        </member>
        <member name="M:Retyped.Primitive.Number.toFixed(System.Double)">
            <summary>
            Returns a string representing a number in fixed-point notation.
            </summary>
            <param name = "fractionDigits">Number of digits after the decimal point. Must be in the range 0 - 20, inclusive.</param>
        </member>
        <member name="M:Retyped.Primitive.Number.toExponential">
            <summary>
            Returns a string containing a number represented in exponential notation.
            </summary>
        </member>
        <member name="M:Retyped.Primitive.Number.toExponential(System.Double)">
            <summary>
            Returns a string containing a number represented in exponential notation.
            </summary>
            <param name = "fractionDigits">Number of digits after the decimal point. Must be in the range 0 - 20, inclusive.</param>
        </member>
        <member name="M:Retyped.Primitive.Number.toPrecision">
            <summary>
            Returns a string containing a number represented either in exponential or fixed-point notation with a specified number of digits.
            </summary>
        </member>
        <member name="M:Retyped.Primitive.Number.toPrecision(System.Double)">
            <summary>
            Returns a string containing a number represented either in exponential or fixed-point notation with a specified number of digits.
            </summary>
            <param name = "precision">Number of significant digits. Must be in the range 1 - 21, inclusive.</param>
        </member>
        <member name="M:Retyped.Primitive.Number.valueOf">
            <summary>
            Returns the primitive value of the specified object.
            </summary>
        </member>
        <member name="M:Retyped.Primitive.Number.toLocaleString">
            <summary>
            Converts a number to a string by using the current or specified locale.
            </summary>
        </member>
        <member name="M:Retyped.Primitive.Number.toLocaleString(Bridge.Union{System.String,System.String[]})">
            <summary>
            Converts a number to a string by using the current or specified locale.
            </summary>
            <param name = "locales">A locale string or array of locale strings that contain one or more language or locale tags. If you include more than one locale string, list them in descending order of priority so that the first entry is the preferred locale. If you omit this parameter, the default locale of the JavaScript runtime is used.</param>
        </member>
        <member name="M:Retyped.Primitive.Number.toLocaleString(System.String)">
            <summary>
            Converts a number to a string by using the current or specified locale.
            </summary>
            <param name = "locales">A locale string or array of locale strings that contain one or more language or locale tags. If you include more than one locale string, list them in descending order of priority so that the first entry is the preferred locale. If you omit this parameter, the default locale of the JavaScript runtime is used.</param>
        </member>
        <member name="M:Retyped.Primitive.Number.toLocaleString(System.String[])">
            <summary>
            Converts a number to a string by using the current or specified locale.
            </summary>
            <param name = "locales">A locale string or array of locale strings that contain one or more language or locale tags. If you include more than one locale string, list them in descending order of priority so that the first entry is the preferred locale. If you omit this parameter, the default locale of the JavaScript runtime is used.</param>
        </member>
        <member name="M:Retyped.Primitive.Number.toLocaleString(Bridge.Union{System.String,System.String[]},Retyped.es5.Intl.NumberFormatOptions)">
            <summary>
            Converts a number to a string by using the current or specified locale.
            </summary>
            <param name = "locales">A locale string or array of locale strings that contain one or more language or locale tags. If you include more than one locale string, list them in descending order of priority so that the first entry is the preferred locale. If you omit this parameter, the default locale of the JavaScript runtime is used.</param>
            <param name = "options">An object that contains one or more properties that specify comparison options.</param>
        </member>
        <member name="M:Retyped.Primitive.Number.toLocaleString(System.String,Retyped.es5.Intl.NumberFormatOptions)">
            <summary>
            Converts a number to a string by using the current or specified locale.
            </summary>
            <param name = "locales">A locale string or array of locale strings that contain one or more language or locale tags. If you include more than one locale string, list them in descending order of priority so that the first entry is the preferred locale. If you omit this parameter, the default locale of the JavaScript runtime is used.</param>
            <param name = "options">An object that contains one or more properties that specify comparison options.</param>
        </member>
        <member name="M:Retyped.Primitive.Number.toLocaleString(System.String[],Retyped.es5.Intl.NumberFormatOptions)">
            <summary>
            Converts a number to a string by using the current or specified locale.
            </summary>
            <param name = "locales">A locale string or array of locale strings that contain one or more language or locale tags. If you include more than one locale string, list them in descending order of priority so that the first entry is the preferred locale. If you omit this parameter, the default locale of the JavaScript runtime is used.</param>
            <param name = "options">An object that contains one or more properties that specify comparison options.</param>
        </member>
        <member name="P:Retyped.Primitive.NumberConstructor.MAX_VALUE">
            <summary>
            The largest number that can be represented in JavaScript. Equal to approximately 1.79E+308.
            </summary>
        </member>
        <member name="P:Retyped.Primitive.NumberConstructor.MIN_VALUE">
            <summary>
            The closest number to zero that can be represented in JavaScript. Equal to approximately 5.00E-324.
            </summary>
        </member>
        <member name="P:Retyped.Primitive.NumberConstructor.NaN">
            <summary>
            A value that is not a number.
            In equality comparisons, NaN does not equal any value, including itself. To test whether a value is equivalent to NaN, use the isNaN function.
            </summary>
        </member>
        <member name="P:Retyped.Primitive.NumberConstructor.NEGATIVE_INFINITY">
            <summary>
            A value that is less than the largest negative number that can be represented in JavaScript.
            JavaScript displays NEGATIVE_INFINITY values as -infinity.
            </summary>
        </member>
        <member name="P:Retyped.Primitive.NumberConstructor.POSITIVE_INFINITY">
            <summary>
            A value greater than the largest number that can be represented in JavaScript.
            JavaScript displays POSITIVE_INFINITY values as infinity.
            </summary>
        </member>
        <member name="M:Retyped.Primitive.Boolean.Interface.valueOf">
            <summary>
            Returns the primitive value of the specified object.
            </summary>
        </member>
        <member name="M:Retyped.Primitive.Boolean.valueOf">
            <summary>
            Returns the primitive value of the specified object.
            </summary>
        </member>
    </members>
</doc>
